{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"README","text":"<pre><code>int main()\n{\n    printf(\"Hello World\");\n    return 0;\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/","title":"ADS","text":""},{"location":"ADS/ADS%20notebook/notebook/#chapter-1-avl-tree-splay-tree-amortized-analysis","title":"Chapter 1: AVL Tree &amp; Splay Tree &amp; Amortized Analysis","text":""},{"location":"ADS/ADS%20notebook/notebook/#avl-trees","title":"AVL Trees","text":""},{"location":"ADS/ADS%20notebook/notebook/#defination","title":"Defination","text":"<p>The height of an empty tree is defined to be -1 </p> <p>An empty binary tree is height balanced.  If T is a nonempty binary tree with T<sub>L</sub> and T<sub>R</sub> as its left and right subtrees, then T is height balanced if 1. T<sub>L</sub> and T<sub>R</sub> are height balanced 2. |h<sub>L</sub> - h<sub>R</sub>| &lt;= 1 </p> <p>The balance factor BF(node) = h<sub>L</sub> - h<sub>R</sub>; In an AVL tree, BF(node) = -1, 0 or 1</p>"},{"location":"ADS/ADS%20notebook/notebook/#implementation","title":"Implementation","text":"<ul> <li>Single Rotation  </li> <li>LL Rotation </li> <li>RR Rotation </li> <li>Double Rotation  </li> <li>LR Rotation </li> <li>RL Rotation </li> </ul> <p>Trouble finder: The lowest unbalanced node  </p>"},{"location":"ADS/ADS%20notebook/notebook/#time-complexity","title":"Time Complexity","text":"<p>T = O(h) Let n<sub>h</sub> be the minimum number of nodes in a height balanced tree of height h. Then the tree must look like:  </p> <p></p> <p>Fibonacci number theory gives that:   </p> <p></p>"},{"location":"ADS/ADS%20notebook/notebook/#coding","title":"Coding","text":""},{"location":"ADS/ADS%20notebook/notebook/#structure-define","title":"Structure Define","text":"<pre><code>struct AvlNode\n{\n    ElementType Element;\n    AvlTree  Left;\n    AvlTree  Right;\n    int      Height;\n};\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#height","title":"Height","text":"<pre><code>static int\nHeight( Position P )\n{\n    if( P == NULL )\n        return -1;\n    else\n        return P-&gt;Height;\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#single-rotation-with-leftll-rotation","title":"Single Rotation With Left(LL Rotation)","text":"<pre><code>static Position\nSingleRotateWithLeft( Position K2 )  // K2 is grandfather\n{\n    Position K1;  // K1 is parent\n\n    K1 = K2-&gt;Left;\n    K2-&gt;Left = K1-&gt;Right;\n    K1-&gt;Right = K2;\n\n    K2-&gt;Height = Max( Height( K2-&gt;Left ), Height( K2-&gt;Right ) ) + 1;  // Don't forget \"+1\"\n    K1-&gt;Height = Max( Height( K1-&gt;Left ), K2-&gt;Height ) + 1;\n\n    return K1;  /* New root */\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#single-rotation-with-right","title":"Single Rotation With Right","text":"<pre><code>static Position\nSingleRotateWithRight( Position K1 )\n{\n    Position K2;\n\n    K2 = K1-&gt;Right;\n    K1-&gt;Right = K2-&gt;Left;\n    K2-&gt;Left = K1;\n\n    K1-&gt;Height = Max( Height( K1-&gt;Left ), Height( K1-&gt;Right ) ) + 1;\n    K2-&gt;Height = Max( Height( K2-&gt;Right ), K1-&gt;Height ) + 1;\n\n    return K2;  /* New root */\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#double-rotation-with-left","title":"Double Rotation With Left","text":"<pre><code>static Position\nDoubleRotateWithLeft( Position K3 )  // K3 is grandfather\n{\n    /* Rotate between K1 and K2 */\n    K3-&gt;Left = SingleRotateWithRight( K3-&gt;Left );\n\n    /* Rotate between K3 and K2 */\n    return SingleRotateWithLeft( K3 );\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#double-rotation-with-right","title":"Double Rotation With Right","text":"<pre><code>static Position\nDoubleRotateWithRight( Position K1 )\n{\n    /* Rotate between K3 and K2 */\n    K1-&gt;Right = SingleRotateWithLeft( K1-&gt;Right );\n\n    /* Rotate between K1 and K2 */\n    return SingleRotateWithRight( K1 );\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#insert","title":"Insert","text":"<pre><code>AvlTree\nInsert( ElementType X, AvlTree T )\n{\n    if( T == NULL )\n    {\n        /* Create and return a one-node tree */\n        T = malloc( sizeof( struct AvlNode ) );\n        if( T == NULL )\n            FatalError( \"Out of space!!!\" );\n        else\n        {  // End of recursion to create a leaf node\n            T-&gt;Element = X; T-&gt;Height = 0;\n            T-&gt;Left = T-&gt;Right = NULL;\n        }\n    }\n    else\n    if( X &lt; T-&gt;Element )\n    {\n        T-&gt;Left = Insert( X, T-&gt;Left );\n        if( Height( T-&gt;Left ) - Height( T-&gt;Right ) == 2 )\n            if( X &lt; T-&gt;Left-&gt;Element )\n                T = SingleRotateWithLeft( T );\n            else\n                T = DoubleRotateWithLeft( T );\n    }\n    else\n    if( X &gt; T-&gt;Element )\n    {\n        T-&gt;Right = Insert( X, T-&gt;Right );\n        if( Height( T-&gt;Right ) - Height( T-&gt;Left ) == 2 )\n            if( X &gt; T-&gt;Right-&gt;Element )\n                T = SingleRotateWithRight( T );\n            else\n                T = DoubleRotateWithRight( T );\n    }\n    /* Else X is in the tree already; we'll do nothing */\n\n    T-&gt;Height = Max( Height( T-&gt;Left ), Height( T-&gt;Right ) ) + 1;\n    return T;\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#splay-trees","title":"Splay Trees","text":""},{"location":"ADS/ADS%20notebook/notebook/#defination_1","title":"Defination","text":"<p>After a node is accessed, it is pushed to the root a series of AVL tree rotations  </p> <p>Target: Any M consecutive tree operations starting from an empty tree take at most O(MlogN) time  </p> <p>easy to implement, no extra space, adaptive(continuous access)  </p>"},{"location":"ADS/ADS%20notebook/notebook/#implementation_1","title":"Implementation","text":""},{"location":"ADS/ADS%20notebook/notebook/#splayx","title":"Splay(X)","text":"<p>For any nonroot node X, denote its parent by P and gradparent by G:  </p> <p>case 1(zig): P is the root -&gt; Rotate X and P  </p> <p>case 2: P is not the root - zig-zag ==&gt; double rotation(same as AVL) </p> <ul> <li>zig-zig ==&gt; single rotation(different from AVL) </li> </ul>"},{"location":"ADS/ADS%20notebook/notebook/#findkey","title":"Findkey","text":"<ol> <li>find as in BST  </li> <li>splay the found node </li> </ol>"},{"location":"ADS/ADS%20notebook/notebook/#insert_1","title":"Insert","text":"<ol> <li>insert as in BST  </li> <li>splay the new node </li> </ol>"},{"location":"ADS/ADS%20notebook/notebook/#deletex","title":"Delete(X)","text":"<ol> <li>Find(X) -&gt; X will be at the root  </li> <li>Remove(X)  </li> <li>FindMax(T<sub>L</sub>) -&gt; The largest element will be the root of T<sub>L</sub>, and has no right child </li> <li>Make T<sub>R</sub> the right child of the root of T<sub>L</sub> </li> </ol>"},{"location":"ADS/ADS%20notebook/notebook/#coding_1","title":"Coding","text":""},{"location":"ADS/ADS%20notebook/notebook/#structure-define_1","title":"Structure Define","text":"<pre><code>struct SplayNode\n{\n    ElementType Element;\n    SplayTree      Left;\n    SplayTree      Right;\n};\n\ntypedef struct SplayNode *Position;\nstatic Position NullNode = NULL;  /* Needs initialization */\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#splay","title":"Splay","text":"<pre><code>SplayTree\nSplay( ElementType Item, Position X )\n{\n    static struct SplayNode Header;\n    Position LeftTreeMax, RightTreeMin;\n\n    Header.Left = Header.Right = NullNode;\n    LeftTreeMax = RightTreeMin = &amp;Header;\n    NullNode-&gt;Element = Item;\n\n    while( Item != X-&gt;Element )\n    {\n        if( Item &lt; X-&gt;Element )\n        {\n            if( Item &lt; X-&gt;Left-&gt;Element )\n                X = SingleRotateWithLeft( X );\n            if( X-&gt;Left == NullNode )\n                break;\n            /* Link right */\n            RightTreeMin-&gt;Left = X;\n            RightTreeMin = X;\n            X = X-&gt;Left;\n        }\n        else\n        {\n            if( Item &gt; X-&gt;Right-&gt;Element )\n                X = SingleRotateWithRight( X );\n            if( X-&gt;Right == NullNode )\n                break;\n            /* Link left */\n            LeftTreeMax-&gt;Right = X;\n            LeftTreeMax = X;\n            X = X-&gt;Right;\n        }\n    }  /* while Item != X-&gt;Element */\n\n    /* Reassemble */\n    LeftTreeMax-&gt;Right = X-&gt;Left;\n    RightTreeMin-&gt;Left = X-&gt;Right;\n    X-&gt;Left = Header.Right;\n    X-&gt;Right = Header.Left;\n\n    return X;\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#delete","title":"Delete","text":"<pre><code>SplayTree\nRemove( ElementType Item, SplayTree T )\n{\n    Position NewTree;\n\n    if( T != NullNode )\n    {\n        T = Splay( Item, T );\n        if( Item == T-&gt;Element )\n        {\n            /* Found it! */\n            if( T-&gt;Left == NullNode )\n                NewTree = T-&gt;Right;\n            else\n            {\n                NewTree = T-&gt;Left;\n                NewTree = Splay( Item, NewTree );\n                NewTree-&gt;Right = T-&gt;Right;\n            }\n            free( T );\n            T = NewTree;\n        }\n    }\n\n    return T;\n}\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#amortized-analysis","title":"Amortized Analysis","text":"<p>consider the worst-case running time for any sequence of M operations </p> <p>Target: Any M consecutive operations (from initial stat) take at most O(MlogN) time -- Amortized time bound </p> <p>worst-case bound &gt;= amortized bound &gt;= average-case bound </p>"},{"location":"ADS/ADS%20notebook/notebook/#aggregate-analysis","title":"Aggregate analysis","text":"<p>e.g. Stack with MultiPop </p> <p>Consider a sequence of n Push, Pop and MultiPop operations on an initially empty stack</p> <p>T<sub>amortized</sub> = O(n)/n = O(1)  </p>"},{"location":"ADS/ADS%20notebook/notebook/#accounting-method","title":"Accounting method","text":"<p>When an operation's amortized cost c<sub>i</sub>_hat exceeds its actual cost c<sub>i</sub>, we assign the difference to specific objects in the data structure ad credit </p> <p>Credit can help pay for later operations whose amortized cost is less than their actual cost  </p> <p></p> <p>e.g.  </p> <p></p>"},{"location":"ADS/ADS%20notebook/notebook/#potential-method","title":"Potential method","text":"<p>Take a closer look at the credit --  </p> <p></p> <p>We call the \\(\\phi\\) potential function </p> <p> </p> <p>In general, a good potential function should always assume its minimum at the start of the sequence(like 0) </p> <p>e.g.  </p> <p> </p>"},{"location":"ADS/ADS%20notebook/notebook/#analysis-on-the-splay-tree","title":"Analysis On the Splay Tree","text":"<p>[Theorem] The amortized time to splay a tree with root T at node X is at most 3(R(T) - R(X)) + 1 = O(logN) </p> <p> </p> <p>To sum up Amortized bound: Average cost for M consecutive operation from some initial state Credit(Accounting method): The different between the amortized costs and actual costs Potential(Potential method): A function of the state of the data structure. \\(\\phi\\)(S) represents work that has been paid for but not yet performed  </p>"},{"location":"ADS/ADS%20notebook/notebook/#chapter-2-red-blcak-tree-b-tree","title":"Chapter 2: Red-Blcak Tree &amp; B+ Tree","text":""},{"location":"ADS/ADS%20notebook/notebook/#red-black-trees","title":"Red-Black Trees","text":"<p>\u7ea2\u9ed1\u6811 - \u5b9a\u4e49, \u63d2\u5165, \u6784\u5efa \u7ea2\u9ed1\u6811 - \u5220\u9664</p>"},{"location":"ADS/ADS%20notebook/notebook/#definition","title":"Definition","text":"<ol> <li>node color: red or black  </li> <li>root is black  </li> <li>leaves(NIL) is black  </li> <li>children of red must be black  </li> <li>for each node v, all descending paths from v to leaves contain the same number of black nodes  </li> </ol> <p>Height: called the black height of v: bh(v)[excluding v] bh(T) = bh(root)  </p> <p> </p> <p> </p> <p>Lemma\uff1a 1. A red-black tree with N internal nodes has height at most 2ln(N + 1). 2. bh(Tree) &gt;= h(Tree) / 2  3. The subtree of node x has at least 2<sup>bh(x)</sup> - 1 internal nodes. \u7ea2\u9ed1\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790</p>"},{"location":"ADS/ADS%20notebook/notebook/#implementation_2","title":"Implementation","text":""},{"location":"ADS/ADS%20notebook/notebook/#insert_2","title":"Insert","text":"<ol> <li>insert it as in BST  </li> <li>mark the new node red </li> </ol> <p>case 1: parent is black ==&gt; Done  </p> <p>case 2: parent is red &amp; uncle is red  </p> <p> - parent &amp; uncle &amp; grandparent change color - check grandparent  </p> <p>case 3: parent is red &amp; uncle is black  </p> <p></p> <ul> <li>(LL, LR, RL, RR) rotation  </li> <li>change the rotated node and rotation center(grandparent &amp; parent)  </li> </ul> <p>symmetric as the same  </p>"},{"location":"ADS/ADS%20notebook/notebook/#delete_1","title":"Delete","text":""},{"location":"ADS/ADS%20notebook/notebook/#simple-delete","title":"Simple Delete","text":"<p>as if in BST(only change the key, keep the color) ==&gt; u(the node should be deleted) has no child or has only one child, u is black and the child is red </p>"},{"location":"ADS/ADS%20notebook/notebook/#adjustment","title":"Adjustment","text":"<p>x is the problem node(suppose x on the left, symmetric as the same)</p> <ul> <li> <p>x is red ==&gt; Done  </p> </li> <li> <p>x is black ==&gt; Must add 1 black to the path of the replacing node </p> </li> </ul> <p>case 1: x's sibling(w) is red ==&gt; change parent &amp; w'color + rotate towards x  </p> <p> </p> <p>case 2: w is black &amp; w's children are all black ==&gt; change w into red - case 2.1: parent is red ==&gt; change parent into black - case 2.2: parent is black ==&gt; x change into its parent, continue to add 1 black to the path of x(new x)  </p> <p> </p> <p>case 3: w is black &amp; w's left child is red &amp; right child is black ==&gt; change w into red + do RR Rotation ==&gt; case 4 </p> <p>case 4: w is black &amp; w's right child is red ==&gt; color change: w's right child into black, w into parent's color, parent into black + parent rotate towards x  </p> <p> </p> <p>e.g.  </p> <p> </p> <p>Number of rotations |   |AVL|Red-Black Tree| |---|---|--------------| |Insertion|&lt;=2|&lt;=2| |Deletion|O(logN)|&lt;=3|</p>"},{"location":"ADS/ADS%20notebook/notebook/#b-tree","title":"B+ Tree","text":""},{"location":"ADS/ADS%20notebook/notebook/#definition_1","title":"Definition","text":"<p>A B+ tree of order M is an M-ary tree with the following properties:  </p> <ol> <li>The data items are stored at leaves  </li> <li>The nonleaf nodes store up to M - 1 keys to guide the searching; key i represents the smallest key in subtree i + 1  </li> <li>The root is either a leaf or has between 2 and M children  </li> <li>All nonleaf nodes(excpet the root) have betweeen [M / 2] and M children(fanout of an internal node); for root is between 2 and M  </li> <li>All leaves are at the same depth and have between [M / 2] and M data items; for root being the leaf is between 1 and M  </li> </ol> <p> </p> <p> </p>"},{"location":"ADS/ADS%20notebook/notebook/#chapter-3-inverted-file-index","title":"Chapter 3: Inverted File Index","text":"<p>An inverted index is a database index storing a mapping from content to its locations in a table, or in a document or a set of documents. The purpose of an inverted index is to allow fast full-text searches, at a cost of increased processing when a document is added to the database. The inverted file may be the database file itself, rather than its index.   ---- WIKIPEDIA  </p>"},{"location":"ADS/ADS%20notebook/notebook/#basic-form","title":"Basic Form","text":"No. Term 1 Dongqianyu &lt;2; (9; 35), (6, 45)&gt; Term Dictionary Posting List <p>Why do we keep \"time\"(frequency)? - Can save memory space when doing Boolean Query. - Often kept in a linked list and stored for easy merging.</p> <pre><code>while ( read a document D ) {\n    while ( read a term T in D ) {\n        if ( Find( Dictionary, T ) == false )\n            Insert( Dictionary, T );\n        Get T\u2019s posting list;\n        Insert a node to T\u2019s posting list;\n    }\n}\nWrite the inverted index to disk;\n</code></pre> <ul> <li>read a term T in D: Token Analyzer; Stop Filter</li> <li>Word Stemming: only its stem or root form is left</li> <li>Stop Words: useless to index them</li> <li>Byte Pair Encoding</li> <li>Find( Dictionary, T ): Vocabulary Scanner</li> <li>Search Trees: B- trees, B+ trees, Tries, ... </li> <li>Hashing<ul> <li>pros: faster for one word</li> <li>cons: scanning in sequential order is not possible</li> </ul> </li> <li>Thresholding<ul> <li>Document: only retrieve the top x documents where the documents are ranked by weight ==&gt; Not feasible for Boolean queries; Can miss some relevant documents due to truncation</li> <li>Query: Sort the query terms by their frequency in ascending(low-frequency trems are more important) order; search according to only some percentage of the original query terms </li> </ul> </li> <li>Insert( Dictionary, T ): Vocabulary Insertor</li> <li>Write the inverted index to disk: Memory management</li> <li>Distributed indexing: Each node contains index of a subset of collection<ul> <li>Term-partitioned index: Strong disaster tolerance capability</li> <li>Document-partitioned index</li> </ul> </li> <li>Docs come in over time </li> <li>Compression </li> </ul>"},{"location":"ADS/ADS%20notebook/notebook/#measures-for-a-search-engine","title":"Measures for a search engine","text":"<ul> <li>How fast does it index</li> <li>How fast does it search</li> <li>Expressiveness of query language</li> </ul>"},{"location":"ADS/ADS%20notebook/notebook/#relevance-measurement","title":"Relevance measurement","text":"<p>Relevance measurement requires 3 elements: - A benchmark document collection - A benchmark suite of queries - A binary assessment of either Relevant or Irrelevant for each query-doc pair</p> Relevant Irrelevant Retrieved R<sub>R</sub> I<sub>R</sub> Not Retrieved R<sub>N</sub> I<sub>N</sub> <p>Precision P = RR / (RR + IR) Recall R = RR / (RR + RN)</p> <p></p> <p>In machine learning:  | |True(Gound Truth)|False| |-|--------|----------| |Positive(Pred)|TP|FP| |Negative|TN|FN|</p> <p></p> <p>AUC: Area Under Curve</p>"},{"location":"ADS/ADS%20notebook/notebook/#chapter-4-heap","title":"Chapter 4: Heap","text":""},{"location":"ADS/ADS%20notebook/notebook/#leftist-heap","title":"Leftist Heap","text":"<p>define the null path length, npl(X), of ant node X to be the length of the shortest path from X to a node without two children</p> <p>the npl of a node with zero or one child is 0, while npl(nullptr) = -1</p> <pre><code>for every node X in the heap, the null path length of the left child is at least as large as that of the right child\n(for each u, the right decending path from u to null is one of the shortest path from u to null)\n\nensure the tree is unbalanced, tend to have deep left paths and is preferable to facilitate merging\n</code></pre> <p></p> <pre><code>Lemma:\nFor a leftist heap with n nodes, its right path has at most log2(n + 1) nodes.\n&lt;==&gt; A leftist heap with r nodes on the right path must have at least 2^r - 1 nodes.\n</code></pre>"},{"location":"ADS/ADS%20notebook/notebook/#merge","title":"merge","text":""},{"location":"ADS/PTA%20Homework/homework/","title":"PTA Homework of ZJU Advanced Data Structure and Algorithm","text":"<p>Reference: Jianjun Zhou's Notebook</p>"},{"location":"ADS/PTA%20Homework/homework/#hw-1","title":"HW-1","text":"<ol> <li>If the depth of an AVL tree is 6 (the depth of an empty tree is defined to be -1), then the minimum possible number of nodes in this tree is: A. 13 B. 17 C. 20 D. 33 n<sub>h</sub> = h<sub>h-1</sub> + h<sub>h-2</sub> + 1 </li> <li>For the result of accessing the keys 3, 9, 1, 5 in order in the splay tree in the following figure, which one of the following statements is FALSE?  A. 5 is the root B. 1 and 9 are siblings C. 6 and 10 are siblings D. 3 is the parent of 4 </li> <li>When doing amortized analysis, which one of the following statements is FALSE? A.Aggregate analysis shows that for all n, a sequence of nn operations takes worst-case time T(n) in total.  Then the amortized cost per operation is therefore T(n)/n B. For potential method, a good potential function should always assume its maximum\uff08minimum\uff09 at the start of the sequence C. For accounting method, when an operation's amortized cost exceeds its actual cost, we save the difference as credit to pay for later operations whose amortized cost is less than their actual cost D. The difference between aggregate analysis and accounting method is that the later one assumes that the amortized costs of the operations may differ from each other </li> <li>(Wrong)Insert 2, 1, 4, 5, 9, 3, 6, 7 into an initially empty AVL tree.  Which one of the following statements is FALSE? A. 4 is the root B. 3 and 7 are siblings C. 2 and 6 are siblings D. 9 is the parent of 7  </li> </ol> <p> AVL Tree Visulization  5. (Wrong)Consider the following buffer management problem. Initially the buffer size (the number of blocks) is one. Each block can accommodate exactly one item. As soon as a new item arrives, check if there is an available block. If yes, put the item into the block, induced a cost of one. Otherwise, the buffer size is doubled, and then the item is able to put into. Moreover, the old items have to  be moved into the new buffer so it costs k+1 to make this insertion, where k is the number of old items. Clearly, if there are N items, the worst-case cost for one insertion can be \\(\\Omega (N)\\).  To show that the average cost is O(1), let us turn to the amortized analysis. To simplify the problem, assume that the buffer is full after all the N items are placed. Which of the following potential functions works? A. The number of items currently in the buffer B. The opposite number of items currently in the buffer C. The number of available blocks currently in the buffer D. The opposite number of available blocks in the buffer </p> <p>When given the potential function, we need to calculate \\(\\Delta\\)\\(\\phi\\) and add it to c<sub>i</sub>, which equals to c<sub>i</sub>_hat. The potentail function is working when in every situation the c<sub>i</sub>_hat equals to the target average cost.  </p> <p></p> <p></p>"},{"location":"ADS/PTA%20Homework/homework/#root-of-avl-tree","title":"Root of AVL Tree","text":"<p><pre><code># include &lt;stdio.h&gt;\n# include &lt;stdlib.h&gt;\n\nstruct node;\ntypedef struct node* pos;\ntypedef struct node* tree;\npos LLROTATION( pos );\npos LRROTATION( pos );\npos RRROTATION( pos );\npos RLROTATION( pos );\n\nint max( int a, int b )\n{\n    return ( a &gt; b ) ? a : b;\n}\n\nstruct node\n{\n    int element;\n    tree left;\n    tree right;\n    int height;\n};\n\nint height( pos p )\n{\n    if ( p == NULL )\n        return -1;\n    else \n        return p-&gt;height; \n};\n\nstruct node* insert( int x, tree t )\n{\n    if ( t == NULL ){  // End of recursion\n        t = ( struct node* )malloc( sizeof( struct node ) );  \n        t-&gt;element = x;\n        t-&gt;height = 0;\n        t-&gt;left = NULL, t-&gt;right = NULL;\n    }\n    else if ( x &lt; t-&gt;element ){  // Decide the type of rotation\n        t-&gt;left = insert( x, t-&gt;left );\n        if( height( t-&gt;left ) - height( t-&gt;right ) == 2 ){\n            if( x &lt; t-&gt;left-&gt;element )\n                t = LLROTATION( t );\n            else\n                t = LRROTATION( t );\n        }\n    }\n    else if ( x &gt; t-&gt;element ){\n        t-&gt;right = insert( x, t-&gt;right );\n        if( height( t-&gt;right ) - height( t-&gt;left ) == 2 ){\n            if( x &gt; t-&gt;right-&gt;element )\n                t = RRROTATION( t );\n            else\n                t = RLROTATION( t );\n        }\n    }\n\n    t-&gt;height = max( height( t-&gt;left ), height( t-&gt;right ) ) + 1;  // \"+1\"\n    return t;\n};\n\npos LLROTATION( pos grandfather)\n{\n    pos father = grandfather-&gt;left;\n    grandfather-&gt;left = father-&gt;right;\n    father-&gt;right = grandfather;\n\n    grandfather-&gt;height = max( height( grandfather-&gt;left ), height( grandfather-&gt;right ) ) + 1;\n    father-&gt;height = max( height( father-&gt;left ), height( father-&gt;right ) ) + 1;\n\n    return father;\n}\n\npos LRROTATION( pos grandfather)\n{\n    pos father = grandfather-&gt;left;\n    grandfather-&gt;left = RRROTATION( father );\n    return LLROTATION( grandfather );\n}\n\npos RRROTATION( pos grandfather )\n{\n    pos father = grandfather-&gt;right;\n    grandfather-&gt;right = father-&gt;left;\n    father-&gt;left = grandfather;\n\n    grandfather-&gt;height = max( height( grandfather-&gt;left ), height( grandfather-&gt;right ) ) + 1;\n    father-&gt;height = max( height( father-&gt;left ), height( father-&gt;right ) ) + 1;\n\n    return father;\n}\n\npos RLROTATION( pos grandfather )\n{\n    pos father = grandfather-&gt;right;\n    grandfather-&gt;right = LLROTATION( father );\n    return RRROTATION( grandfather );\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &amp;n);\n\n    int x;\n    tree root = NULL;\n    for( int i = 1; i &lt;= n; i++){\n        scanf(\"%d\", &amp;x);\n        root = insert(x, root);\n    }\n\n    printf(\"%d\", root-&gt;element);\n\n    return 0;\n}\n</code></pre> </p>"},{"location":"ADS/PTA%20Homework/homework/#ex-1","title":"EX-1","text":"<ol> <li>Amortized bounds are weaker than the corresponding worst-case bounds, because there is no guarantee for any single operation. A. T B. F </li> <li>Suppose we have a potential function \\(\\phi\\) such that for all \\(\\phi\\)(Di)\\(\\geq\\)\\(\\phi\\)(D0) for all ii, but \\(\\phi\\)(D0)\\(\\neq\\)0. Then there exists a potential \\(\\phi\\)\u2032 such that \\(\\phi\\)\u2032(D0)=0, \\(\\phi\\)\u2032(Di)\\(\\geq\\)0 for all i\\(\\geq\\)1, and the amortized costs using \\(\\phi\\)\u2032 are the same as the amortized costs using \\(\\phi\\). A. T B. F </li> <li>For the result of accessing the keys 1 and 2 in order in the splay tree in the following figure, let's define size(v)=number of nodes in subtree of v ( vv included ) and potential \\(\\phi\\)=\\(\\sum\\)v[log<sub>\u20612</sub>size(v)], where [x] means the greatest interger no larger than x. How many of the following statements is/are TRUE? a. the potential change from the initial tree to the resulted tree is -4 (-5?) b. 1 is the sibling of 4 c. 5 is the child of 6 </li> <li>(WRONG)Insert { 9, 8, 7, 2, 3, 5, 6, 4 } one by one into an initially empty AVL tree. How many of the following statements is/are FALSE?  </li> <li>the total number of rotations made is 5 (Note: double rotation counts 2 and single rotation counts 1)  </li> <li>the expectation (round to 0.01) of access time is 2.75 </li> <li>there are 2 nodes with a balance factor of -1 </li> <li>(WRONG)Which one of the following statements is FALSE? A. For red-black trees, the total cost of rebalancing for m consecutive insertions in a tree of n nodes is O(n+m). B. To obtain O(1) armortized time for the function decrease-key, the potential function used for Fibonacci heaps is \u03a6(H)=t(H)+m(H), where t(H) is the number of trees in the root list of heap H, and m(H) is the number of marked nodes in H.(?) C. Let S(x) be the number of descendants of x (x included). If the potential function used for splay tree is \u03a6(T)=\u2211<sub>x\u2208T</sub>log\u2061S(x), then the amortized cost of one splay operation is O(log\u2061n). D. In the potential method, the amortized cost of an operation is equal to the actual cost plus the increase in potential due to this operation.  </li> </ol>"},{"location":"ADS/PTA%20Homework/homework/#hw-2","title":"HW-2","text":"<ol> <li>In the red-black tree that results after successively inserting the keys 41; 38; 31; 12; 19; 8 into an initially empty red-black tree, which one of the following statements is FALSE? A. 38 is the root B. 19 and 41 are siblings, and they are both red(41 is black) C. 12 and 31 are siblings, and they are both black D. 8 is red Red/Black Tree Visulization </li> <li>After deleting 15 from the red-black tree given in the figure, which one of the following statements must be(two way of deletion) FALSE?  A. 11 is the parent of 17, and 11 is black B. 17 is the parent of 11, and 11 is red C. 11 is the parent of 17, and 11 is red D. 17 is the parent of 11, and 17 is black </li> <li>Insert 3, 1, 4, 5, 9, 2, 6, 8, 7, 0 into an initially empty 2-3 tree (with splitting).  Which one of the following statements is FALSE? A. 7 and 8 are in the same node B. the parent of the node containing 5 has 3 children C. the first key stored in the root is 6 D. there are 5 leaf nodes </li> <li>After deleting 9 from the 2-3 tree given in the figure, which one of the following statements is FALSE?  A. the root is full B. the second key stored in the root is 6 C. 6 and 8 are in the same node D. 6 and 5 are in the same node </li> <li>Which of the following statements concerning a B+ tree of order M is TRUE? A. the root always has between 2 and M children B. not all leaves are at the same depth C. leaves and nonleaf nodes have some key values in common D. all nonleaf nodes have between \\(\\lceil{M/2}\\rceil\\) and M children  </li> </ol>"},{"location":"ADS/PTA%20Homework/homework/#self-printable-b-tree","title":"Self-printable B+ Tree","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdbool.h&gt;\n\ntypedef struct node *tree;\nstruct node\n{\n    int key_size;\n    int key[3];\n    bool isLeaf;\n    tree left, right, middle;\n};\n\nstruct node* stack[10000];  // to store the parents(the path from root to ptr)\nint top = 0;\n\nvoid push(struct node* NODE){\n    stack[top++] = NODE;\n}\n\nstruct node* pop(){\n    return stack[--top];\n}\n\ntree queue[10000];\nint front, rear;\n\nvoid enqueue (struct node* NODE){\n    front = (front + 1) % 10000;\n    queue[front] = NODE;\n}\n\ntree dequeue(){\n    rear = (rear + 1) % 10000;\n    return queue[rear];\n}\n\nint findrightmin(struct node* NODE){\n    while (NODE-&gt;isLeaf == false){\n        NODE = NODE-&gt;left;\n    }\n    return NODE-&gt;key[0];\n}\n\nvoid print(tree T){\n    if (T == NULL)\n        return;\n    struct node* ptr = NULL;\n    enqueue(T);\n    int curr_layer_count = 1;\n    int next_layer_count = 0;\n    while (front != rear){  // BFS\n        ptr = dequeue();\n        if (ptr-&gt;isLeaf == false){\n            curr_layer_count--;\n            printf(\"[%d\", ptr-&gt;key[0]);\n            enqueue(ptr-&gt;left);\n            next_layer_count++;\n            if (ptr-&gt;middle != NULL){\n                printf(\",%d]\", ptr-&gt;key[1]);\n                enqueue(ptr-&gt;middle);\n                next_layer_count++;\n            }\n            else{\n                printf(\"]\");\n            }\n            enqueue(ptr-&gt;right);\n            next_layer_count++;\n            if (curr_layer_count == 0){\n                printf(\"\\n\");\n                curr_layer_count = next_layer_count;\n                next_layer_count = 0;\n            }\n        }\n        else{\n            printf(\"[%d\", ptr-&gt;key[0]);\n            if (ptr-&gt;key[1] != -1)\n                printf(\",%d\", ptr-&gt;key[1]);\n            if (ptr-&gt;key[2] != -1)\n                printf(\",%d\", ptr-&gt;key[2]);\n            printf(\"]\");\n        }\n    } \n    printf(\"\\n\");\n}\n\nvoid insert(int x, tree* T)\n{\n    if (x &lt; 0)\n        return;\n    top = 0;\n    // set up the root\n    if (*T == NULL){\n        *T = (tree)malloc(sizeof(struct node));\n        (*T)-&gt;key_size = 1;\n        (*T)-&gt;key[0] = x;\n        (*T)-&gt;key[1] = -1;\n        (*T)-&gt;key[2] = -1;\n        (*T)-&gt;isLeaf = true;\n        (*T)-&gt;left = NULL;\n        (*T)-&gt;right = NULL;\n        (*T)-&gt;middle = NULL;\n        return;\n    }\n    struct node *ptr = *T;\n    // find the leaf\n    while (ptr-&gt;isLeaf != true){\n        push(ptr);\n        if (ptr-&gt;key_size == 1){\n            if (x &lt; ptr-&gt;key[0])\n                ptr = ptr-&gt;left;\n            else if (x &gt; ptr-&gt;key[0])\n                ptr = ptr-&gt;right;\n            else{ \n                printf(\"Key %d is duplicated\\n\", x);\n                return;\n            }\n        }\n        else if (ptr-&gt;key_size == 2){\n            if (x &lt; ptr-&gt;key[0])\n                ptr = ptr-&gt;left;\n            else if (x &gt; ptr-&gt;key[1])\n                ptr = ptr-&gt;right;\n            else if (x &gt; ptr-&gt;key[0] &amp;&amp; x &lt; ptr-&gt;key[1])\n                ptr = ptr-&gt;middle;\n            else{\n                printf(\"Key %d is duplicated\\n\", x);\n                return;\n            }\n        }\n    }\n\n    // the leaf is not full\n    if (ptr-&gt;key_size != 3){\n        // while (i &gt;= 0 &amp;&amp; x &lt;= ptr-&gt;key[i]){\n        //     if (x == ptr-&gt;key[i]){\n        //         printf(\"Key %d is duplicated\\n\", x);\n        //         return;\n        //     }\n        //     ptr-&gt;key[i + 1] = ptr-&gt;key[i];\n        //     i--;\n        // }\n        int i = 0;\n        for (; i &lt; ptr-&gt;key_size; i++){\n            if (x == ptr-&gt;key[i]){\n                printf(\"Key %d is duplicated\\n\", x);\n                return;\n            }\n        }\n        i = ptr-&gt;key_size - 1;\n        while (i &gt;= 0 &amp;&amp; x &lt; ptr-&gt;key[i])\n        {\n            ptr-&gt;key[i + 1] = ptr-&gt;key[i];\n            i--;\n        }\n        ptr-&gt;key[i + 1] = x;\n        ptr-&gt;key_size++;\n        return;\n    }\n    else{ // the leaf is full ==&gt; split the node\n        int i = 0;\n        for (; i &lt; ptr-&gt;key_size; i++){\n            if (x == ptr-&gt;key[i]){\n                printf(\"Key %d is duplicated\\n\", x);\n                return;\n            }\n        }\n        int val[4];\n        int j = 2;\n        while (j &gt;= 0 &amp;&amp; ptr-&gt;key[j] &gt; x) \n            val[j + 1] = ptr-&gt;key[j], j--;\n        val[j + 1] = x;\n        while (j &gt;= 0) \n            val[j] = ptr-&gt;key[j], j--;\n\n        struct node* node1 = (struct node*)malloc(sizeof(struct node));\n        struct node* node2 = (struct node*)malloc(sizeof(struct node));\n\n        node1-&gt;isLeaf = true;\n        node1-&gt;key[0] = val[0];\n        node1-&gt;key[1] = val[1];\n        node1-&gt;key[2] = -1;\n        node1-&gt;key_size = 2;\n        node1-&gt;left = NULL;\n        node1-&gt;right = NULL;\n        node1-&gt;middle = NULL;\n\n        node2-&gt;isLeaf = true;\n        node2-&gt;key[0] = val[2];\n        node2-&gt;key[1] = val[3];\n        node2-&gt;key[2] = -1;\n        node2-&gt;key_size = 2;\n        node2-&gt;left = NULL;\n        node2-&gt;right = NULL;\n        node2-&gt;middle = NULL;\n\n        // adjustment\n        struct node* parent = NULL;\n        struct node* tmp = ptr;\n        while (tmp != NULL){\n            if (top == 0)\n                parent = NULL;\n            else \n                parent = pop();\n            // 1. ptr is root\n            if (parent == NULL){\n                struct node* root = (struct node*)malloc(sizeof(struct node));\n                root-&gt;isLeaf = false;\n                root-&gt;key[0] = findrightmin(node2);\n                root-&gt;key[1] = -1;\n                root-&gt;key[2] = -1;\n                root-&gt;key_size = 1;\n                root-&gt;left = node1;\n                root-&gt;right = node2;\n                root-&gt;middle = NULL;\n                *T = root;\n                break;\n            }\n            else if (parent-&gt;key_size == 1){ // 2. the parent is not full\n                if (x &lt; parent-&gt;key[0]){\n                    parent-&gt;key[1] = parent-&gt;key[0];\n                    parent-&gt;key[0] = findrightmin(node2);\n                    parent-&gt;key_size = 2;\n                    parent-&gt;left = node1;\n                    parent-&gt;middle = node2;\n                    break;\n                }\n                else{\n                    parent-&gt;key[1] = findrightmin(node2);\n                    parent-&gt;key_size = 2;\n                    parent-&gt;middle = node1;\n                    parent-&gt;right = node2;\n                    break;\n                }\n            }\n            else if (parent-&gt;key_size == 2){ // 3. the parent is full ==&gt; split the parent\n                struct node* parent_node1 = (struct node*)malloc(sizeof(struct node));\n                struct node* parent_node2 = (struct node*)malloc(sizeof(struct node));\n                parent_node1-&gt;isLeaf = false;\n                parent_node2-&gt;isLeaf = false;\n                parent_node1-&gt;key[1] = -1;\n                parent_node1-&gt;key[2] = -1;\n                parent_node2-&gt;key[1] = -1;\n                parent_node2-&gt;key[2] = -1;\n                if (x &lt; parent-&gt;key[0]){ // node1, node2, middle, right\n                    parent_node1-&gt;left = node1;\n                    parent_node1-&gt;middle = NULL;\n                    parent_node1-&gt;right = node2;\n                    parent_node1-&gt;key[0] = findrightmin(node2);\n                    parent_node1-&gt;key_size = 1;\n\n                    parent_node2-&gt;left = parent-&gt;middle;\n                    parent_node2-&gt;middle = NULL;\n                    parent_node2-&gt;right = parent-&gt;right;\n                    parent_node2-&gt;key[0] = findrightmin(parent-&gt;right);\n                    parent_node2-&gt;key_size = 1;\n                }\n                else if (x &gt; parent-&gt;key[0] &amp;&amp; x &lt; parent-&gt;key[1]){ // left, node1, node2, right \n                    parent_node1-&gt;left = parent-&gt;left;\n                    parent_node1-&gt;middle = NULL;\n                    parent_node1-&gt;right = node1;\n                    parent_node1-&gt;key[0] = findrightmin(node1);\n                    parent_node1-&gt;key_size = 1;\n\n                    parent_node2-&gt;left = node2;\n                    parent_node2-&gt;middle = NULL;\n                    parent_node2-&gt;right = parent-&gt;right;\n                    parent_node2-&gt;key[0] = findrightmin(parent-&gt;right);\n                    parent_node2-&gt;key_size = 1;\n                }\n                else if (x &gt; parent-&gt;key[1]){ // left, middle, node1, node2\n                    parent_node1-&gt;left = parent-&gt;left;\n                    parent_node1-&gt;middle = NULL;\n                    parent_node1-&gt;right = parent-&gt;middle;\n                    parent_node1-&gt;key[0] = findrightmin(parent-&gt;middle);\n                    parent_node1-&gt;key_size = 1;\n\n                    parent_node2-&gt;left = node1;\n                    parent_node2-&gt;middle = NULL;\n                    parent_node2-&gt;right = node2;\n                    parent_node2-&gt;key[0] = findrightmin(node2);\n                    parent_node2-&gt;key_size = 1;\n                }\n\n                node1 = parent_node1;\n                node2 = parent_node2;\n                tmp = parent;\n            }\n        }\n    }\n\n    return;\n}\n\n\nint main()\n{\n    int n, x;\n    front = 0;\n    rear = 0;\n    scanf(\"%d\", &amp;n);\n    tree TREE=NULL;\n    tree *T = &amp;TREE;\n    for (int i = 1; i &lt;= n; i++){\n        scanf(\"%d\", &amp;x);\n        insert(x, T);\n    }\n    print(TREE);\n    return 0;\n}\n</code></pre>"},{"location":"ADS/PTA%20Homework/homework/#ex-2","title":"EX-2","text":"<ol> <li>(WRONG)If we insert N(N\u2a7e2) nodes (with different integer elements) consecutively to build a red-black tree T from an empty tree, which of the following situations is possible: A. All nodes in T are black B. The number of leaf nodes (NIL) in T is 2N\u22121 C. 2N rotations occurred during the construction of T D. The height of T is \u23083log\u20612(N+1)\u2309 (assume the height of the empty tree is 0)  </li> </ol>"},{"location":"ADS/PTA%20Homework/homework/#hw-3","title":"HW-3","text":"<ol> <li>When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set. A. T B. F </li> <li>While accessing a term by hashing in an inverted file index, range searches are expensive. A. T B. F </li> </ol>"},{"location":"ADS/PTA%20Homework/homework/#document-distance","title":"Document Distance","text":""},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/","title":"HPC Notebook","text":"<p>\u5728\u505a PAC \u6bd4\u8d5b\u65f6\u7b2c\u4e00\u6b21\u63a5\u89e6\u4e86 HPC \uff0c\u7531\u4e8e\u53ea\u4e0a\u4e86\u4e00\u4e2a\u77ed\u5b66\u671f\uff0c\u76f8\u5173\u77e5\u8bc6\u6781\u5ea6\u532e\u4e4f\uff0c\u4f18\u5316\u6839\u672c\u65e0\u4ece\u4e0b\u624b\u3002\u4e3a\u6b64\uff0c\u6211\u8ba4\u4e3a\u6709\u5fc5\u8981\u7cfb\u7edf\u6027\u7684\u8865\u5168\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u505a\u4e00\u4e9b\u76f8\u5173\u7684\u79ef\u7d2f\uff0c\u8fd9\u5bf9\u65e5\u540e\u7684\u8ba1\u79d1\u5b66\u4e60\u60f3\u5fc5\u4e5f\u662f\u5927\u6709\u88e8\u76ca\u7684\u3002  </p> <p>\u8fd9\u4e2a notebook \u4e00\u65b9\u9762\u8bb0\u5f55 HPC \u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u662f\u4e00\u4e2a\u5b66\u4e60\u8def\u5f84\u7684\u8bb0\u5f55\u3002\u6700\u4e3a\u4e00\u4e2a\u5b8c\u5168\u7684\u5c0f\u767d\uff0c\u4ecezhb\u5904\u5f97\u5230\u5efa\u8bae\uff0c\u51b3\u5b9a\u4ee5Bowling's TechStack\u4e3a\u6307\u5bfc\u6846\u67b6\uff0c\u5f80\u91cc\u9762\u586b\u5145\u77e5\u8bc6\uff1b\u540c\u65f6\u8be5\u6587\u6863\u4e5f\u662f\u4e00\u4e2a\u8d77\u70b9\uff0c\u5411\u5916\u53d1\u6563\u62d3\u5c55\u3002</p> <p>\u76f4\u63a5\u76d7\u7528 Bowling \u7684\u7ed3\u6784\u56fe\u548c\u4f18\u5316\u6846\u67b6\uff1a  </p> <p> </p> <p>\u4f18\u5316\u4e3b\u8981\u5728\u4e24\u4e2a\u5c42\u9762\u8fdb\u884c\uff1a\u4ee3\u7801\u5c42\u9762\u548c\u8fd0\u884c\u5c42\u9762\u3002</p> <p>\u4ee3\u7801\u4f18\u5316 - \u4e09\u5927\u5e76\u884c\u7f16\u7a0b\u6a21\u578b     - MPI     - OpenMP     - CUDA - \u5e38\u89c1\u5b9e\u73b0\u3001\u7f16\u8bd1\u5668\u548c\u5de5\u5177\u94fe\u5bf9\u5e94\u7684\u4f18\u5316\u7b56\u7565     - GCC\uff08OpenMPI\uff09     - Intel\uff08Intel MPI\uff09     - NVIDIA\uff08NVCC\uff09</p> <p>\u4ee3\u7801\u4f18\u5316\u7684\u76ee\u6807\u662f\u7f16\u5199\u5177\u6709\u53ef\u6269\u5c55\u6027\u7684\u4ee3\u7801\u3002\u53ef\u6269\u5c55\u6027\u662f\u6307\uff0c\u968f\u7740\u8ba1\u7b97\u8d44\u6e90\u7684\u589e\u52a0\uff0c\u4ee3\u7801\u7684\u6027\u80fd\u4e5f\u80fd\u591f\u7ebf\u6027\uff08\u751a\u81f3\u66f4\u597d\u5730\u589e\u957f\uff09\u3002\u5728\u4e0d\u8003\u8651\u5b9e\u73b0\u7684\u9636\u6bb5\uff0c\u6211\u4eec\u9700\u8981\u6309\u7167\u5bf9\u5e94\u7f16\u7a0b\u6a21\u578b\u7684\u6700\u4f73\u5b9e\u8df5\u7f16\u5199\u4ee3\u7801\u3002\u5728\u8003\u8651\u5b9e\u73b0\u7684\u9636\u6bb5\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u5b9e\u73b0\u7684\u7279\u70b9\u548c\u786c\u4ef6\u67b6\u6784\u7684\u7279\u70b9\uff0c\u9488\u5bf9\u6027\u5730\u4f18\u5316\u4ee3\u7801\uff0c\u6bd4\u5982\u91c7\u7528\u7279\u5b9a\u7684\u6307\u4ee4\u96c6\u7b49\u3002</p> <p>\u8fd0\u884c\u4f18\u5316 - CPU \u8ba1\u7b97\uff08MPI\uff09     - \u7ed1\u6838     - \u8282\u70b9\u3001\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u62d3\u6251 - GPU \u8ba1\u7b97     - SM\u3001Warp \u8c03\u5ea6</p> <p>\u8fd0\u884c\u4f18\u5316\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u4e0d\u65ad\u7684\u5c1d\u8bd5\uff0c\u63a2\u7d22\u5728\u5982\u4f55\u6700\u5927\u5316\u5229\u7528\u786c\u4ef6\u8d44\u6e90\u3002  </p> <p>\u7531\u4e8e\u5f00\u59cb\u8fd9\u4e2a\u6587\u6863\u7684\u65f6\u95f4\u6b63\u597d\u662fLab3\u5373\u5c06\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u4ece CUDA \u5f00\u59cb</p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#cuda","title":"CUDA","text":""},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#gpu-spmd","title":"GPU &amp; SPMD","text":"<p>Where are we?</p> <p> </p> <p>Why GPU? Need More Computing Power.  </p> <p> </p> <p>\u7279\u522b\u6709\u8da3\u7684\u56fe\u7247\u89e3\u91ca\u4e86 CPU \u4e0e GPU \u4e4b\u95f4\u7684\u5173\u7cfb  </p> <p> </p> <p>GPU \u53ea\u662f\u4e00\u4e2a\u8ba1\u7b97\u5de5\u5177\uff0c\u4f9d\u65e7\u9700\u8981\u5728 CPU \u7684\u6307\u4ee4\u4e0b\u5de5\u4f5c  </p> <p>More cores -&gt; More trouble How to manipulate them?  </p> <p> </p> <p>CPU-GPU Co-processing:  - CPU: Sequential or modestly parallel sections - GPU: Massively parallel sections</p> <p>The instruction pipeline operates like a SIMD pipeline (e.g., an array processor). However, the programming is done using threads, NOT SIMD instructions</p> <p>First, let\u2019s distinguish between  - Programming Model (Software)           vs. - Execution Model (Hardware) </p> <p>Programming Model\uff1a how the programmer expresses the code E.g., Sequential (von Neumann), Data Parallel (SIMD), Dataflow, Multi-threaded (MIMD, SPMD), \u2026</p> <p>Hardware Execution Model\uff1a how the hardware executes the code underneath E.g., Out-of-order execution, Vector processor, Array processor, Dataflow processor, Multiprocessor, Multithreaded processor, \u2026</p> <p>Execution Model can be very different from Programming Model E.g., von Neumann model implemented by an OoO processor E.g., SPMD model implemented by a SIMD processor (a GPU)</p> <p> </p> <p>NVIDIA A100 &amp; NVIDIA H100 </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>GPU Trend H100 vs. A100 Compute power scales well. GPU memory capacity does not scale well.</p> <p> </p> <p>A GPU is a SIMD (SIMT) Machine\uff0cExcept it is NOT programmed using SIMD instructions</p> <p>It is programmed using threads (SPMD programming model) - Each thread executes the same code but operates a different piece of data - Each thread has its own context (i.e., can be treated/restarted/executed independently)  </p> <p>SISD vs. SIMD vs. SPMD</p> <p>How Can You Exploit Parallelism Here?  </p> <pre><code>for (int i=0; i&lt;N; i++)\n{\n    C[i] = A[i] + B[i];\n}\n</code></pre> <p>Let\u2019s examine three programming options to exploit instruction-level parallelism present in this sequential code: - Sequential (SISD) - Data-Parallel (SIMD) - Multithreaded (SPMD)</p> <p>Prog. Model 1: Sequential (SISD)  </p> <p> </p> <p>Can be executed on thee processors: - Pipelined processor - Out-of-order execution processor     - Independent instructions executed when ready     - Different iterations are present in the instruction window and can execute in parallel in multiple functional units     - In other words, the loop is dynamically unrolled by the hardware - Superscalar or VLIW processor Can fetch and execute multiple instructions per cycle</p> <p>Prog. Model 2: Data Parallel (SIMD)  </p> <p> </p> <ul> <li>Realization: Each iteration is independent</li> <li>Idea: Programmer or compiler generates a SIMD instruction to execute the same instruction from all iterations across different data</li> </ul> <p>Prog. Model 3: Multithreaded  </p> <p> </p> <ul> <li>Realization: Each iteration is independent</li> <li>Idea: Programmer or compiler generates a thread to execute each iteration. Each thread does the same thing (but on different data)  </li> </ul> <p>This programming model (software) is called: SPMD: Single Program Multiple Data - This is a programming model rather than computer organization - Each processing element executes the same procedure, except on different data elements     - Procedures can synchronize at certain points in program, e.g. barriers</p> <p>Key Idea of SPMD: multiple instruction streams execute the same program - Each program/procedure     - works on different data,     - can execute a different control-flow path, at run-time - Many scientific applications are programmed this way and run on MIMD hardware (multiprocessors) - Modern GPUs programmed in a similar way on a SIMD hardware</p> <p>\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u5c06\u53c2\u7167 NVIDIA \u6df1\u5ea6\u5b66\u4e60\u57f9\u8bad\u4e2d\u5fc3\uff08DLI\uff09\u5b9e\u6218\u57f9\u8bad\u8bfe\u7a0b\u8ba1\u7b97\u52a0\u901f\u57fa\u7840\u2014\u2014C \u5728\u5b98\u65b9\u6559\u7a0b\u4e2d\u4f7f\u7528\u4e86 jupyter \u4ea4\u4e92\u5f0f\u7b14\u8bb0\u672c\u548c\u4e91\u7aef\u7684 NVIDIA GPU \u7684\u52a0\u901f\u7cfb\u7edf\u3002\u6211\u7684\u7535\u8111\u4e0a\u5c45\u7136\u4e5f\u6709\u4e00\u5757 NVIDIA GEFORCE RTX\uff0c\u6240\u4ee5\u6211\u60f3\u5c1d\u8bd5\u5728\u6211\u7684\u7535\u8111\u590d\u73b0\u3002</p> <p></p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#cuda-cc","title":"\u4f7f\u7528 CUDA C/C++ \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f","text":"<p>CUDA \u63d0\u4f9b\u4e00\u79cd\u53ef\u6269\u5c55 C\u3001C++\u3001Python \u548c Fortran \u7b49\u8bed\u8a00\u7684\u7f16\u7801\u8303\u5f0f\uff0c\u80fd\u591f\u5728\u4e16\u754c\u4e0a\u6027\u80fd\u8d85\u5f3a\u52b2\u7684\u5e76\u884c\u5904\u7406\u5668 NVIDIA GPU \u4e0a\u8fd0\u884c\u5927\u91cf\u7ecf\u52a0\u901f\u7684\u5e76\u884c\u4ee3\u7801\u3002CUDA \u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5927\u5e45\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u9002\u7528\u4e8e DNN\u3001BLAS\u3001\u56fe\u5f62\u5206\u6790 \u548c FFT \u7b49\u7684\u9ad8\u5ea6\u4f18\u5316\u5e93\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u4e14\u8fd8\u9644\u5e26\u529f\u80fd\u5f3a\u5927\u7684 \u547d\u4ee4\u884c \u548c \u53ef\u89c6\u5316\u5206\u6790\u5668\u3002  </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#_1","title":"\u52a0\u901f\u7cfb\u7edf","text":"<p>\u52a0\u901f\u7cfb\u7edf\u53c8\u79f0\u5f02\u6784\u7cfb\u7edf\uff0c\u7531 CPU \u548c GPU \u7ec4\u6210\u3002\u52a0\u901f\u7cfb\u7edf\u4f1a\u8fd0\u884c CPU \u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u4e5f\u4f1a\u8f6c\u800c\u542f\u52a8\u5c06\u53d7\u76ca\u4e8e GPU \u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u7684\u51fd\u6570\u3002  </p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>nvidia-smi</code> (Systems Management Interface) \u547d\u4ee4\u884c\u547d\u4ee4\u67e5\u8be2\u6709\u5173\u6b64 GPU \u7684\u4fe1\u606f\u3002  </p> <p> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#gpucpu","title":"\u7531GPU\u52a0\u901f\u7684\u8fd8\u662f\u7eafCPU\u7684\u5e94\u7528\u7a0b\u5e8f","text":"<p>\u5728 CPU \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6570\u636e\u5728 CPU \u4e0a\u8fdb\u884c\u5206\u914d\uff0c\u5e76\u4e14\u6240\u6709\u5de5\u4f5c\u5747\u5728 CPU \u4e0a\u8fdb\u884c\u3002  </p> <p> </p> <p>\u800c\u5728\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 <code>cudaMallocManaged()</code> \u5206\u914d\u6570\u636e\uff0c\u5176\u6570\u636e\u53ef\u7531 CPU \u8fdb\u884c\u8bbf\u95ee\u548c\u5904\u7406\uff0c\u5e76\u80fd\u81ea\u52a8\u8fc1\u79fb\u81f3\u53ef\u6267\u884c\u5e76\u884c\u5de5\u4f5c\u7684 GPU\uff1bGPU \u5f02\u6b65\u6267\u884c\u5de5\u4f5c\uff0c\u4e0e\u6b64\u540c\u65f6 CPU \u53ef\u6267\u884c\u5b83\u7684\u5de5\u4f5c\uff1b\u901a\u8fc7 <code>cudaDeviceSynchronized</code>\uff0cCPU \u4ee3\u7801\u53ef\u4e0e\u5f02\u6b65 GPU \u5de5\u4f5c\u5b9e\u73b0\u540c\u6b65\uff0c\u5e76\u7b49\u5f85\u540e\u8005\u5b8c\u6210\uff1b\u7ecf CPU \u8bbf\u95ee\u7684\u6570\u636e\u5c06\u4f1a\u81ea\u52a8\u8fc1\u79fb\u3002  </p> <p> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#gpu","title":"\u4e3aGPU\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801","text":"<p>CUDA \u4e3a\u8bb8\u591a\u5e38\u7528\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u6269\u5c55\u3002\u8fd9\u4e9b\u8bed\u8a00\u6269\u5c55\u53ef\u8ba9\u5f00\u53d1\u4eba\u5458\u5728 GPU \u4e0a\u8f7b\u677e\u8fd0\u884c\u5176\u6e90\u4ee3\u7801\u4e2d\u7684\u51fd\u6570\u3002</p> <p>\u8981\u590d\u73b0\u6587\u6863\u4e2d\u7684 CUDA \u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5CUDA Toolkit\u3002  </p> <p>\u663e\u7136 CUDA \u662f\u53ef\u4ee5\u914d\u7f6e\u5728 VS Code \u4e0a\u7684\uff0c\u4f46\u9b3c\u77e5\u9053\u6211\u627e\u4e86\u591a\u5c11\u6559\u7a0b\u914d\u7f6e\u4e86\u591a\u4e45\uff0c\u603b\u4e4b\u6700\u540e\u6210\u529f\u5728 Visual Studio 2022 \u4e0a\u914d\u7f6e\u6210\u529f\u3002\u5177\u4f53\u53c2\u8003 Youtube Vidio\u3002\u8fd9\u6837\u914d\u7f6e\u53ef\u4ee5\u6210\u529f\u7f16\u8bd1\u8fd0\u884c\uff0c\u4f46\u5bf9\u4e8e CUDA \u4e2d\u7684\u7279\u6709\u8bed\u6cd5\u4f1a\u6709\u7ea2\u8272\u6ce2\u6d6a\u4e0b\u5212\u7ebf\u62a5\u9519\uff0c\u53ef\u4ee5\u53c2\u8003\u77e5\u4e4e\u6587\u7ae0\u7b80\u5355\u53bb\u9664\u4e00\u4e0b\uff08\u53ea\u8981\u628a\u91cc\u9762\u7684\u201c\u7981\u7528\u6ce2\u6d6a\u66f2\u7ebf\u201d\u7f6e\u4e3a True \u5c31\u53ef\u4ee5\u4e86\uff09\u3002  </p> <p>\u5148\u6765\u770b\u4e00\u4e2a <code>.cu</code> \u6587\u4ef6 <pre><code>void CPUFunction()\n{\n  printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction()\n{\n  printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main()\n{\n  CPUFunction();\n\n  GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();\n  cudaDeviceSynchronize();\n}\n</code></pre></p> <p>\u5bf9\u6bd4\u666e\u901a\u7684 C \u7a0b\u5e8f\uff0cCUDA \u4ee3\u7801\u6709\u4e9b\u4e0d\u540c\u4e4b\u5904  </p> <p><code>__global__ void GPUFunction()</code> - <code>__global__</code> \u5173\u952e\u5b57\u8868\u660e\u4ee5\u4e0b\u51fd\u6570\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u5e76\u53ef\u5168\u5c40\u8c03\u7528\uff0c\u800c\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u5219\u6307\u7531 CPU \u6216 GPU \u8c03\u7528\u3002 - \u901a\u5e38\uff0c\u6211\u4eec\u5c06\u5728 CPU \u4e0a\u6267\u884c\u7684\u4ee3\u7801\u79f0\u4e3a\u4e3b\u673a\u4ee3\u7801\uff0c\u800c\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u79f0\u4e3a\u8bbe\u5907\u4ee3\u7801\u3002</p> <p><code>GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();</code> - \u901a\u5e38\uff0c\u5f53\u8c03\u7528\u8981\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u5c06\u6b64\u79cd\u51fd\u6570\u79f0\u4e3a\u5df2\u542f\u52a8\u7684\u6838\u51fd\u6570\u3002 - \u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u6267\u884c\u914d\u7f6e\uff0c\u5373\u5728\u5411\u6838\u51fd\u6570\u4f20\u9012\u4efb\u4f55\u9884\u671f\u53c2\u6570\u4e4b\u524d\u4f7f\u7528 &lt;&lt;&lt; ... &gt;&gt;&gt; \u8bed\u6cd5\u5b8c\u6210\u7684\u914d\u7f6e\u3002 - \u5728\u5b8f\u89c2\u5c42\u9762\uff0c\u7a0b\u5e8f\u5458\u53ef\u901a\u8fc7\u6267\u884c\u914d\u7f6e\u4e3a\u6838\u51fd\u6570\u542f\u52a8\u6307\u5b9a\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\uff0c\u4ece\u800c\u5b9a\u4e49\u7ebf\u7a0b\u7ec4\uff08\u79f0\u4e3a\u7ebf\u7a0b\u5757\uff09\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u8981\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u6267\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\u3002\u7a0d\u540e\u5c06\u5728\u672c\u5b9e\u9a8c\u6df1\u5165\u63a2\u8ba8\u6267\u884c\u914d\u7f6e\uff0c\u4f46\u73b0\u5728\u8bf7\u6ce8\u610f\u6b63\u5728\u4f7f\u7528\u5305\u542b 1 \u7ebf\u7a0b\uff08\u7b2c\u4e8c\u4e2a\u914d\u7f6e\u53c2\u6570\uff09\u7684 1 \u7ebf\u7a0b\u5757\uff08\u7b2c\u4e00\u4e2a\u6267\u884c\u914d\u7f6e\u53c2\u6570\uff09\u542f\u52a8\u6838\u51fd\u6570\u3002  </p> <p><code>cudaDeviceSynchronize();</code> - \u4e0e\u8bb8\u591a C/C++ \u4ee3\u7801\u4e0d\u540c\uff0c\u6838\u51fd\u6570\u542f\u52a8\u65b9\u5f0f\u4e3a\u5f02\u6b65\uff1aCPU \u4ee3\u7801\u5c06\u7ee7\u7eed\u6267\u884c\u800c\u65e0\u9700\u7b49\u5f85\u6838\u51fd\u6570\u5b8c\u6210\u542f\u52a8\u3002 - \u8c03\u7528 CUDA \u8fd0\u884c\u65f6\u63d0\u4f9b\u7684\u51fd\u6570 <code>cudaDeviceSynchronize</code> \u5c06\u5bfc\u81f4\u4e3b\u673a (CPU) \u4ee3\u7801\u6682\u4f5c\u7b49\u5f85\uff0c\u76f4\u81f3\u8bbe\u5907 (GPU) \u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u5728 CPU \u4e0a\u6062\u590d\u6267\u884c\u3002  </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#hello-gpu","title":"\u7ec3\u4e60\uff1a\u7f16\u5199\u4e00\u4e2aHello GPU\u6838\u51fd\u6570","text":"<p><code>01-hello-gpu.cu</code> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#cuda_1","title":"\u7f16\u8bd1\u5e76\u8fd0\u884c\u52a0\u901f\u540e\u7684CUDA\u4ee3\u7801","text":"<p>CUDA \u5e73\u53f0\u9644\u5e26 NVIDIA CUDA \u7f16\u8bd1\u5668 <code>nvcc</code>\uff0c\u53ef\u4ee5\u7f16\u8bd1 CUDA \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u5305\u542b\u4e3b\u673a\u548c\u8bbe\u5907\u4ee3\u7801\u3002  </p> <p>\u4f7f\u7528 <code>nvcc</code> \u7f16\u8bd1\u548c\u7528 <code>gcc</code> \u975e\u5e38\u7c7b\u4f3c\u3002\u4f46\u5c1d\u8bd5\u5728 VS \u7684 Terminal \uff08\u9ed8\u8ba4 PowerShell\uff09\u4e0a\u4f7f\u7528\u547d\u4ee4\u884c <pre><code>nvcc -o 01-hello-gpu 01-hello-gpu.cu -run\n</code></pre> \u4f1a\u51fa\u73b0\u62a5\u9519  </p> <p> </p> <p>\u8be5\u9519\u8bef\u96be\u4ee5\u89e3\u51b3\uff0c\u7f51\u4e0a\u4e5f\u6ca1\u6709\u627e\u5230\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u6240\u4ee5\u6211\u76f4\u63a5\u4f7f\u7528\u4e86git bash \uff0c\u6548\u679c\u4e0d\u9519\u3002\u5bf9\u4e8e\u62a5\u9519 <code>nvcc fatal : Cannot find compiler 'cl.exe' in PATH</code> \uff0c\u53ef\u4ee5\u53c2\u8003 CSDN\u3002  </p> <p> </p> <p>\u5f53\u7136\u5176\u5b9e\u4e0d\u4e00\u5b9a\u8981\u7528\u547d\u4ee4\u884c\u7f16\u8bd1\u8fd0\u884c\uff0c\u5728 VS \u4e2d\u53ef\u4ee5\u76f4\u63a5 build \u548c run without debugging \u3002</p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#cuda_2","title":"CUDA\u7684\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784","text":"<p>GPU \u5728\u7ebf\u7a0b\u4e2d\u6267\u884c\u5de5\u4f5c\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5e76\u884c\u8fd0\u884c\u3002\u7ebf\u7a0b\u7684\u96c6\u5408\u79f0\u4e3a\u5757\u3002\u4e0e\u7ed9\u5b9a\u6838\u51fd\u6570\u542f\u52a8\u76f8\u5173\u7684\u5757\u7684\u96c6\u5408\u79f0\u4e3a\u7f51\u683c\u3002GPU \u51fd\u6570\u79f0\u4e3a\u6838\u51fd\u6570\uff0c\u6838\u51fd\u6570\u901a\u8fc7\u6267\u884c\u914d\u7f6e\u542f\u52a8\uff0c\u6267\u884c\u914d\u7f6e\u5b9a\u4e49\u4e86\u7f51\u683c\u4e2d\u7684\u5757\u6570\u4ee5\u53ca\u6bcf\u4e2a\u5757\u4e2d\u7684\u7ebf\u7a0b\u6570\u3002\u7f51\u683c\u4e2d\u7684\u6bcf\u4e2a\u5757\u5747\u5305\u542b\u76f8\u540c\u6570\u91cf\u7684\u7ebf\u7a0b\u3002  </p> <p> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#_2","title":"\u542f\u52a8\u5e76\u884c\u8fd0\u884c\u7684\u6838\u51fd\u6570","text":"<p>\u6267\u884c\u914d\u7f6e\u53ef\u4ee5\u6307\u5b9a\u7ebf\u7a0b\u7ec4\uff08\u79f0\u4e3a\u7ebf\u7a0b\u5757\u6216\u7b80\u79f0\u4e3a\u5757\uff09\u6570\u91cf\u4ee5\u53ca\u5176\u5e0c\u671b\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u6240\u5305\u542b\u7684\u7ebf\u7a0b\u6570\u91cf\u3002\u6267\u884c\u914d\u7f6e\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>&lt;&lt;&lt; NUMBER_OF_BLOCKS, NUMBER_OF_THREADS_PER_BLOCK&gt;&gt;&gt;\n</code></pre> \u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u6838\u51fd\u6570\u4ee3\u7801\u7531\u6bcf\u4e2a\u5df2\u914d\u7f6e\u7684\u7ebf\u7a0b\u5757\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u3002  </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#cuda_3","title":"CUDA \u63d0\u4f9b\u7684\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u53d8\u91cf","text":"<p>\u5728\u6838\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0cCUDA \u63d0\u4f9b\u7684\u53d8\u91cf\u63cf\u8ff0\u4e86\u5b83\u6240\u6267\u884c\u7684\u7ebf\u7a0b\u3001\u5757\u548c\u7f51\u7edc\u3002  </p> <p><code>gridDim.x</code> \u662f\u7f51\u683c\u4e2d\u7684\u5757\u6570\u3002 <code>blockIdx.x</code> \u662f\u7f51\u683c\u4e2d\u5f53\u524d\u5757\u7684\u7d22\u5f15\u3002 <code>threadIdx.x</code> \u63cf\u8ff0\u4e86\u5757\u4e2d\u6240\u5305\u542b\u7ebf\u7a0b\u7684\u7d22\u5f15</p> <p> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#_3","title":"\u7ebf\u7a0b\u548c\u5757\u7684\u7d22\u5f15","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u5176\u7ebf\u7a0b\u5757\u5185\u90e8\u5747\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u7d22\u5f15\uff0c\u4ece <code>0</code> \u5f00\u59cb\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e5f\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u7d22\u5f15\uff0c\u5e76\u4ece <code>0</code> \u5f00\u59cb\u3002\u6b63\u5982\u7ebf\u7a0b\u7ec4\u6210\u7ebf\u7a0b\u5757\uff0c\u7ebf\u7a0b\u5757\u53c8\u4f1a\u7ec4\u6210\u7f51\u683c\uff0c\u800c\u7f51\u683c\u662f CUDA \u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7ea7\u522b\u6700\u9ad8\u7684\u5b9e\u4f53\u3002\u7b80\u8a00\u4e4b\uff0cCUDA \u6838\u51fd\u6570\u5728\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u5757\u7ec4\u6210\u7684\u7f51\u683c\u4e2d\u6267\u884c\uff0c\u4e14\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u5747\u5305\u542b\u76f8\u540c\u6570\u91cf\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u3002  </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#_4","title":"\u7ec3\u4e60\uff1a\u4f7f\u7528\u7279\u5b9a\u7684\u7ebf\u7a0b\u548c\u5757\u7d22\u5f15","text":"<p><code>01-thread-and-block-inx.cu</code> </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#for","title":"\u52a0\u901f for \u5faa\u73af","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u6700\u666e\u901a\u7684 <code>for</code> \u5faa\u73af <pre><code>int N = 2&lt;&lt;20;\nfor (int i = 0; i &lt; N; ++i)\n{\n  printf(\"%d\\n\", i);\n}\n</code></pre> \u5982\u8981\u5e76\u884c\u6b64\u5faa\u73af\uff0c\u5fc5\u987b\u6267\u884c\u4ee5\u4e0b 2 \u4e2a\u6b65\u9aa4\uff1a - \u5fc5\u987b\u7f16\u5199\u5b8c\u6210\u5faa\u73af\u7684\u5355\u6b21\u8fed\u4ee3\u5de5\u4f5c\u7684\u6838\u51fd\u6570\u3002 - \u7531\u4e8e\u6838\u51fd\u6570\u4e0e\u5176\u4ed6\u6b63\u5728\u8fd0\u884c\u7684\u6838\u51fd\u6570\u65e0\u5173\uff0c\u56e0\u6b64\u6267\u884c\u914d\u7f6e\u5fc5\u987b\u4f7f\u6838\u51fd\u6570\u6267\u884c\u6b63\u786e\u7684\u6b21\u6570\uff0c\u4f8b\u5982\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\u3002  </p>"},{"location":"HPC%20101/HPC%20Learning/notebook/HPC%20Learning/#for_1","title":"\u7ec3\u4e60\uff1a\u4f7f\u7528\u5355\u4e2a\u7ebf\u7a0b\u52a0\u901f for \u5faa\u73af","text":"<p><code>01-single-block-loop.cu</code> </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/","title":"HPC101\u8d85\u7b97\u77ed\u5b66\u671f","text":"<p>\u8c08\u8c08\u5982\u4f55\u8ba9\u81ea\u5df1\u770b\u4e0a\u53bb\u3001\u95fb\u4e0a\u53bb\u90fd\u50cf\u4e00\u4e2aCS\u4eba https://www.cc98.org/topic/5370849 Stack Overflow https://stackoverflow.com \u7535\u5b50\u4e66 http://libgen.is/ https://z-epub.com/ MIT missing semester https://missing.csail.mit.edu/2020/ CS\u81ea\u5b66\u6307\u5357 https://csdiy.wiki/ Dev on Windows with WSL https://dowww.spencerwoo.com/ ZJUSCT OpenDocs https://zjusct.pages.zjusct.io/ops/opendocs/</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab0linux-crash-course","title":"Lab0\uff1aLinux Crash Course","text":"<p>\u53c2\u8003\u7684\u6587\u6863 https://zjusct.pages.zjusct.io/summer_hpc101_2024/hpc-101-labs-2024/Lab0-LinuxCrashCourse/ https://101.lug.ustc.edu.cn/#contact-us</p> <p>Obtain a Linux Virtual Machine - [x] Install a hypervisor on your computer - [x] Create a new virtual machine in the hypervisor - [x] Install a Linux distribution in the virtual machine Linux Basics - [x] Command Line Interface (CLI) - [x] Linux File System - [x] Package Management Remote Access - [x] Network Basics - [x] SSH More on Linux - [x] Users and Permissions - [x] Environment Variables Git - [x] Register a ZJU Git account - [x] Configure Public Key - [x] Clone a Repository  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#01-linux","title":"0.1 \u521b\u5efa\u865a\u62df\u673a&amp;\u5b89\u88c5\u914d\u7f6eLinux\u73af\u5883","text":"<p>\u4e00\u8138\u61f5\u903c\uff0c\u9009\u62e9\u4e86\u5728 VMware Workstation \u4e2d\u5b89\u88c5 Ubuntu\uff0c\u5176\u4e2dVMwar Workstation Pro\u662f\u4e00\u4e2a\u865a\u62df\u673a\u7ba1\u7406\u8f6f\u4ef6\uff08\u865a\u62df\u5316\u8f6f\u4ef6\uff09\uff0cUbuntu\u662f\u6211\u8981\u7ed9\u8fd9\u4e2a\u865a\u62df\u5316\u8f6f\u4ef6\u4e2d\u7684\u865a\u62df\u673a\u52a0\u88c5\u7684\u7cfb\u7edf\u3002\u5f53\u7136\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5728\u7535\u8111\u4e0a\u52a0\u88c5Linux\uff0c\u7528WSL+vscode\u5c31\u4e0d\u7528\u865a\u62df\u673a\u4e86\uff0c\u636e\u8bf4\u4f53\u9a8c\u5f88\u597d\uff0c\u4e4b\u540e\u53ef\u80fd\u4f1a\u7528\u5230\u3002\u5b89\u88c5\u8fc7\u7a0b\u53c2\u8003 https://ibug.io/cn/2019/02/setup-ubuntu-in-vmware/  </p> <p>\u5b89\u88c5VMware Workstation\u6709\u4e2a\u8be5\u6b7b\u7684\u8df3\u8f6c\u5230\u535a\u901a\u7684\u7f51\u7ad9\uff0c\u8fd9\u91cc\u53c2\u8003 https://blog.csdn.net/Python_paipai/article/details/139409629?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=VMware%20Workstation%20Pro&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<sub>all</sub>sobaiduweb~default-2-139409629.142<sup>v100</sup>pc_search_result_base8&amp;spm=1018.2226.3001.4187 \u4ece\u8fd9\u91cc\u8fdb\uff1a support.broadcom.com \u539f\u6765lab\u6587\u4ef6\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2ayutube\u6559\u5b66\u89c6\u9891qwq</p> <p>Linux\u6709\u5f88\u591a\u7684\u53d1\u578b\u7248\uff1a  </p> <p>Slackware\uff1a\u5386\u53f2\u6700\u60a0\u4e45\u7684\u53d1\u884c\u7248 Debian\uff1a\u5386\u53f2\u7b2c\u4e8c\u60a0\u4e45\u7684\u53d1\u884c\u7248 Arch Linux\uff1a\u53ef\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u53d1\u884c\u7248 Ubuntu\uff1a\u57fa\u4e8e Debian\uff0c\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u53d1\u884c\u7248 Deepin\uff1a\u57fa\u4e8e Debian \u7684\u56fd\u4ea7\u64cd\u4f5c\u7cfb\u7edf</p> <p>lab\u6587\u6863\u91cc\u63a8\u8350\u7684\u662f\u7528Debian\uff0c\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u7684\u65f6\u5019\u4e5f\u662f\u7528\u7684Debian\uff0c\u4f46\u5b83\u7ed9\u6211\u4e00\u79cd\u5f88\u539f\u59cb\u7684\u611f\u89c9\uff0c\u754c\u9762\u4e5f\u5f88\u4e11\uff0c\u6240\u4ee5\u60f3\u9009\u62e9ubuntu\u3002\u540e\u7eed\u53ef\u80fd\u9700\u8981\u4e0d\u6b62\u4e00\u53f0\u865a\u62df\u673a\u6765\u5f62\u6210\u96c6\u7fa4\uff0c\u90a3\u65f6\u5019\u4f1a\u7f29\u51cf\u865a\u62df\u673a\u5185\u5b58\u800c\u4e0d\u52a0\u684c\u9762\uff0c\u4f46\u7b2c\u4e00\u53f0\u865a\u62df\u673a\u4e3a\u4e86\u4f53\u9a8c\u5c31\u5b89\u88c5\u684c\u9762\u7248\u7684ubuntu\u3002\u4e2d\u79d1\u5927\u7684\u6587\u6863\u4e2d\u6709\u8f7b\u91cf\u5316xubuntu\u7684\u955c\u50cf https://101.lug.ustc.edu.cn/Ch01/#get-vm-softwares</p> <p>\u4eceTHU\u7684\u955c\u50cf\u7ad9 https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/bionic/ \u4e0b\u8f7d\u684c\u9762\u7248\u7684ubuntu-18.04.6-desktop-amd64.iso\uff0c\u6dfb\u52a0\u5230VMware\u65b0\u5efa\u7684\u865a\u62df\u673a\u4e2d\uff0c\u540e\u9762\u5c31\u6309\u6587\u6863\u4e00\u6b65\u6b65\u505a\u5c31\u597d</p> <p> \u4e8e\u662f\u5c31\u6210\u529f\u505a\u51fa\u4e86\u7b2c\u4e00\u53f0\u865a\u62df\u673a  </p> <p>\u63a5\u4e0b\u6765\u5c1d\u8bd5\u628azsh\u4f5c\u4e3a\u9ed8\u8ba4\u7684shell\uff0c\u5e76\u52a0\u5165oh-my-zsh\uff0c\u53c2\u8003 https://note.tonycrane.cc/cs/tools/shell/ \u548c https://www.haoyep.com/posts/zsh-config-oh-my-zsh/  </p> <p> oh my zsh\uff01  </p> <p>\u4e4b\u540e\u53ef\u4ee5\u8bbe\u7f6epowerlevel 10k\u4e3b\u9898\u548c\u5b89\u88c5\u63d2\u4ef6\uff08\u6682\u65f6\u6ca1\u5b89\u88c5\u63d2\u4ef6\uff09</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#02-shelllinux-basics","title":"0.2 Shell&amp;Linux Basics","text":"<p>\u81ea\u5b66\u6587\u6863 https://slides.tonycrane.cc/PracticalSkillsTutorial/2023-fall-ckc/lec1/#/2/8 b\u7ad9\u89c6\u9891 https://www.bilibili.com/video/BV1ry4y1A7qo/?vd_source=5742e02a7566918d65a441adce5bc163  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#021-command-line-interfacecli","title":"0.2.1 Command Line Interface(CLI)","text":"<p>lab\u6587\u6863\u8981\u6c42\u770b https://ubuntu.com/tutorials/command-line-for-beginners#1-overview \uff08The Linux command line for beginners - Ubuntu.\uff09Section1-5</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#0211the-linux-command-line-for-beginners-ubuntu","title":"0.2.1.1The Linux command line for beginners - Ubuntu","text":"<p>\u8fd9\u91cc\u662f\u76f4\u63a5\u770b\u7afa\u9662\u8f85\u5b66\u7684\u89c6\u9891\u6765\u5b66\u7684 https://www.bilibili.com/video/BV1ry4y1A7qo/?vd_source=5742e02a7566918d65a441adce5bc163  </p> <p>prompt \u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u7528\u6765\u7b49\u5f85\u8f93\u5165\u5e76\u7ed9\u51fa\u4e00\u4e9b\u4fe1\u606f </p> <p>\u6700\u91cd\u8981\u7684\u662f\u5de5\u4f5c\u8def\u5f84\uff0c\u4e5f\u5c31\u662fshell\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u8def\u5f84\u76f8\u5173\u547d\u4ee4\u6709\uff1a  </p> <p>pwd(print working directory)\u83b7\u53d6\u5f53\u524d\u7684\u4f4d\u7f6e\uff08~\u4ee3\u8868\u7684\u5c31\u662f\u5f53\u524d\u7528\u6237\u7684\u201chome\u201d\u76ee\u5f55\uff09 cd path(change directory):\u5207\u6362\u8def\u5f84  </p> <p>path\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84 path\u4e2d~\u4ee3\u8868home\uff0c.\u4ee3\u8868\u5f53\u524d\u8def\u5f84\uff0c..\u4ee3\u8868\u4e0a\u4e00\u7ea7\u8def\u5f84 </p> <p>\u6587\u4ef6/\u76ee\u5f55\u64cd\u4f5c\u547d\u4ee4</p> <p>ls\uff1a\u5217\u51fa\u5f53\u524d\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff08-a\u5217\u51fa\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff1b-l\u5217\u51fa\u8be6\u7ec6\u4fe1\u606f\uff09 touch file\uff1a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 mkdir dir\uff1a\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55 cp src dst\uff1a\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\uff08-r\u9012\u5f52\u590d\u5236\u76ee\u5f55\uff09 mv src dst\uff1a\u79fb\u52a8\u6587\u4ef6\u6216\u76ee\u5f55(\u91cd\u547d\u540d)dst\u5982\u679c\u662f\u6587\u4ef6\u5939\uff0c\u5c31\u6709 rm files..\uff1a\u5220\u9664\u6587\u4ef6\uff08-r\u9012\u5f52\u5220\u9664\u76ee\u5f55\uff1b-f\u5f3a\u5236\u5220\u9664\uff09 find path -name pattern\uff1a\u5728path\u4e0b\u67e5\u627e\u6587\u4ef6\u540d\u5339\u914dpattern\u7684\u6587\u4ef6  </p> <p>\u6587\u4ef6\u5185\u5bb9\u67e5\u770b\u547d\u4ee4 </p> <p>cat files ...\uff1a\u8f93\u51fa\u4e0e\u62fc\u63a5\u6587\u4ef6\uff08-n\uff1a\u5e26\u7b26\u53f7\u8f93\u51fa\uff09 head files\uff1a\u8f93\u51fafile\u524d10\u884c\uff08-n lines\uff1a\u8f93\u51fa\u524dlines\u884c\uff09 tail files\uff1a\u8f93\u51fafile\u540e10\u884c\uff08-n lines\uff1a\u8f93\u51fa\u540elines\u884c\uff09 more/less file\uff1a\u5206\u9875\u8f93\u51fafile\u5185\u5bb9  </p> <p>\u8fd9\u91cc\u7559\u4e2a\u5751\uff0c\u5173\u4e8eshell\u7684\u8bed\u6cd5\u4e4b\u540e\u518d\u8865</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#022-linux-file-system","title":"0.2.2 Linux File System","text":"<p>(\u5f85)  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#023the-advanced-packaging-toolapt","title":"0.2.3The Advanced Packaging Tool(APT)","text":"<p>(\u5f85)  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#03-access-the-virtual-machine-using-ssh","title":"0.3 Access the Virtual Machine using SSH","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#031-basic-concepts","title":"0.3.1 basic concepts","text":"<ul> <li> IP address</li> <li> MAC address</li> <li> Subnet mask</li> <li> Gateway</li> <li> Port</li> <li> Port forwarding  </li> </ul> <p>https://www.bilibili.com/video/BV1CQ4y1d728/?vd_source=5742e02a7566918d65a441adce5bc163  </p> <p>https://www.bilibili.com/video/BV1DD4y127r4/?vd_source=5742e02a7566918d65a441adce5bc163  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#032-network-in-virtual-machines","title":"0.3.2 Network in Virtual Machines","text":"<ul> <li> Ping the virtual machine  </li> </ul> <p>step1:Check if the network mode of the virtual machine is set to NAT.    step2:Use the ip addr command to find the IP address of the virtual machine.  From the screenshot, the virtual machine has two network interfaces: ens33 and lo. The latter is the loopback interface, and the former is the network interface used to connect to the network. We can see that the IP address of the virtual machine is 192.168.75.128. Open a terminal on your host machine and ping the virtual machine. ping 192.168.75.128 The ouput is like: </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#033-ssh","title":"0.3.3 SSH","text":"<p>Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network. The best-known example application is for remote login to computer systems by users. More about the Asymmetric Encryption:https://www.youtube.com/watch?v=AQDCe585Lnc </p> <ul> <li> Connect to the virtual machine using SSH  </li> </ul> <p>step1:\u6211\u9009\u62e9\u5728\u865a\u62df\u673a\u4e0a\u64cd\u4f5c\uff0c\u4e00\u822cLinux\u548cmacOS\u4e0a\u5df2\u7ecf\u9884\u88c5\u4e86SSH client\uff0c\u5982\u679c\u8981\u5728windows\u4e0a\u88c5\uff0c\u53ef\u4ee5\u53c2\u8003\uff1ahttps://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstusetabs=gui#install-openssh-for-windows step2:You also need to install an SSH server on the virtual machine. sudo apt update sudo apt install openssh-server  step3:After installing the SSH server, you can use the ssh command to connect to the virtual machine: ssh username@IP_ADDRESS Replace username with your username on the virtual machine and IP_ADDRESS with the IP address of the virtual machine.  Now you can copy and paste commands to this terminal. You can also use the scp command to copy files between your computer and the virtual machine. You can also connect your VSCode to the virtual machine using the Remote-SSH extension, but don't rely on it too much.  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#04-more-on-linux","title":"0.4 More on Linux","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#041-user-and-permissions","title":"0.4.1 User and Permissions","text":"<p>lab\u6587\u6863\u7ed9\u7684\u81ea\u5b66\u89c6\u9891\u662fyoutube\u4e0a\u7684 https://www.youtube.com/watch?v=19WOD84JFxA \u548c https://www.youtube.com/watch?v=LnKoncbQBsM \u4e24\u4e2a\u5168\u82f1\u6587\u65e0\u5b57\u5e55\u89c6\u9891\uff0c\u4e3a\u4e86\u8d76\u65f6\u95f4\u6211\u5c31\u7528\u4e2d\u79d1\u5927\u6587\u6863\u91cc\u7684 https://101.lug.ustc.edu.cn/Ch05/#users-and-groups \u5e73\u66ff\u4e86\uff08\u8fd8\u5f97\u662f\u4e2d\u79d1\u5927\uff09  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#0411-users-and-groups","title":"0.4.1.1 Users and Groups","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b /etc/passwd \u6587\u4ef6\uff0c\u6765\u5f97\u5230\u7cfb\u7edf\u4e2d\u7528\u6237\u7684\u914d\u7f6e\u4fe1\u606f  \u8fd9\u91cc\u9664\u4e86\u5f88\u540e\u9762\u7684lee\u7528\u6237\uff08\u6ca1\u622a\u8fdb\u53bb\uff09\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684root\u7528\u6237 </p> <p>\u6839\u7528\u6237 \u4e4b\u524d\u52a0\u4e0a\u7684sudo\u53ef\u4ee5\u8ba9\u6211\u4eec\u4ee5\u6839\u7528\u6237\u7684\u8eab\u4efd\u5b89\u88c5\u8f6f\u4ef6\uff08apt\u5b89\u88c5\u8f6f\u4ef6\u5b89\u88c5\u5728\u7cfb\u7edf\u76ee\u5f55\u4e0b\uff0c\u5fc5\u987b\u8981\u4ee5root\u7528\u6237\u7684\u8eab\u4efd\u53bb\u5b89\u88c5\uff09\uff0c/root\u7528\u6237\u5728Linux\u7cfb\u7edf\u4e2d\u62e5\u6709\u6700\u9ad8\u7684\u6743\u9650  </p> <p>\u7cfb\u7edf\u7528\u6237 \u9664\u4e86lee\uff0croot\u4e4b\u5916\uff0c\u8fd8\u6709\u5f88\u591a\u5269\u4e0b\u7684\u7528\u6237\uff0c\u5b83\u4eec\u662f\u7531\u7cfb\u7edf\u6216\u76f8\u5173\u7a0b\u5e8f\u521b\u5efa\uff0c\u7528\u4e8e\u6267\u884c\u670d\u52a1\u7b49\u7cfb\u7edf\u4efb\u52a1\u3002\u4e0d\u8981\u968f\u610f\u5220\u9664\u8fd9\u4e9b\u7528\u6237\uff0c\u4ee5\u514d\u7cfb\u7edf\u8fd0\u884c\u51fa\u73b0\u95ee\u9898  </p> <p>\u666e\u901a\u7528\u6237 \u666e\u901a\u7528\u6237\u53ef\u4ee5\u767b\u5f55\u7cfb\u7edf\uff0c\u5e76\u5bf9\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002\u6240\u6709\u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u90fd\u5728/home/\u4e0b\uff0c\u4f4d\u4e8e/home/username/\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2dusername\u662f\u7528\u6237\u540d \u666e\u901a\u7528\u6237\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539\u7cfb\u7edf\u914d\u7f6e\uff0c\u4e5f\u65e0\u6cd5\u4e3a\u7cfb\u7edf\u73af\u5883\u5b89\u88c5\u6216\u5378\u8f7d\u8f6f\u4ef6  </p> <p>\u5207\u6362\u7528\u6237 sudo\u547d\u4ee4\u53ef\u4ee5\u8ba9\u4f60\u4ee5\u53e6\u4e00\u4e2a\u7528\u6237\u7684\u8eab\u4efd\u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\u3002\u5f53\u7136\uff0c\u5b83\u6700\u5e38\u89c1\u7684\u7528\u9014\uff0c\u5c31\u662f\u80fd\u8ba9\u666e\u901a\u7528\u6237\u4ee5root\u7684\u8eab\u4efd\u6267\u884c\u547d\u4ee4\uff1a\u4e0d\u52a0\u5165\u5176\u4ed6\u53c2\u6570\uff0csudo \u540e\u9762\u76f4\u63a5\u52a0\u547d\u4ee4\uff1b\u82e5\u8981\u4ee5\u5176\u4ed6\u7528\u6237\u7684\u8eab\u4efd\u6267\u884c\uff0c\u53ea\u8981\u52a0\u4e0a\u201c-u \u7528\u6237\u540d\u201d\u5c31\u884c\u4e86  </p> <p>\u5173\u4e8esu\u548csudo\u6709\u4e00\u5c0f\u6bb5\u6709\u8da3\u7684\u89e3\u91ca\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4e2d\u79d1\u5927\u6587\u6863  </p> <p>\u7528\u6237\u7ec4 \u7528\u6237\u7ec4\u662f\u7528\u6237\u7684\u96c6\u5408\u3002\u901a\u8fc7\u7528\u6237\u7ec4\u673a\u5236\uff0c\u53ef\u4ee5\u4e3a\u4e00\u6279\u7528\u6237\u8bbe\u7f6e\u6743\u9650\u3002\u53ef\u4ee5\u4f7f\u7528 groups \u547d\u4ee4\uff0c\u67e5\u770b\u81ea\u5df1\u6240\u5c5e\u7684\u7528\u6237\u7ec4  \u53ef\u4ee5\u770b\u5230\uff0clee\u5c5e\u4e8e\u591a\u4e2a\u7528\u6237\u7ec4\u3002\u4e00\u822c\u5728\u7528\u6237\u521b\u5efa\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u4e0e\u5176\u540d\u5b57\u76f8\u540c\u7684\u7528\u6237\u7ec4  </p> <p>\u6587\u4ef6\u6743\u9650 \u5728 Linux \u4e2d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u90fd\u6709\u81ea\u5df1\u7684\u6743\u9650\u3002\u53ef\u4ee5\u4f7f\u7528 ls -l \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e2d\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f  \u7b2c\u4e00\u5217\u7684\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u610f\u4e49\u5206\u522b\u662f\uff1a\u6587\u4ef6\u7c7b\u578b\uff08\u4e00\u4f4d\uff09\u3001\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u7684\u6743\u9650\uff08\u4e09\u4f4d\uff09\u3001\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u7ec4\u7684\u6743\u9650\uff08\u4e09\u4f4d\uff09\u3001\u5176\u4ed6\u4eba\u7684\u6743\u9650\uff08\u4e09\u4f4d\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6743\u9650\uff0c\u7b2c\u4e00\u4f4d r \u4ee3\u8868\u8bfb\u53d6 (Read)\uff0c\u7b2c\u4e8c\u4f4d w \u4ee3\u8868\u5199\u5165 (Write)\uff0c\u7b2c\u4e09\u4f4d x \u4ee3\u8868\u6267\u884c (Execute)\uff0c- \u4ee3\u8868\u6ca1\u6709\u5bf9\u5e94\u7684\u6743\u9650\u3002 \u7b2c\u4e09\u3001\u56db\u5217\u4e3a\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u548c\u7528\u6237\u7ec4\u3002</p> <p>\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784 Linux \u4e0b\u6587\u4ef6\u7cfb\u7edf\u7684\u7ed3\u6784\u548c Windows \u7684\u5f88\u4e0d\u4e00\u6837\u3002\u5728 Windows \u4e2d\uff0c\u5206\u533a\u4ee5\u76d8\u7b26\u7684\u5f62\u5f0f\u6765\u6807\u8bc6\uff08\u5982\u300cC \u76d8\u300d\u3001\u300cD \u76d8\u300d\uff09\uff0c\u5404\u4e2a\u5206\u533a\u7684\u5206\u754c\u7ebf\u662f\u5f88\u660e\u786e\u7684\u3002\u5728\u7cfb\u7edf\u6240\u5728\u7684\u5206\u533a\uff08\u4e00\u822c\u4e3a C \u76d8\uff09\u4e2d\uff0c\u5b58\u50a8\u7740\u7a0b\u5e8f\u6587\u4ef6 (Program Files)\uff0c\u7cfb\u7edf\u8fd0\u884c\u9700\u8981\u7684\u6587\u4ef6 (Windows)\uff0c\u7528\u6237\u6587\u4ef6 (Users) \u7b49\u3002\u8fd9\u79cd\u7ec4\u7ec7\u5f62\u5f0f\u6e90\u4e8e DOS \u548c\u65e9\u671f\u7684 Windows\uff0c\u5e76\u4e00\u76f4\u4f20\u627f\u4e0b\u6765\u3002 \u800c UNIX \u7cfb\u5217\u91c7\u7528\u4e86\u4e00\u79cd\u4e0d\u4e00\u6837\u7684\u601d\u8def\u7ec4\u7ec7\u6587\u4ef6\uff1a\u6574\u4e2a\u7cfb\u7edf\u7684\u6587\u4ef6\u90fd\u4ece /\uff08\u6839\u76ee\u5f55\uff09\u5f00\u59cb\uff0c\u50cf\u4e00\u68f5\u6811\u4e00\u6837\uff0c\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u3002  \u5176\u4ed6\u7684\u5206\u533a\u4ee5\u6302\u8f7d (mount) \u7684\u5f62\u5f0f\u300c\u6302\u300d\u5728\u4e86\u8fd9\u68f5\u6811\u4e0a\uff0c\u5982\u56fe\u4e2d\u7684/mnt/windows_disk/ \u90e8\u5206\u5173\u4e8e\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u7684\u6587\u6863\u53ef\u4ee5\u5728\u4e2d\u79d1\u5927\u6587\u6863\u4e2d\u67e5\u770b  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#0412-environment-variables","title":"0.4.1.2 Environment Variables","text":"<p>\u53c2\u8003\u6587\u6863\uff1ahttps://linuxize.com/post/how-to-set-and-list-environment-variables-in-linux/  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#05-git","title":"0.5 Git","text":"<p>\u8fd9\u91cc\u5c31\u662f\u6ce8\u518c\u4e00\u4e2aZJU Git\u8d26\u53f7\u548c\u6dfb\u52a0\u4e00\u4e2aSSH Key \u597d\u5de7\u4e0d\u5de7\uff0c\u4e4b\u524d\u6b63\u597d\u5f04\u8fc7\u4e00\u4e2aSSH Key\uff0c\u5c31\u521a\u597d\u62ff\u6765\u7528\u4e86\uff0c\u6dfb\u52a0\u597d\u4e4b\u540e\u6d4b\u8bd5\u4e00\u4e0b\u8fde\u63a5\u6210\u529f </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#06-lab0-tasks","title":"0.6 Lab0 Tasks","text":"<p>Task1.1 hush result  Task2.1 nano\u5728\u4e2d\u79d1\u5927\u6587\u6863\u4e2d\u6709\u7b80\u5355\u4ecb\u7ecd\uff1aNano \u662f\u5728\u5f88\u591a\u673a\u5668\u4e0a\u81ea\u5e26\u7684\u547d\u4ee4\u884c\u6587\u672c\u7f16\u8f91\u5668\uff0c\u76f8\u6bd4\u4e8e vim \u548c emacs \u6765\u8bf4\uff0c\u5bf9\u65b0\u624b\u66f4\u52a0\u53cb\u597d\uff0c\u4e0d\u9700\u8981\u63d0\u524d\u8bb0\u5fc6\u590d\u6742\u7684\u952e\u4f4d $ nano file.txt  # \u4f7f\u7528 nano \u7f16\u8f91 file.txt \u6587\u4ef6\uff08\u5982\u679c\u6ca1\u6709\u5219\u521b\u5efa\uff09 Nano \u542f\u52a8\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u8f93\u5165\u9700\u8981\u7684\u5185\u5bb9\uff0c\u4f7f\u7528\u65b9\u5411\u952e\u79fb\u52a8\u5149\u6807\u3002\u5728\u7ec8\u7aef\u6700\u4e0b\u65b9\u662f nano \u7684\u5feb\u6377\u952e\uff0c^ \u4ee3\u8868\u9700\u8981\u6309\u4e0b Ctrl \u952e\uff08\u4f8b\u5982\uff0c^X \u5c31\u662f\u9700\u8981\u540c\u65f6\u6309\u4e0b Ctrl + X\uff09\u3002\u5728\u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u6309\u4e0b Ctrl + X\uff0c\u786e\u8ba4\u662f\u5426\u4fdd\u5b58\u540e\u5373\u53ef\u3002 </p> <p>Task3.2 </p> <p>Task5.2 </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab1","title":"Lab1:\u7b80\u5355\u96c6\u7fa4\u642d\u5efa","text":"<p>\u8fd9\u662f\u7b2c\u4e00\u6b21\u63a5\u89e6\u5230\u8ba1\u7b97\u673a\u96c6\u7fa4\u7684\u6982\u5ff5\uff1a\uff09 \u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u56db\u53f0\u865a\u62df\u673a\u642d\u5efa\u4e00\u4e2a\u7b80\u6613\u7684\u96c6\u7fa4\uff0c\u5e76\u5bf9\u8be5\u96c6\u7fa4\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u6700\u540e\u63d0\u4ea4\u6d4b\u8bd5\u7ed3\u679c\u548c\u5b9e\u9a8c\u62a5\u544a\u3002  </p> <p>\u8f6f\u4ef6\u5b89\u88c5 - [x] \u4e0b\u8f7dOpenMPI\u3001BLAS\u548cHPL\u7684\u6e90\u4ee3\u7801\u5e76\u7f16\u8bd1\u5b89\u88c5 \u96c6\u7fa4\u642d\u5efa - [x] \u514b\u9686\u865a\u62df\u673a - [x] \u914d\u7f6e\u865a\u62df\u673a\u4e92\u8054 - [x] \u6d4b\u8bd5\u8282\u70b9\u95f4\u901a\u4fe1 \u6027\u80fd\u6d4b\u8bd5 - [x] \u5728\u865a\u62df\u673a\u96c6\u7fa4\u4e0a\u4f7f\u7528openMPI\u8fd0\u884cHPL\u6027\u80fd\u6d4b\u8bd5\uff0c\u8bb0\u5f55\u6d4b\u8bd5\u7ed3\u679c Bonus\uff08\u9009\u505a\uff09 - [ ] \u914d\u7f6eNFS\u5e76\u590d\u73b0\u5b9e\u9a8c - [ ] \u4f7f\u7528Docker\u590d\u73b0\u5b9e\u9a8c - [ ] \u4f7f\u7528Spack\u590d\u73b0\u5b9e\u9a8c  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#11-linux-angband","title":"1.1 \u4ece\u6e90\u7801\u6784\u5efaLinux\u5e94\u7528-\u4ee5Angband\u4e3a\u4f8b","text":"<p>\u5728 Linux \u751f\u6001\u4e2d\uff0c\u6e90\u4ee3\u7801\u662f\u6700\u901a\u7528\u7684\u8f6f\u4ef6\u5206\u53d1\u5f62\u5f0f\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#111","title":"1.1.1 \u8f6f\u4ef6\u5305\u6e90\u7801\u7684\u7ec4\u7ec7\u65b9\u5f0f","text":"<p>\u8fdb\u5165 Angband \u7684\u7f51\u7ad9\uff0c\u70b9\u51fb Source Code\uff0c\u4e0b\u8f7d\u6700\u65b0\u7684\u6e90\u4ee3\u7801\u538b\u7f29\u5305\u5e76\u89e3\u538b\u3002 wget https://github.com/angband/angband/releases/download/4.2.5/Angband-4.2.5.tar.gz tar xvf Angband-4.2.5.tar.gz cd Angband-4.2.5 ls </p> <p>\u5f00\u6e90\u8f6f\u4ef6\u5305\u6e90\u7801\u7684\u76ee\u5f55\u7ed3\u6784 . \u251c\u2500\u2500 bin\uff1a\u5b58\u653e\u8f6f\u4ef6\u5305\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08binary\uff09\u3002 \u251c\u2500\u2500 src\uff1a\u5b58\u653e\u8f6f\u4ef6\u5305\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff08source\uff09\u3002 \u251c\u2500\u2500 lib\uff1a\u5b58\u653e\u8f6f\u4ef6\u5305\u7684\u5e93\u6587\u4ef6\uff08libraries\uff09\u3002 \u251c\u2500\u2500 docs\uff1a\u5b58\u653e\u8f6f\u4ef6\u5305\u7684\u6587\u6863\u6587\u4ef6\uff0c\u53ef\u80fd\u5305\u62ec\u7528\u6237\u624b\u518c\u3001API\u6587\u6863\u7b49\u3002 \u2514\u2500\u2500 README.md\uff1a\u5305\u542b\u8f6f\u4ef6\u5305\u7684\u8bf4\u660e\u6587\u6863\uff0c\u901a\u5e38\u5305\u62ec\u8f6f\u4ef6\u5305\u7684\u7b80\u8981\u4ecb\u7ecd\u3001\u5b89\u88c5\u6307\u5357\u548c\u4f7f\u7528\u8bf4\u660e\u3002  </p> <p>\u5728README.md\u6587\u4ef6\u4e2d\uff0c\u7ef4\u62a4\u8005\u63cf\u8ff0\u4e86\u5982\u4f55\u7f16\u8bd1\u4ee3\u7801\uff0c\u5728compile it yourself-&gt;Lnux-&gt;Native builds\u4e2d\u53ef\u4ee5\u627e\u5230\u6784\u5efaAngband\u7684\u547d\u4ee4\uff1a ./configure --with-no-install make  \u8fd0\u884c\u540e\uff0c\u9047\u5230\u4e86\u9519\u8bef\uff1a  \u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u865a\u62df\u673a\u4e0a\u6ca1\u6709\u5b89\u88c5C\u7f16\u8bd1\u5668\u3002\u8fd9\u91cc\u5b89\u88c5\u4e86gcc\u4f5c\u4e3aC\u7f16\u8bd1\u5668 sudo apt update sudo apt install gcc \u4e4b\u540e\u68c0\u67e5\u4e00\u4e0bgcc\u7684\u4f4d\u7f6e\u770b\u6709\u6ca1\u6709\u5b89\u88c5\u6210\u529f  \u518d\u6b21\u8fd0\u884c\uff0c\u8fd8\u662f\u6709\u95ee\u9898  \u610f\u601d\u662f\u6211\u4eec\u8fd8\u7f3a\u4e86\u4e00\u4e2a\u7528\u4e8e\u81ea\u52a8\u5316\u7f16\u8bd1\u548c\u6784\u5efa\u7a0b\u5e8f\u7684make\u5de5\u5177\uff0c\u6211\u4eec\u518d\u5b89\u88c5\u4e00\u4e2abuild-seeential\u8f6f\u4ef6\u5305\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5168\u9762\u7684\u7f16\u8bd1\u5668\u548c\u6784\u5efa\u5de5\u5177 sudo apt update sudo apt install build-essential  \u8fd9\u65f6\u5019make\u5c31\u53ef\u4ee5\u88ab\u6b63\u5e38\u627e\u5230\u4e86 \u6211\u4eec\u518d\u5c1d\u8bd5 ./configure --with-no-install  make  \u6b63\u786e\u6267\u884c\u540e\uff0c\u4f1a\u5728src\u76ee\u5f55\u4e0b\u627e\u5230angband\u53ef\u6267\u884c\u6587\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\uff1a  P.S \u8fd9\u91cc\u5176\u5b9e\u8fd8\u51fa\u73b0\u4e86\u627e\u4e0d\u5230src/angband\u7684\u95ee\u9898\uff0c\u4f46\u91cd\u65b0\u4e0b\u8f7d\u4e00\u6b21\u5c45\u7136\u5c31\u597d\u4e86  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#112","title":"1.1.2 \u4ee4\u4eba\u5934\u75bc\u7684\u4f9d\u8d56\u5173\u7cfb\u4e0e\u6570\u636e\u5e93","text":"<p>\u5de5\u7a0b\u5f00\u53d1\u662f\u591a\u6587\u4ef6\u7f16\u7a0b\uff1a\u7f16\u8bd1\u5668\u5c06\u6bcf\u4e2a\u4ee3\u7801\u6587\u4ef6\u5206\u522b\u7f16\u8bd1\u540e\uff0c\u8fd8\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5728\u4e00\u8d77\u53d8\u6210\u4e00\u4e2a\u8f6f\u4ef6\uff0c\u5408\u5728\u4e00\u8d77\u7684\u8fc7\u7a0b\u79f0\u4e3a\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u770bwk\u8001\u5e08\u7684\u667a\u4e91 https://classroom.zju.edu.cn/livingroom\uff1fcourse_id=53613&amp;sub_id=1028201&amp;tenant_code=112 \u94fe\u63a5\u5206\u4e3a\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u3002\u9759\u6001\u94fe\u63a5\u662f\u6307\u5728\u7f16\u8bd1\u65f6\u5c06\u5e93\u6587\u4ef6\u7684\u4ee3\u7801\u548c\u7a0b\u5e8f\u4ee3\u7801\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u751f\u6210\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u52a8\u6001\u94fe\u63a5\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u52a0\u8f7d\u5e93\u6587\u4ef6\uff0c\u4ece\u800c\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u590d\u7528\u6027\u548c\u7075\u6d3b\u6027\u3002  </p> <p>\u9759\u6001\u94fe\u63a5 \u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u4e0e\u9759\u6001\u5e93\u94fe\u63a5\uff0c\u90a3\u4e48\u94fe\u63a5\u5668\u4f1a\u5c06\u9759\u6001\u5e93\u4e2d\u7684\u4ee3\u7801\u590d\u5236\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u3002\u8fd9\u6837\uff0c\u4f60\u7684\u7a0b\u5e8f\u5c31\u4e0d\u518d\u4f9d\u8d56\u9759\u6001\u5e93\u4e86\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u5982\u679c\u9759\u6001\u5e93\u4e2d\u7684\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f60\u7684\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u4f60\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4f60\u7684\u7a0b\u5e8f\u3002 \u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u9759\u6001\u5e93\u7684\u6587\u4ef6\u540d\u4ee5 .a \u7ed3\u5c3e\uff0c\u6bd4\u5982 libm.a\u3002\u5728 Window \u4e0a\uff0c\u9759\u6001\u5e93\u7684\u6587\u4ef6\u540d\u4ee5 .lib \u7ed3\u5c3e\uff0c\u6bd4\u5982 libm.lib\u3002\u9759\u6001\u5e93\u53ef\u4ee5\u4f7f\u7528 ar \uff08archive program\uff09\u5de5\u5177\u521b\u5efa\u3002</p> <p>\u52a8\u6001\u94fe\u63a5 \u5f53\u4f60\u7684\u7a0b\u5e8f\u4e0e\u52a8\u6001\u5e93\u94fe\u63a5\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u8868\u3002\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u9700\u8981\u7684\u5916\u90e8\u51fd\u6570\u7684\u673a\u5668\u7801\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u94fe\u63a5\u8fc7\u7a0b\u3002 \u4e0e\u9759\u6001\u94fe\u63a5\u76f8\u6bd4\uff0c\u52a8\u6001\u94fe\u63a5\u4f7f\u7a0b\u5e8f\u6587\u4ef6\u66f4\u5c0f\uff0c\u56e0\u4e3a\u4e00\u4e2a\u52a8\u6001\u5e93\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u4eab\uff0c\u8282\u7701\u78c1\u76d8\u7a7a\u95f4\u3002\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u5141\u8bb8\u52a8\u6001\u5e93\u4ee3\u7801\u5728\u5185\u5b58\u4e2d\u7684\u5171\u4eab\uff0c\u8fd8\u80fd\u591f\u8282\u7701\u5185\u5b58\u3002\u52a8\u6001\u5e93\u5347\u7ea7\u65f6\uff0c\u4e5f\u4e0d\u9700\u8981\u91cd\u5199\u7f16\u8bd1\u4f60\u7684\u7a0b\u5e8f\u3002 \u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u52a8\u6001\u5e93\u7684\u6587\u4ef6\u540d\u4ee5 .so \u7ed3\u5c3e\uff0c\u6bd4\u5982 libm.so\u3002\u5728 Window \u4e0a\uff0c\u52a8\u6001\u5e93\u7684\u6587\u4ef6\u540d\u4ee5 .dll \u7ed3\u5c3e\uff0c\u6bd4\u5982 libm.dll\u3002  </p> <p>\u94fe\u63a5\u76f8\u5173\u7684\u95ee\u9898\u53ef\u80fd\u51fa\u73b0\u5728\u94fe\u63a5\u65f6\uff08\u9759\u6001\u94fe\u63a5\uff09\u3001\u7a0b\u5e8f\u8fd0\u884c\u524d\u548c\u8fd0\u884c\u4e2d\uff08\u52a8\u6001\u94fe\u63a5\uff09\u3002\u6bd4\u5982\uff1a\u672a\u5b9a\u4e49\u7684\u5e94\u7528\u3001\u7f3a\u5931.dll\uff08\u7f3a\u5c11\u52a8\u6001\u94fe\u63a5\u5e93\uff09\u3001\u7f3a\u5931.so\uff08Linux\u4e0a\u7684\u52a8\u6001\u5e93\uff09</p> <p>\u7531\u4e8e\u865a\u62df\u673a\u4e4b\u524d\u6ca1\u6709\u5b89\u88c5\u8fc7\u76f8\u5173\u8f6f\u4ef6\u5305\uff0c\u6240\u4ee5src/angband\u8fd0\u884c\u540e\u6ca1\u6709\u51fa\u73b0\u6e38\u620f\u754c\u9762\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\u4e86\u3002\u540c\u65f6\uff0c\u5728./configure\u4e2d\u4e5f\u7ed9\u51fa\u4e86warning  \u5f80\u4e0a\u7ffb\u8fd8\u4f1a\u53d1\u73b0missing libraries  Angband \u4f7f\u7528\u4e86 ncurses \u5e93\u6765\u5b9e\u73b0\u6e38\u620f\u754c\u9762\u3002\u4f46\u8fd9\u4e2a\u5e93\u4e0d\u4f1a\u88ab\u5305\u542b\u5728 Angband \u7684\u6e90\u4ee3\u7801\u4e2d\uff0c\u4e5f\u6ca1\u6709\u9ed8\u8ba4\u5305\u542b\u5728\u7cfb\u7edf\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u624b\u52a8\u5b89\u88c5\u3002  \u901a\u8fc7\u7f51\u7edc\u641c\u7d22\uff0c\u6211\u4eec\u5f97\u77e5 ncurses \u5e93\u5305\u542b\u5728 libncurses5-dev \u8f6f\u4ef6\u5305\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u5b83\uff1a sudo apt install libncurses5-dev \u4e4b\u540e\u518d\u6b21\u8fd0\u884c./configure\u5c31\u80fd\u8bc6\u522b\u5230ncurses\u5e93\u4e86  P.S \u8fd9\u91cc\u540c\u6837\u9047\u5230\u4e86\u4e00\u4e9b\u963b\u788d\uff0c\u521a\u4e0b\u8f7d\u5b8c\u540e\u8fd0\u884c./configure\u8fd8\u662f\u4e0d\u80fd\u8bc6\u522b\u5230ncurses\u5e93\uff0c\u5173\u6389terminal\u91cd\u8d70\u4e00\u904d\u6d41\u7a0b\u540e\u53c8\u597d\u4e86 </p> <p>\u81f3\u6b64\u6211\u4eec\u89e3\u51b3\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f9d\u8d56\u95ee\u9898\uff1aAngband-&gt;ncurses\u3002\u5728HPC\u5e94\u7528\u4e2d\uff0c\u5b9e\u9645\u7684\u4f9d\u8d56\u5173\u7cfb\u6781\u5176\u590d\u6742\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u5c06\u4f7f\u7528\u81ea\u52a8\u5316\u5de5\u5177\u548c\u5305\u7ba1\u7406\u5668\u89e3\u51b3\u90e8\u5206\u95ee\u9898\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#113","title":"1.1.3 \u4e0d\u600e\u4e48\u81ea\u52a8\u7684\u81ea\u52a8\u5316\u6784\u5efa\u5de5\u5177","text":"<p>./configure\u548cmake\u5de5\u5177\u7528\u4e8e\u6784\u5efa\u8f6f\u4ef6\u5305\uff0c\u5c31\u662fGNU Autotools\u6784\u5efa\u7cfb\u7edf\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u5173\u4e8e\u81ea\u52a8\u5316\u6784\u5efa\u5de5\u5177\uff08Automated Build Tools\uff09\u7684\u7b80\u4ecb\u53ef\u76f4\u63a5\u770blab\u6587\u6863\uff0c\u5176\u4e3b\u8981\u529f\u80fd\u5305\u62ec  </p> <p>\u7f16\u8bd1\u548c\u94fe\u63a5 \u4f9d\u8d56\u7ba1\u7406 \u4ee3\u7801\u68c0\u67e5 \u5355\u5143\u6d4b\u8bd5 \u6253\u5305\u548c\u90e8\u7f72  </p> <p>\u6709\u8da3\u7684\u662fAutotools\u5f80\u5f80\u80fd\u5e26\u6765\u4e00\u5806\u95ee\u9898\uff0c\u4f46\u53c8\u4e0d\u5f97\u4e0d\u7528\u5b83\u63d0\u9ad8\u6548\u7387 </p> <p>lab\u6587\u6863\u4e2d\u4ecb\u7ecd\u4e86\u4e24\u79cd\u6784\u5efa\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1131-gnu-autotools","title":"1.1.3.1 GNU Autotools","text":"<p>GNU Autotools\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u822c\u662f\uff1a\u9996\u5148\u4f7f\u7528Autoconf\u751f\u6210configure\u811a\u672c\uff0c\u7136\u540e\u7528configure\u811a\u672c\u751f\u6210Makefile\u6587\u4ef6\uff0c\u6700\u540e\u4f7f\u7528Makefile\u6587\u4ef6\u7f16\u8bd1\u548c\u94fe\u63a5\u6e90\u4ee3\u7801\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u6587\u4ef6\u3002\u5199\u6210\u547d\u4ee4\u5c31\u662f\uff1a ./configure make make install \u6d41\u7a0b\u4e2d\u6bcf\u4e2a\u73af\u8282\u90fd\u53ef\u4ee5\u5b9a\u5236\uff0c\u5982\u56fe\uff1a  \u8981\u5982\u4f55\u4fee\u6539\u8fd9\u4e9b\u6587\u4ef6\uff0c\u8981\u9605\u8bfbREADME\u548cINSTALL\u7b49\u6587\u4ef6\uff0c\u6709\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3a\u8fd9\u4e9b\u547d\u4ee4\u6dfb\u52a0\u53c2\u6570\u6765\u4fee\u6539\u884c\u4e3a\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1132-cmake","title":"1.1.3.2 CMake","text":"<p>CMake \u662f\u4e00\u4e2a\u66f4\u52a0\u73b0\u4ee3\u5316\u7684\u5f00\u6e90\u7684\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u5de5\u5177\u3002\u5b83\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u811a\u672c\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u6784\u5efa\u8fc7\u7a0b\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u63cf\u8ff0\u751f\u6210\u76f8\u5e94\u7684\u6784\u5efa\u6587\u4ef6\u3002\u4e0e GNU Autotools \u76f8\u6bd4\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\uff0c\u4e0e\u66f4\u591a\u7684\u73b0\u4ee3\u8f6f\u4ef6\u5982 IDE \u5b9e\u73b0\u4e86\u96c6\u6210\uff0c\u56e0\u6b64\u5728\u4e00\u4e9b\u9879\u76ee\u4e2d\u53d6\u4ee3\u4e86 Autotools\u3002\u4f46\u7f16\u5199 CMakeLists.txt \u4e5f\u6bd4 Makefile \u66f4\u4e3a\u62bd\u8c61\uff0c\u7406\u89e3\u548c\u4f7f\u7528\u96be\u5ea6\u4e5f\u66f4\u5927\u3002\u5b83\u7684\u9996\u8981\u4f18\u52bf\u662f\u8de8\u5e73\u53f0\u3002  CMake \u7684\u53e6\u4e00\u5927\u4f18\u52bf\u662f\u7f13\u5b58\u3002CMake \u4f1a\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\u751f\u6210\u4e00\u4e9b\u7f13\u5b58\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5305\u62ec\u7f16\u8bd1\u5668\u3001\u7f16\u8bd1\u9009\u9879\u3001\u4f9d\u8d56\u5e93\u7b49\u3002\u8fd9\u6837\uff0c\u5f53\u4f60\u4fee\u6539\u4e86\u6e90\u4ee3\u7801\u540e\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u8fd0\u884c CMake\uff0c\u5b83\u5c31\u4f1a\u6839\u636e\u7f13\u5b58\u6587\u4ef6\u91cd\u65b0\u751f\u6210\u6784\u5efa\u6587\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u68c0\u67e5\u3001\u914d\u7f6e\u548c\u751f\u6210\u3002\u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u7684\u589e\u91cf\u5f00\u53d1\u548c\u6784\u5efa\u6765\u8bf4\uff0c\u8fd9\u6781\u5927\u5730\u8282\u7ea6\u4e86\u65f6\u95f4\u3002 CMake \u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u822c\u662f\uff1a\u9996\u5148\u7f16\u5199 CMakeLists.txt \u6587\u4ef6\uff0c\u63cf\u8ff0\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u3001\u4f9d\u8d56\u5e93\u7b49\u4fe1\u606f\uff0c\u7136\u540e\u4f7f\u7528 CMake \u5de5\u5177\u751f\u6210\u6784\u5efa\u6587\u4ef6\uff0c\u6700\u540e\u4f7f\u7528\u6784\u5efa\u5de5\u5177\uff08\u5982 make\u3001ninja \u7b49\uff09\u7f16\u8bd1\u548c\u94fe\u63a5\u6e90\u4ee3\u7801\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u6587\u4ef6\u3002\u5bf9\u5e94\u7684\u547d\u4ee4\u5982\u4e0b\uff1a cmake -B build cmake --build build</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#12-openmpihpl","title":"1.2 \u4efb\u52a1\u4e00\uff1a\u4ece\u6e90\u7801\u6784\u5efaOpenMPI\u548cHPL","text":"<p>\u5bf9\u4e8e\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fee\u6539Makefile\u7684\u6b65\u9aa4\uff0c\u9700\u8981\u4e86\u89e3\u57fa\u672c\u7684Makefile\u8bed\u6cd5\uff0c\u53c2\u8003https://www.bilibili.com/video/BV188411L7d2/  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#121-makefile","title":"1.2.1 Makefile\u57fa\u672c\u8bed\u6cd5","text":"<p>\u6709\u8fd9\u6837\u51e0\u4e2a\u6587\u4ef6\uff0c\u8981\u5c06\u5b83\u4eec\u7efc\u5408\u8d77\u6765\u5de5\u4f5c\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u529e\u6cd5\uff1a </p> <p>version 0  </p> <p>\u76f4\u63a5\u5728terminal\u4e2d\u7f16\u8bd1 g++ main.cpp factorial.cpp printfhello.cpp -o main \u8fd0\u884c ./main \u4e0a\u8ff0\u884c\u4e3a\u4e5f\u53ef\u4ee5\u62c6\u6210\u4e09\u4e2a\u6b65\u9aa4\uff1a g++ main.cpp -c g++ factorial.cpp -c g++ printfhello.cpp -c  \u751f\u6210\u4e09\u4e2a.o\u6587\u4ef6 *g++ .o -o mian** \u628a\u4e09\u4e2a\u6587\u4ef6\u94fe\u5728\u4e00\u8d77\u751f\u6210\u4e00\u4e2a.0\u6587\u4ef6 \u8fd9\u6837\u505a\u53ef\u4ee5\u5355\u72ec\u7f16\u8bd1\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6\uff0c\u7f29\u77ed\u7f16\u8bd1\u65f6\u95f4  </p> <p>version 1  </p> <p>hello:main.cpp printfhello.cpp factorial.cpp     g++ -o hello main.cpp printfhello.cpp factorial.cpp \u76ee\u6807\u662f\u751f\u6210\u4e00\u4e2a\u540d\u53ebhello\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\uff0chello\u7684\u751f\u6210\u662f\u4f9d\u8d56\u4e8e\u540e\u9762\u4e09\u4e2a\u6587\u4ef6\u7684\uff1b\u4f7f\u7528g++\u8fd9\u4e2a\u547d\u4ee4\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807 \u8fd9\u53e5\u8bdd\u88ab\u5199\u5728Makefile\u6587\u4ef6\u4e2d\uff0c\u5f53\u6267\u884cmake (-f Makefile) \u65f6\uff0c\u5c31\u4f1a\u53bb\u627eMakefile\u6587\u4ef6\uff0c\u7136\u540e\u6267\u884c  </p> <p>version 2  </p> <p>CXX=g++ TARGET=hello OBJ=main.o prinfhello.o factorial.o </p> <p>\\((TARGET):\\)(OBJ)     $(CXX) -o $(TARGET) $(OBJ) </p> <p>main.o:main.cpp     $(CXX) -c main.cpp </p> <p>prinfhello.o:printfhello.cpp     $(CXX) -c printfhello.cpp </p> <p>fctorial.o:factorial.cpp     $(CXX) -c     factorial.cpp P.S \u8fd9\u91cc\u7684\u683c\u5f0f\u6709\u95ee\u9898,\u5177\u4f53\u76f4\u63a5\u770b\u89c6\u9891 \u5b9e\u9645\u5c31\u662f\u628aversion 1\u4e2d\u7684\u8bed\u8a00\u53d8\u5f97\u66f4\u6b63\u5f0f  </p> <p>version 3  </p> <p>\u5728version 2\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2aCXXFLAGS = -c -Wall \u7b80\u5316\u6210\uff1a %.o:%.cpp     $(CXX) $(CXXFLAGS) $&lt; -o %@ \u5b9e\u9645\u5c31\u662f\u66f4\u52a0\u62bd\u8c61\u5316\u4e86\uff0c\u5177\u4f53\u8fd8\u662f\u770b\u89c6\u9891  </p> <p>version 4  </p> <p>\u518d\u52a0\u4e00\u4e2aSRC=%(wildcard * .cpp) \u5c31\u4e0d\u7528\u518d\u5217\u51facpp\u6587\u4ef6\u4e86\uff0c\u76f4\u63a5\u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709cpp\u6587\u4ef6\u62c9\u8fdb\u6765\u4e86</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#122-tasks","title":"1.2.2 Tasks","text":"<p>\u8fd9\u51e0\u4e2a\u9879\u76ee\u7684\u4f9d\u8d56\u5173\u7cfb\uff1a </p> <p>\u6784\u5efa\u5e76\u5b89\u88c5OpenMPI  </p> <p>step1\uff1a\u524d\u5f80OpenMPI\u5b98\u7f51\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u6e90\u7801 wget \"https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.3.tar.gz\" tar xvf openmpi-5.0.3.tar.gz cd openmpi-5.0.3  step2\uff1a\u89e3\u538b\u6e90\u7801 ./configure #\u4e0d\u5e26\u53c2\u6570\uff0c\u5c06\u9ed8\u8ba4\u5b89\u88c5\u5230/usr/local/\u4e0b\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u4fee\u6539PATH\u548cLD_LIBRARAY_PATH\u7b49  step3\uff1a\u6784\u5efa\u5e76\u5b89\u88c5OpenMPI make sudo make install #\u5b89\u88c5\u5230\u7cfb\u7edf\u76ee\u5f55 /usr/local \u9700\u8981root\u6743\u9650 \u8fd9\u91cc\u51fa\u73b0\u4e86\u4e00\u4e2a\u5f88\u5c34\u5c2c\u7684\u4e8b\u60c5\uff1a\u62a5\u9519\u8bf4\u5185\u5b58\u6ee1\u4e86  \u68c0\u67e5\u4e00\u4e0b\u62a5\u9519\u7684/tmp\u4e2d\u7684\u5185\u5b58\u4f7f\u7528 df -h /tmp  \u786e\u5b9e\u662f\u6ee1\u4e86 \u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u7531\u4e8e\u6b63\u597d\u662fLab1\uff0c\u52a0\u4e0a\u4e4b\u524d\u7528ubuntu\u7684\u65f6\u5019\u5c31\u6253\u7b97\u5148\u8bd5\u4e00\u8bd5\uff08The very beginning\uff09\uff0c\u6240\u4ee5\u5c31\u91cd\u65b0\u5f00\u4e00\u4e2aVM   </p> <p>\u8fd9\u4e00\u6b21\u6211\u4eec\u4eceZJU Mirrors\u4e0a\u4e0b\u8f7dDebian ISO\uff0c\u7136\u540e\u6b63\u597d\u8865\u4e00\u4e0b\u4e4b\u524dlab0\u4e2dTask1\u7684\u5751 ZJU Mirror(\u6781\u5176\u7b80\u964b): https://mirrors.zju.edu.cn/debian-cd/ Your guide to Debian iso downloads: https://github.com/slowpeek/debian-iso-guide \u8fd9\u91cc\u6211\u9009\u62e9\u7684\u662f  \u7ed9\u7684\u786c\u4ef6\u914d\u7f6e  \u9009\u62e9\u7684\u662f\u82f1\u6587\u3002\u5728lab\u6587\u6863\u4e2d\u6709\u4e00\u53e5\u660e\u786e\u7684\u63d0\u793a\uff1a  Don't set a root password. Read the text on the screen carefully. </p> <p>If you leave this empty, the root account will be disabled and the system's initial user will be given the power to become root using the sudo command  </p> <p>So, if you set a root password, you will need to add yourself to the sudo group later manually. \u6240\u4ee5\u6ca1\u6709\u8bbe\u7f6eroot passward \u6309\u7167lab\u6587\u6863\u505a  \u867d\u7136lab\u6587\u6863\u7684\u610f\u601d\u597d\u50cf\u53ea\u8981SSH server and standard system utilities\uff0c\u4f46\u6211\u6839\u672c\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u6700\u540e\u88c5\u51fa\u6765\u7684\u8fd8\u662f\u6709\u684c\u9762\u7684\u865a\u62df\u673a\uff0c\u65f6\u95f4\u7d27\u8feb\uff0c\u5148\u51d1\u5408\u7740\u7528\u5427  </p> <p>\u91cd\u65b0\u4e0b\u8f7d\u4e00\u4e0bbuild-essential\uff0c\u91cd\u590d\u4e0a\u9762\u5b89\u88c5OpenMPI\u7684\u6d41\u7a0b  \u7b49\u4e86\u5927\u6982\u51e0\u767e\u5e74\u4e4b\u540emake\u5b8c\u4e86  \u81f3\u6b64\u56de\u5230\u4e4b\u524d\u7684\u6b65\u9aa4  step4\uff1a sudo ldconfig # \u66f4\u65b0\u52a8\u6001\u94fe\u63a5\u5e93\u7f13\u5b58 \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u52a0\u8fd9\u4e00\u6b65\uff0c\u53ef\u4ee5\u53c2\u8003https://lists.nongnu.org/archive/html/libtool/2014-05/msg00021.html step5\uff1a\u6700\u540e\u786e\u8ba4\u4e00\u4e0b\u5b89\u88c5\u4fe1\u606f ompi_info --all # \u67e5\u770b\u5b89\u88c5\u4fe1\u606f  \u5b89\u88c5\u5b8c\u6210</p> <p>\u6784\u5efa\u5e76\u5b89\u88c5BLAS  </p> <p>wget \"http://www.netlib.org/blas/blas-3.12.0.tgz\" tar xvf blas-3.12.0.tgz cd BLAS-3.12.0 make \u524d\u4e09\u53e5\u8bdd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46make\u7684\u65f6\u5019\u4f1a\u62a5\u9519\uff1a  \u63d0\u793a\u7f3a\u5c11\u4e86gfortran\uff0c\u9700\u8981\u4e0b\u8f7d sudo apt install gfortran \u4e4b\u540e\u5c31\u53ef\u4ee5\u6267\u884cmake\u4e86 </p> <p>\u6784\u5efa\u5e76\u5b89\u88c5HPL  </p> <p>step1 wget \"https://netlib.org/benchmark/hpl/hpl-2.3.tar.gz\" tar xvf hpl-2.3.tar.gz cd hpl-2.3</p> <p>step2 cp setup/Make.Linux_PII_FBLAS . \u8fd9\u4e00\u6307\u4ee4\u628aMake Linux_PII_FBLAS\u6587\u4ef6\u590d\u5236\u5230\u6267\u884c\u547d\u4ee4\u65f6\u6240\u5728\u7684\u76ee\u5f55  </p> <p>Make.Linux_PII_FBLAS\u6587\u4ef6\u662f\u4e00\u4e2aMakefile\u6a21\u677f\u6587\u4ef6\uff0c\u4e3b\u8981\u7528\u4e8e\u5728Linux\u7cfb\u7edf\u4e0b\uff0c\u9488\u5bf9\u7279\u5b9a\u786c\u4ef6\u5e73\u53f0\uff08\u5982PII\u5904\u7406\u5668\uff09\u548c\u7ebf\u6027\u4ee3\u6570\u5e93\uff08\u5982FBLAS\uff0c\u5373Fortran\u7248\u672c\u7684BLAS\uff09\u914d\u7f6eHPL\uff08High-Performance Linpack\uff09\u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u7f16\u8bd1HPL\u6240\u9700\u7684\u4e00\u7cfb\u5217\u914d\u7f6e\u6307\u4ee4\u548c\u53d8\u91cf\u5b9a\u4e49\uff0c\u5982\u7f16\u8bd1\u5668\u9009\u9879\u3001\u5e93\u6587\u4ef6\u8def\u5f84\u3001\u5934\u6587\u4ef6\u8def\u5f84\u7b49\u3002  </p> <p>step3 vim Make.Linux_PII_FBLAS # \u4fee\u6539 Makefile \u6ca1\u6709vim\u5c31\u88c5\u4e00\u4e2a Vim \u662f\u4e00\u79cd\u9ad8\u5ea6\u53ef\u914d\u7f6e\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u7528\u4e8e\u6709\u6548\u5730\u521b\u5efa\u548c\u66f4\u6539\u4efb\u4f55\u7c7b\u578b\u7684\u6587\u672c\u3002  \u8fd9\u91cc\u6211\u4eec\u8981\u5bf9Makefile\u6587\u4ef6\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u5411\u4e0b\u79fb\u52a8\u5149\u6807\u53ef\u4ee5\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206  \u5de6\u8fb9\u662f\u4fee\u6539\u540e\uff0c\u53f3\u8fb9\u662f\u4fee\u6539\u524d \u8fd9\u91cc\u7528vim\u4fee\u6539\u6709\u7279\u5b9a\u7684\u65b9\u5f0f\uff0c\u5177\u4f53\u5982\u4e0b\uff1a make arch=Linux_PII_FBLAS \u5728Makefile\u4e2d\u6307\u5b9aarch=Linux_PII_FBLAS\u8fd9\u6837\u7684\u76ee\u6807\u67b6\u6784 \u8fd9\u91cc\u62a5\u4e24\u4e2a\u9519\uff1a  \u7ecf\u8fc7\u4e86\u957f\u65f6\u95f4\u7684\u8c03\u8bd5\uff0c\u59cb\u7ec8\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u8be5\u6b7b\u7684error\uff0c\u5c1d\u8bd5\u522b\u7684\u9014\u5f84\u3002\u3002\u3002 \u53d1\u73b0\u5176\u4ed6\u5b9e\u9a8c\u8005\u7528\u7684\u90fd\u662fCBLAS\uff0c\u5e94\u8be5CBLAS\u4e2d\u6709\u53ef\u4ee5\u66ff\u4ee3\u8be5\u6b7b\u7684libmpich.so\u7684\u5e93\uff0c\u8bd5\u8bd5\u5427  </p> <p>\u6784\u5efa\u5e76\u5b89\u88c5CBLAS  </p> <p>wget http://www.netlib.org/blas/blast-forum/cblas.tgz tar -zxvf cblas.tgz </p> <p>\u592a\u75db\u82e6\u4e86  </p> <p>\u4e0a\u9762\u90fd\u662f\u975e\u5e38\u75db\u82e6\u7684\u5c1d\u8bd5\uff0c\u6700\u540e\u6211\u51b3\u5b9a\u91cd\u88c5\u4e00\u53f0ubuntu   \u4e4b\u540e\u4ea4\u53c9\u53c2\u8003\u4e86\u4e09\u7bc7\u6587\u7ae0 https://www.cnblogs.com/Vocanda/p/17436434.html https://github.com/ForeverHYX/hpl101-su24/blob/master/Report/HPC_Lab1_Report.pdf https://rzm0572.github.io/Computer-Science/HPC/HPC101-Lab1-Report/</p> <p>BLAS&amp;CBLAS part  </p> <p>wget \"http://www.netlib.org/blas/blas-3.12.0.tgz\" tar xvf blas-3.12.0.tgz cd BLAS-3.12.0  make \u6700\u540e\u5c06\u521a\u4e0b\u8f7d\u5230\u7684\u5e93\u6587\u4ef6\u590d\u5236\u5230\u7cfb\u7edf\u5e93\u6587\u4ef6 cp blas_LINUX.a /usr/local/lib/libblas.a (\u8fd9\u91cc\u62a5\u4e86permission denied\u6240\u4ee5\u6700\u540e\u4f7f\u7528sudo\u7684)  \u63a5\u7740\u5b89\u88c5CBLAS wget http://www.netlib.org/blas/blast-forum/cblas.tgz tar -xvf cblas.tgz \u63a5\u4e0b\u6765\u6211\u4eec\u8981\u7f16\u8bd1CBLAS\u6587\u4ef6\uff0c\u5f97\u5230cblas_LINUX.a \u6253\u5f00Makefile.in\uff0c\u53ef\u4ee5\u770b\u5230  \u6211\u4eec\u9700\u8981\u6307\u5b9aBLAS\u5e93\u7684\u8def\u5f84\uff0c\u521a\u521a\u6211\u4eec\u5df2\u7ecf\u628ablas_LINUX.a\u590d\u5236\u5230\u4e86\u7cfb\u7edf\u5e93\u6587\u4ef6\uff0c\u4fee\u6539\u8def\u5f84\u5982\u4e0b  \u63a5\u7740\u53bbmake  \u4e2d\u95f4\u6709\u51e0\u6761warning\uff0c\u4f46\u6ca1\u6709error  \u6210\u529f\u5728 /CBLAS/lib\u4e2d\u751f\u6210\u4e86cblas_LINUX.a \u628a\u5b83\u4e5f\u590d\u5236\u5230/usr/local/lib/libcblas.a sudo cp cblas_LINUX.a /usr/local/lib/libblas.a sudo cp cblas_LINUX.a /usr/local/lib/libcblas.a \u81f3\u6b64\uff0cBLAS\u4e5f\u914d\u7f6e\u597d\u4e86</p> <p>OpenMPI part  </p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cOpenMPI\u5c45\u7136\u662f\u6709\u5b98\u65b9\u6587\u6863\u7684\uff0c\u800c\u6211\u5c45\u7136\u5168\u7a0b\u6ca1\u627e\u5230\u8fc7\u3002\u3002\u3002 https://docs.open-mpi.org/en/main/index.html</p> <p>wget \"https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.3.tar.gz\" tar xvf openmpi-5.0.3.tar.gz cd openmpi-5.0.3  \u4e0b\u8f7d\u597d\u540e\u628a\u5b83\u5b89\u88c5\u5728\u7279\u5b9a\u8def\u5f84 ./configure --prefix=/usr/local/openMPI make sudo make install \u6f2b\u957f\u7684\u7b49\u5f85\u540e\u5b89\u88c5\u5b8c\u6210\uff0c\u4e4b\u540e\u9700\u8981\u4fee\u6539PATH\u548cLD_LIBRARY_PATH(\u4e4b\u540e\u8bb2MPI\u7684\u65f6\u5019\u4f1a\u63d0\u5230)\uff0c\u6211\u4f7f\u7528nano\u6253\u5f00\u4fee\u6539\u7684 nano ~/.bashrc  \u5728 .bashrc\u7684\u6700\u4e0a\u9762\u914d\u7f6e\u73af\u5883\u53d8\u91cf  \u6700\u540e\u8fd0\u884c\u4e00\u4e0b\u4f7f\u4fee\u6539\u751f\u6548 source ~/.bashrc \u81f3\u6b64\uff0cOpenMPI\u914d\u7f6e\u5b8c\u6210  </p> <p>HPL part  </p> <p>wget https://netlib.org/benchmark/hpl/hpl-2.3.tar.gz tar -xvf hpl-2.3.tar.gz cd hpl-2.3 \u4e3aHPL\u6784\u5efa\u63d0\u4f9b\u4e00\u4e2a\u5408\u9002\u7684Makefile\u6587\u4ef6 cp setup/Make.Linux_PII_CBLAS ./Make.Linux_PII \u5bf9\u8fd9\u4e2aMake.Linuc_PII\u6587\u4ef6\u8fdb\u884c\u4fee\u6539 \u4fee\u6539\u5982\u4e0b\uff1a ARCH         = Linux_PII_CBLAS -&gt; Linux_PII  </p> <p>TOPdir       = $(HOME)/hpl-2.3 -&gt; /home/lee/hpl-2.3  </p> <p>MPdir        = /usr/local/mpi -&gt; /usr/local/openmpi  </p> <p>MPinc        = -I$(MPdir)/include</p> <p>MPlib        = $(MPdir)/lib/libmpich.a -&gt; $(MPdir)/lib/libmpi.so  </p> <p>LAdir        = $(HOME)/netlib/ARCHIVES/Linux_PII -&gt; /home/lee/CBLAS  </p> <p>LAinc        =</p> <p>LAlib        = $(LAdir)/libcblas.a $(LAdir)/libatlas.a -&gt; /usr/local/lib/libcblas.a /usr/local/lib/libblas.a -lgfortran</p> <p>CC           = /usr/bin/gcc -&gt; /usr/local/openMPI/bin/mpicc</p> <p>LINKER       = $(CC)</p> <p></p> <p>\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u6839\u636e\u521a\u624d\u4fee\u6539\u7684Makefile\u53bbmake make arch=Linux_PII \u8fd9\u91cc\u62a5\u4e86error\uff0c\u53d1\u73b0\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\uff0c\u4e4b\u524d  \u5e94\u8be5\u751f\u6210libcblas\u7684\uff0c\u7ed3\u679c\u628a\u539f\u6765\u7684libblas.a\u7ed9\u8986\u76d6\u6389\u4e86\u3002\u3002\u3002 \u7d27\u6025\u8fd4\u5de5\uff0c\u628a\u539f\u6765\u7684\u7ed9\u91cd\u547d\u540d\u6210libcblas.a\uff0c\u518d\u590d\u5236\u4e00\u6b21libblas.a  \u5e0c\u671b\u8fd9\u6b21\u53ef\u4ee5\uff01  \u627e\u5230\u4e86/hpl-2.3/bin/Linux_PII\u76ee\u5f55\u4e0b\u7684\u53ef\u6267\u884c\u6587\u4ef6xhpl\uff0c\u6211\u627f\u8ba4\u8fd9\u4e00\u523b\u6211\u662f\u6709\u70b9\u6fc0\u52a8\u7684qwq \u81f3\u6b64\uff0c\u8f6f\u4ef6\u5b89\u88c5\u90e8\u5206\u5b8c\u6210  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#13","title":"1.3 \u96c6\u7fa4\u73af\u5883\u642d\u5efa\u4e0e\u914d\u7f6e","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#131","title":"1.3.1 \u96c6\u7fa4\u8282\u70b9\u95f4\u7684\u8fde\u63a5\u4e0e\u4e92\u8bbf","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#1311","title":"1.3.1.1 \u7f51\u7edc\u57fa\u7840","text":"<p>\u5728Lab0\u4e2d\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u8fc7\u4e86\u5173\u4e8eMAC\u5730\u5740\u3001IP\u5730\u5740\u548cARP\u534f\u8bae\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc\u518d\u501f\u52a9gpt\u56de\u987e\u4e00\u4e0b  </p> <p>IP\u5730\u5740 IP\u5730\u5740\uff08Internet Protocol Address\uff09\u662f\u4e92\u8054\u7f51\u534f\u8bae\u5730\u5740\uff0c\u7528\u4e8e\u5728\u4e92\u8054\u7f51\u4e0a\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8bbe\u5907\u3002\u5b83\u91c7\u7528\u4e00\u79cd\u5206\u5c42\u6b21\u7684\u5730\u5740\u7ed3\u6784\uff0c\u7531\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u4e24\u90e8\u5206\u7ec4\u6210\u3002IPv4\u662f\u76ee\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u7248\u672c\uff0c\u5b83\u753132\u4f4d\u4e8c\u8fdb\u5236\u6570\u7ec4\u6210\uff0c\u901a\u5e38\u4ee5\u70b9\u5206\u5341\u8fdb\u5236\uff08\u5982192.168.1.1\uff09\u7684\u5f62\u5f0f\u8868\u793a\u3002\u7531\u4e8eIPv4\u5730\u5740\u7a7a\u95f4\u6709\u9650\uff0c\u5df2\u7ecf\u9010\u6e10\u88abIPv6\u6240\u53d6\u4ee3\uff0cIPv6\u4f7f\u7528128\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u5730\u5740\uff0c\u6781\u5927\u5730\u6269\u5c55\u4e86\u5730\u5740\u7a7a\u95f4\u3002  </p> <p>MAC\u5730\u5740 MAC\u5730\u5740\uff08Media Access Control Address\uff09\u662f\u5a92\u4f53\u8bbf\u95ee\u63a7\u5236\u5730\u5740\uff0c\u4e5f\u79f0\u4e3a\u7269\u7406\u5730\u5740\u6216\u786c\u4ef6\u5730\u5740\u3002\u5b83\u7528\u4e8e\u5728\u7f51\u7edc\u4e2d\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u7f51\u7edc\u63a5\u53e3\u63a7\u5236\u5668\uff08NIC\uff09\uff0c\u5373\u7f51\u7edc\u9002\u914d\u5668\u6216\u7f51\u7edc\u63a5\u53e3\u5361\uff08NIC\uff09\u7684\u786c\u4ef6\u5730\u5740\u3002MAC\u5730\u5740\u901a\u5e38\u88ab\u56fa\u5316\u5728\u7f51\u5361\u7684ROM\u4e2d\uff0c\u662f\u7f51\u7edc\u8bbe\u5907\u51fa\u5382\u65f6\u5c31\u5206\u914d\u597d\u7684\uff0c\u5168\u7403\u552f\u4e00\u3002MAC\u5730\u5740\u7684\u957f\u5ea6\u4e3a48\u4f4d\uff086\u5b57\u8282\uff09\uff0c\u901a\u5e38\u8868\u793a\u4e3a12\u4e2a\u5341\u516d\u8fdb\u5236\u6570\uff0c\u598200-1A-2B-3C-4D-5E\u3002  </p> <p>ARP\u534f\u8bae ARP\uff08Address Resolution Protocol\uff09\u5730\u5740\u89e3\u6790\u534f\u8bae\u662f\u4e00\u79cd\u7f51\u7edc\u5c42\u534f\u8bae\uff0c\u7528\u4e8e\u5c06\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09\u5730\u5740\u89e3\u6790\u4e3a\u94fe\u8def\u5c42\uff08\u6570\u636e\u94fe\u8def\u5c42\uff09\u5730\u5740\uff0c\u5373IP\u5730\u5740\u5230MAC\u5730\u5740\u7684\u6620\u5c04\u3002\u5728\u7f51\u7edc\u901a\u4fe1\u4e2d\uff0c\u6570\u636e\u94fe\u8def\u5c42\u534f\u8bae\uff08\u5982\u4ee5\u592a\u7f51\uff09\u901a\u8fc7MAC\u5730\u5740\u6765\u8bc6\u522b\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\uff0c\u800c\u7f51\u7edc\u5c42\u534f\u8bae\uff08\u5982IP\uff09\u5219\u901a\u8fc7IP\u5730\u5740\u6765\u8bc6\u522b\u8bbe\u5907\u3002\u56e0\u6b64\uff0c\u5f53\u4e00\u53f0\u8bbe\u5907\u60f3\u8981\u5411\u53e6\u4e00\u53f0\u8bbe\u5907\u53d1\u9001\u6570\u636e\u65f6\uff0c\u5b83\u5fc5\u987b\u77e5\u9053\u5bf9\u65b9\u7684MAC\u5730\u5740\u3002ARP\u534f\u8bae\u5c31\u662f\u7528\u6765\u5b8c\u6210\u8fd9\u4e00\u6620\u5c04\u8fc7\u7a0b\u7684\u3002 ARP\u534f\u8bae\u7684\u5de5\u4f5c\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a 1\u3001\u8bf7\u6c42\u8fc7\u7a0b\uff1a\u5f53\u4e00\u53f0\u8bbe\u5907\u60f3\u8981\u53d1\u9001\u6570\u636e\u7ed9\u53e6\u4e00\u53f0\u8bbe\u5907\u65f6\uff0c\u5b83\u9996\u5148\u68c0\u67e5\u81ea\u5df1\u7684ARP\u7f13\u5b58\u8868\u4e2d\u662f\u5426\u6709\u76ee\u6807IP\u5730\u5740\u5bf9\u5e94\u7684MAC\u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8be5\u8bbe\u5907\u4f1a\u5e7f\u64ad\u4e00\u4e2aARP\u8bf7\u6c42\uff0c\u8be2\u95ee\u54ea\u53f0\u8bbe\u5907\u62e5\u6709\u8be5IP\u5730\u5740\u3002 2\u3001\u54cd\u5e94\u8fc7\u7a0b\uff1a\u62e5\u6709\u8be5IP\u5730\u5740\u7684\u8bbe\u5907\u4f1a\u6536\u5230ARP\u8bf7\u6c42\uff0c\u5e76\u53d1\u9001\u4e00\u4e2aARP\u54cd\u5e94\uff0c\u5176\u4e2d\u5305\u542b\u81ea\u5df1\u7684MAC\u5730\u5740\u3002 3\u3001\u66f4\u65b0\u7f13\u5b58\uff1a\u8bf7\u6c42\u8bbe\u5907\u6536\u5230ARP\u54cd\u5e94\u540e\uff0c\u4f1a\u5c06\u76ee\u6807IP\u5730\u5740\u548c\u5bf9\u5e94\u7684MAC\u5730\u5740\u5b58\u5165\u81ea\u5df1\u7684ARP\u7f13\u5b58\u8868\u4e2d\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e2aMAC\u5730\u5740\u53d1\u9001\u6570\u636e\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cARP\u534f\u8bae\u5b9e\u73b0\u4e86IP\u5730\u5740\u5230MAC\u5730\u5740\u7684\u52a8\u6001\u6620\u5c04\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u5728\u7f51\u7edc\u4e2d\u7684\u6b63\u786e\u4f20\u8f93\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1312","title":"1.3.1.2 \u8ba1\u7b97\u673a\u96c6\u7fa4\u6982\u5ff5","text":"<p>\u8ba1\u7b97\u673a\u96c6\u7fa4(Cluster) \u662f\u8fde\u63a5\u5728\u4e00\u8d77\u3001\u534f\u540c\u5de5\u4f5c\u7684\u4e00\u7ec4\u8ba1\u7b97\u673a\uff0c\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8ba1\u7b97\u673a\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u96c6\u7fa4\u4e2d\uff0c\u7531\u8f6f\u4ef6\u5c06\u4e0d\u540c\u7684\u8ba1\u7b97\u4efb\u52a1\uff08task\uff09\u5206\u914d\uff08schedule\uff09\u5230\u76f8\u5e94\u7684\u4e00\u4e2a\u6216\u4e00\u7fa4\u8282\u70b9\uff08node\uff09\u4e0a\u3002\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u4e3b\u8282\u70b9\uff08master/root node\uff09\uff0c\u5176\u4ed6\u8282\u70b9\u4f5c\u4e3a\u4ece\u8282\u70b9\uff08slave node\uff09\u3002\u4e3b\u8282\u70b9\u8d1f\u8d23\u8c03\u5ea6\u4efb\u52a1\uff08\u5f53\u7136\u4e5f\u53ef\u80fd\u8d1f\u8d23\u6267\u884c\u90e8\u5206\u4efb\u52a1\uff09\uff0c\u4ece\u8282\u70b9\u8d1f\u8d23\u6267\u884c\u4efb\u52a1\u3002\u6b64\u5916\uff0c\u4e5f\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u5171\u4eab\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u7528\u4e8e\u5b58\u50a8\u4efb\u52a1\u6570\u636e\u548c\u7ed3\u679c\u3002 </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1313-ssh","title":"1.3.1.3 SSH\u7684\u5bc6\u94a5\u8ba4\u8bc1","text":"<p>\u5728Lab0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u5982\u4f55\u901a\u8fc7 SSH \u4f7f\u7528\u5bc6\u7801\u8bbf\u95ee\u865a\u62df\u673a\u3002\u5728\u96c6\u7fa4\u4e2d\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u4e92\u8bbf\u5f80\u5f80\u4e5f\u901a\u8fc7 SSH \u5b8c\u6210\uff0c\u4f46\u8981\u6c42\u65e0\u4ea4\u4e92\uff08non-interactive\uff09\uff0c\u8fd9\u5c31\u9700\u8981\u4f7f\u7528 SSH \u7684\u5bc6\u94a5\u8ba4\u8bc1\uff08key-based authentication\uff09\u3002  </p> <p>SSH\u5bc6\u94a5\u7684\u8ba4\u8bc1\u539f\u7406  </p> <p>SSH \u5bc6\u94a5\u8ba4\u8bc1\u57fa\u4e8e\u5bc6\u7801\u5b66\u4e2d\u7684\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002\u5728 SSH \u5bc6\u94a5\u8ba4\u8bc1\u4e2d\uff0c\u7528\u6237\u6709\u4e24\u4e2a\u5bc6\u94a5\uff1a\u79c1\u94a5\uff08private key\uff09\u548c\u516c\u94a5\uff08public key\uff09\uff0c\u5b83\u4eec\u4e00\u4e00\u914d\u5bf9\u3002\u79c1\u94a5\u53ea\u6709\u7528\u6237\u81ea\u5df1\u77e5\u9053\uff0c\u516c\u94a5\u53ef\u4ee5\u516c\u5f00\u3002\u79c1\u94a5\u80fd\u591f\u52a0\u5bc6\u6570\u636e\uff0c\u516c\u94a5\u80fd\u591f\u89e3\u5bc6\u6570\u636e\u3002\u7528\u6237\u53ef\u4ee5\u5c06\u516c\u94a5\u653e\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u5f53\u7528\u6237\u8fde\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u7528\u516c\u94a5\u52a0\u5bc6\u4e00\u4e2a\u968f\u673a\u6570\u53d1\u9001\u7ed9\u7528\u6237\uff0c\u7528\u6237\u7528\u79c1\u94a5\u52a0\u5bc6\u8fd9\u4e2a\u968f\u673a\u6570\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u968f\u673a\u6570\u52a0\u5bc6\u6570\u636e\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u7528\u516c\u94a5\u89e3\u5bc6\u6570\u636e\u3002\u5982\u679c\u7528\u6237\u80fd\u591f\u6210\u529f\u52a0\u5bc6\uff0c\u8bf4\u660e\u7528\u6237\u62e5\u6709\u79c1\u94a5\uff0c\u8fde\u63a5\u6210\u529f\u3002\u7b80\u5355\u4e86\u89e3\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u53ef\u4ee5\u770b\u8fd9\u4e2a\u89c6\u9891 https://www.bilibili.com/video/BV1XP4y1A7Ui/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5742e02a7566918d65a441adce5bc163  \u6240\u8c13\u914d\u7f6e SSH \u5bc6\u94a5\u8ba4\u8bc1\uff0c\u5c31\u662f\u8ba9\u670d\u52a1\u5668\u4fe1\u4efb\u8be5\u516c\u94a5\uff0c\u5141\u8bb8\u6301\u6709\u8be5\u79c1\u94a5\u7684\u7528\u6237\u8fde\u63a5\u3002\u5728\u96c6\u7fa4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e3b\u8282\u70b9\u4e2d\u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u5c06\u4e3b\u8282\u70b9\u7684\u516c\u94a5\u653e\u5728\u4ece\u8282\u70b9\u4e0a\uff0c\u8fd9\u6837\u4e3b\u8282\u70b9\u5c31\u80fd\u591f\u901a\u8fc7 SSH \u5bc6\u94a5\u8ba4\u8bc1\u8fde\u63a5\u5230\u4ece\u8282\u70b9\u3002 \u53ef\u4ee5\u9605\u8bfbHow To Configure SSH Key-Based Authentication on a Linux Server - DigitalOcean https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server \u4e86\u89e3\u5982\u4f55\u914d\u7f6e SSH \u5bc6\u94a5\u8ba4\u8bc1\u3002 \u57fa\u672c\u64cd\u4f5c\u662f ssh-keygen -t ed25519 # \u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u4f7f\u7528 ed25519 \u7b97\u6cd5 ssh-copy-id user@hostname # \u5c06\u516c\u94a5\u653e\u5728\u670d\u52a1\u5668\u4e0a \u5176\u5b9e\u8bfe\u4e0a\u8fde\u63a5zju clusters\u5c31\u662f\u7c7b\u4f3c\u7684\u64cd\u4f5c  \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8ba4\u8bc1\u57fa\u4e8e\u7528\u6237\u3002\u4e0d\u662f\u8bf4\u4e3b\u8282\u70b9\u53ef\u4ee5\u8fde\u63a5\u5230\u4ece\u8282\u70b9\uff0c\u800c\u5e94\u5f53\u8bf4\u4e3b\u8282\u70b9\u4e0a\u7684\u67d0\u4e2a\u7528\u6237\u53ef\u4ee5\u8fde\u63a5\u5230\u4ece\u8282\u70b9\u4e0a\u7684\u67d0\u4e2a\u7528\u6237\u3002\u5982\u679c\u5728\u4e3b\u8282\u70b9\u4e0a\u4e3a root \u7528\u6237\u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u5374\u5728\u4ece\u8282\u70b9\u4e0a\u5c06\u516c\u94a5\u653e\u7f6e\u8fdb test \u7528\u6237\u7684 .ssh/authorized_keys \u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u663e\u7136\u65e0\u6cd5\u4ee5\u5bc6\u94a5\u8ba4\u8bc1\u7684\u65b9\u5f0f\u767b\u5f55\u5230\u4ece\u8282\u70b9\u7684 root \u7528\u6237\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#132-mpi","title":"1.3.2 MPI\u7684\u8fd0\u884c\u65b9\u5f0f","text":"<p>OpenMPI \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Message Passing Interface \u5b9e\u73b0\u3002MPI \u662f\u4e00\u5957\u6807\u51c6\u5316\u3001\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u6807\u51c6\uff0c\u5b83\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u5e76\u884c\u8ba1\u7b97\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5730\u5f00\u53d1\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u7a0b\u5e8f\u3002 mpirun\u662f OpenMPI \u63d0\u4f9b\u7684 MPI \u542f\u52a8\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u5728\u6307\u5b9a\u7684\u8282\u70b9\u4e0a\u542f\u52a8 MPI \u7a0b\u5e8f\uff0c\u6b64\u540e\u7a0b\u5e8f\u95f4\u7684\u901a\u4fe1\u7531 MPI \u5e93\u8d1f\u8d23\u3002\u53ef\u4ee5\u4e3a mpirun \u6307\u5b9a\u53c2\u6570\uff0c\u6bd4\u5982\u542f\u52a8\u7684\u8fdb\u7a0b\u6570\u3001\u542f\u52a8\u7684\u8282\u70b9\u7b49\u3002\u5173\u4e8empirun\u53c2\u8003 https://docs.open-mpi.org/en/main/launching-apps/quickstart.html \u548c https://docs.open-mpi.org/en/main/launching-apps/ssh.html ,\u8fd9\u91cc\u53ea\u8bb0\u5f55\u6700\u5173\u952e\u90e8\u5206  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1321-quick-start-launching-mpi-applications","title":"1.3.2.1 Quick start: Launching MPI applications","text":"<p>Launching on a single host  </p> <p>In such simple \u201csingle program, multiple data (SPMD)\u201d cases, use mpirun and specify how many MPI processes you want to launch via the -n option: \u5728/openmpi-5.0.3/examples\u4e2d\u6267\u884cmpirun -n 2 hello_c \u5b9e\u9645\u4e0a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u865a\u62df\u673a\u8bbe\u7f6e\u7684\u65f6\u5019\u53ea\u8bbe\u7f6e\u4e862\u6838\uff0c\u8fd9\u91cc\u53ea\u80fd\u67092\u4e2aMPI processes\uff0c\u518d\u589e\u52a0\u4f1a\u62a5\u9519  \u53ea\u7528\u4e24\u4e2a\u662f\u53ef\u4ee5\u7684 </p> <p>\u8fd9\u4e00\u70b9\u5176\u5b9e\u5728 https://github.com/ForeverHYX/hpl101-su24/blob/master/Report/HPC_Lab1_Report.pdf \u7684OpenMPI\u68c0\u9a8c\u4e2d\u4f53\u73b0\u4e86</p> <p>Launching in a non-scheduled environments (via ssh)  </p> <p>In general, Open MPI requires the following to launch and run MPI applications: 1\u3001You must be able to login to remote nodes non-interactively (e.g., without entering a password or passphrase).\u901a\u8fc7SSH\u6765\u5b9e\u73b0 2\u3001Open MPI\u2019s executables must be findable (e.g., in your PATH). 3\u3001Open MPI\u2019s libraries must be findable (e.g., in your LD_LIBRARY_PATH).</p> <p>mpirun accepts a --hostfile option (and its synonym, the --machinefile option) to specify a hostfile containing one hostname per line: shell$ cat my-hostfile.txt node1.example.com node2.example.com node3.example.com slots=2 node4.example.com slots=10 </p> <p>mpirun\u63a5\u53d7\u4e00\u4e2a --hostfile \u9009\u9879\u3002\u8fd9\u4e2a\u9009\u9879\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5217\u51fa\u4e86\u8fd0\u884cMPI\u4f5c\u4e1a\u6240\u9700\u7684\u5404\u4e2a\u4e3b\u673a\uff08\u6216\u8282\u70b9\uff09\u7684\u540d\u79f0\u548c\u6bcf\u4e2a\u4e3b\u673a\u4e0a\u53ef\u7528\u7684\u8fdb\u7a0b\u6570\uff08\u5373slots\u6216cores\uff09\u3002\u8fd9\u5bf9\u4e8e\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u73af\u5883\u4e2d\u7ba1\u7406MPI\u4f5c\u4e1a\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7528\u6237\u7cbe\u786e\u63a7\u5236\u4f5c\u4e1a\u5728\u54ea\u4e2a\u4e3b\u673a\u4e0a\u8fd0\u884c\u4ee5\u53ca\u5728\u8fd9\u4e9b\u4e3b\u673a\u4e0a\u5206\u914d\u591a\u5c11\u8d44\u6e90\u3002</p> <p>--hostfile \u9009\u9879\u540e\u9762\u8ddf\u968f\u7684\u662f\u5305\u542b\u4e3b\u673a\u4fe1\u606f\u7684\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u5305\u542b\u6bcf\u884c\u4e00\u4e2a\u6761\u76ee\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u6761\u76ee\u6307\u5b9a\u4e86\u4e00\u4e2a\u4e3b\u673a\u540d\u548c\u53ef\u9009\u7684slots\u6570\uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff09</p> <p>\u8fd9\u4e00\u70b9\u5176\u5b9e\u5728 https://rzm0572.github.io/Computer-Science/HPC/HPC101-Lab1-Report/ \u4e2d\u4f53\u73b0\u4e86\uff0c\u7528\u4e8e\u68c0\u9a8cOpenMPI\u80fd\u5426\u6b63\u5e38\u5de5\u4f5c  </p> <p>The optional slots attribute tells Open MPI the maximum number of processes that can be allocated to that node. If slots is not provided, Open MPI \u2014 by default \u2014 uses the number of processor cores (not hyperthreads) on that node.  </p> <p>\u6240\u4ee5\u5728\u521a\u624d\u7684\u4f8b\u5b50\u4e2d\uff0c\u8f93\u51fa\u5e94\u8be5\u662f\uff1a shell$ mpirun --hostfile my-hostfile.txt mpi-hello-world Hello world, I am 0 of 44 (running on node1.example.com) Hello world, I am 1 of 44 (running on node1.example.com) ... Hello world, I am 15 of 44 (running on node1.example.com) Hello world, I am 16 of 44 (running on node2.example.com) Hello world, I am 17 of 44 (running on node2.example.com) ... Hello world, I am 31 of 44 (running on node2.example.com) Hello world, I am 32 of 44 (running on node3.example.com) Hello world, I am 33 of 44 (running on node3.example.com) Hello world, I am 34 of 44 (running on node4.example.com) ... Hello world, I am 43 of 44 (running on node4.example.com) \u5404\u4e2anode\u4f7f\u7528\u60c5\u51b5\u5e94\u8be5\u662f\uff1a node1: 16, because no slots was specified node2: 16, because no slots was specified node3: 2, because slots=2 was specified node2: 10, because slots=10 was specified</p> <p>Launching in scheduled environments \uff08\u7565\uff09  </p> <p>Using the scheduler to \u201cdirect launch\u201d (without mpirun(1)) \uff08\u7565\uff09  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#1322-launching-with-ssh","title":"1.3.2.2 Launching with SSH","text":"<p>When launching Open MPI jobs in a non-scheduled environment, ssh is typically used to launch commands on remote nodes.  \u5176\u8981\u6c42\u5c31\u662fLaunching in a non-scheduled environments (via ssh)\u4e2d\u5217\u51fa\u7684\u8981\u6c42  </p> <p>There are three mechanisms for specifying the hosts that an MPI job will run on\uff1a 1\u3001The --hostfile option to mpirun. 2\u3001The --host option to mpirun. 3\u3001Running in a scheduled environment.  </p> <p>The specification of hosts using any of the above methods has nothing to do with the network interfaces that are used for MPI traffic. The list of hosts is only used for specifying which hosts on which to launch MPI processes.  </p> <p>If you have a shared $HOME filesystem between your nodes, you can setup a single SSH key that is used to login to all nodes.  </p> <p>Non-interactive ssh logins  </p> <p>SSH keys must be setup such that the following can be executed without being prompted for password or passphrase \u7b80\u5355\u6765\u8bf4\u6587\u6863\u91cc\u8ba9\u4f60\u81ea\u5df1\u53bb\u641c\u3002\u3002\u3002  </p> <p>Finding Open MPI executables and libraries  </p> <p>Once Open MPI is able to use ssh to invoke executables on a remote node, it must be able to find its helper executables and shared libraries on that remote node.</p> <p>If Open MPI is installed in a system-level folder (e.g., in /usr/bin), Open MPI will likely be able to find its executables and libraries on the remote node with no additional assistance.</p> <p>If, however, Open MPI is installed into a path that is not searched by default, you will need to provide assistance so that Open MPI can find its executables and libraries.  </p> <p>For simplicity, it is strongly recommended that you install Open MPI in the same location on all nodes in your job.   </p> <p>Use \u201cprefix\u201d behavior When \u201cprefix\u201d behavior is enabled, Open MPI will automatically set the $PATH and $LD_LIBRARY_PATH on remote nodes before executing remote commands.(\u8fd9\u91cc\u683c\u5f0f\u6709\u95ee\u9898) \u6587\u6863\u91cc\u4ecb\u7ecd\u4e86\u4e09\u79cdenable perfix\u7684\u529e\u6cd5  </p> <p>Set the PATH and LD_LIBRARY_PATH in your shell startup files \u8bb2\u9053\u7406\u6ca1\u548b\u770b\u61c2\uff0c\u8be6\u89c1\u6587\u6863 https://docs.open-mpi.org/en/main/launching-apps/ssh.html  </p> <p>\u603b\u7ed3\u4e00\u4e0b\uff1a\u4f7f\u7528 mpirun \u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c MPI \u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6307\u5b9a\u8282\u70b9\u3001\u8fdb\u7a0b\u6570\u548c\u5de5\u4f5c\u8def\u5f84\u7b49\u3002</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#133-benchmark","title":"1.3.3 \u6027\u80fd\u6d4b\u8bd5Benchmark","text":"<p>HPL\uff08high performance Linpack\uff09 \u662f\u8bc4\u6d4b\u8ba1\u7b97\u7cfb\u7edf\u6027\u80fd\u7684\u7a0b\u5e8f\uff0c\u662f\u65e9\u671f Linpack \u8bc4\u6d4b\u7a0b\u5e8f\u7684\u5e76\u884c\u7248\u672c\uff0c\u652f\u6301\u5927\u89c4\u6a21\u5e76\u884c\u8d85\u7ea7\u8ba1\u7b97\u7cfb\u7edf\u3002\u5176\u62a5\u544a\u7684\u6bcf\u79d2\u6d6e\u70b9\u8fd0\u7b97\u6b21\u6570\uff08floating-point operations per second\uff0c\u7b80\u79f0 FLOPS\uff09\u662f\u4e16\u754c\u8d85\u7ea7\u8ba1\u7b97\u673a Top500 \u5217\u8868\u6392\u540d\u7684\u4f9d\u636e\u3002 BLAS \u662f Basic Linear Algebra Subprograms \u7684\u7f29\u5199\uff0c\u662f\u4e00\u7ec4\u7528\u4e8e\u5b9e\u73b0\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\u8fd0\u7b97\u7684\u51fd\u6570\u5e93\u3002HPL \u4f7f\u7528 BLAS \u5e93\u6765\u5b9e\u73b0\u77e9\u9635\u8fd0\u7b97\uff0c\u56e0\u6b64\u9700\u8981 BLAS \u5e93\u7684\u652f\u6301\u3002  </p> <p>\u6587\u6863\u91cc\u6709\u5173\u4e8eHPL\u7684\u6570\u5b66\u539f\u7406\uff0c\u4e91\u91cc\u96fe\u91cc\u7684\u6d4f\u89c8\u4e86\u4e00\u4e0b\uff0c\u8fc7\u4e86  </p> <p>\u603b\u7ed3\u8d77\u6765\u5c31\u662f\uff1aHPL \u901a\u8fc7\u6c42\u89e3\u7ebf\u6027\u7cfb\u7edf\u6765\u8bc4\u4f30\u8ba1\u7b97\u673a\u96c6\u7fa4\u7684\u6d6e\u70b9\u6027\u80fd  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#14-hpl","title":"1.4 \u4f7f\u7528 HPL \u6d4b\u8bd5\u865a\u62df\u673a\u96c6\u7fa4\u7684\u6027\u80fd","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#141","title":"1.4.1 \u8fde\u63a5\u4e0e\u4e92\u8bbf","text":"<ul> <li> \u514b\u9686\u865a\u62df\u673a\u5e76\u5c06\u4ed6\u4eec\u8fde\u63a5\u4e92\u8bbf</li> </ul> <p>\u7528VMware Workstation\u514b\u9686\u865a\u62df\u673a\uff0c\u547d\u540d\u4e3anode01\uff0cnode02\uff0cnode03\uff0cnode04\u3002  </p> <p>\u9009\u62e9\u5b8c\u6574\u514b\u9686 \u6ce8\u610f\uff0c\u4e0d\u53ea\u662f\u5728 Hypervisor \u4e2d\u4fee\u6539\u540d\u5b57\uff0c\u8fd8\u9700\u8981\u5728\u865a\u62df\u673a\u4e2d\u4fee\u6539 /etc/hostname \u6211\u4eec\u53ef\u4ee5\u7528 sudo nano /etc/hostname\u6765\u4fee\u6539\u540d\u79f0 \u4e4b\u540e\u91cd\u542f reboot </p> <p>\u67e5\u770b\u5404\u53f0\u865a\u62df\u673a\u7684ip\u5730\u5740\uff1a ip addr node01\uff1a192.168.75.133 node02\uff1a192.168.75.137 node03\uff1a192.168.75.138 node04\uff1a192.168.75.139  </p> <p>\u83b7\u53d6\u4e4b\u540e\u5728node01\uff08The One\uff09\u4e2d\u4fee\u6539 /etc/hosts \u6587\u4ef6\uff0c\u6dfb\u52a0\u5176\u4ed6\u8282\u70b9\u7684IP\u5730\u5740\u3002  </p> <p>sudo vim /etc/hosts \u8fd9\u91cc\u4e0d\u662f\u592a\u6e05\u695a\u600e\u4e48\u4fee\u6539hosts\uff0c\u6587\u6863\u8bb2\u7684\u4e5f\u4e0d\u592a\u6e05\u695a\uff0c\u5148\u505a\u4e00\u4e2a\u5c1d\u8bd5 </p> <p>\u5728 node01 \u4e2d\u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u5c06\u516c\u94a5\u653e\u5728\u5176\u4ed6\u8282\u70b9\u4e0a\u3002  </p> <p>ssh-keygen # \u6ce8\u610f\u4e0d\u9700\u8981\u4e3a\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5168\u7a0b\u56de\u8f66\u5373\u53ef </p> <p>\u5c06\u516c\u94a5\u653e\u5728\u5176\u4ed6\u8282\u70b9\u4e0a  </p> <p>ssh-copy-id user@hostname # \u8fd9\u5176\u5b9e\u4e0e\u4e4b\u524d\u767b\u5f55ZJU m600\u65f6\u628a\u516c\u94a5copy\u5230authorized\u4e2d\u662f\u7b49\u4ef7\u7684\u64cd\u4f5c \u8fd9\u91cc\u5c1d\u8bd5\u7684\u65f6\u5019\u62a5\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef  \u5c34\u5c2c\u7684\u662f\u7531\u4e8e\u662f\u91cd\u88c5\u7684\u4e00\u53f0ubuntu\uff0c\u6ca1\u6709\u4e0b\u8f7dopenssh-server \u6ce8\u610f\u8981\u5728\u6bcf\u4e00\u53f0VM\u4e0a\u88c5openssh-server sudo apt update sudo apt install openssh-server \u4e4b\u540e\u518d\u5c1d\u8bd5\u5c31\u53ef\u4ee5\u4e86  \u6839\u636e\u6587\u6863 https://www.cnblogs.com/Vocanda/p/17436434.html \uff0c\u6211\u8fd8\u5b89\u88c5\u4e86openssh-client</p> <p>\u9a8c\u8bc1 SSH \u5bc6\u94a5\u8ba4\u8bc1\u662f\u5426\u6210\u529f  </p> <p>ssh user@hostname  \u8fde\u63a5\u6210\u529f\uff0c\u6ce8\u610f\u770b\u7ea2\u6846\u90e8\u5206\uff0c\u8bf4\u660e\u6211\u4ee5lee\u7684\u8eab\u4efd\u8fde\u63a5\u5230\u4e86\u540d\u4e3anode02\u7684\u8fdc\u7a0b\u4e3b\u673a\uff0c\u5e76\u8fdb\u5165\u4e86node02\u7684shell\u73af\u5883 \u540c\u6837\u7684\u6b65\u9aa4\u5bf9\u5269\u4e0b\u4e24\u53f0\u6267\u884c P.S. exit\u547d\u4ee4\u53ef\u4ee5\u9000\u51fa\u8fde\u63a5\uff1b\u8fde\u63a5\u65f6\u5fc5\u987b\u5f97\u5f00\u673a   </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#142-mpi","title":"1.4.2 \u6d4b\u8bd5MPI\u6b63\u5e38\u8fd0\u884c","text":"<ul> <li> MPI\u901a\u8fc7\u6d4b\u8bd5\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c <p>\u5728node01\u4e0a\u5199\u4e00\u4e2ahostfile\uff0c\u6307\u5b9a\u8282\u70b9\u548c\u8fdb\u7a0b\u6570  </p> </li> </ul> <p>\u76f4\u63a5\u65b0\u5efa\u5c31\u597d\uff0c\u8fd9\u91cc\u6211\u5efa\u5728\u4e86/home/Documents\u4e2d vim /home/Documents/hostfile \u5f53\u521d\u7684core\u8bbe\u7f6e\u7684\u592a\u5c11\u4e86\uff0c\u5206\u914d\u7684slot\u5982\u4e0b  \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4fdd\u5b58\u5230\u4e86home\u91cc\u9762\uff0ccp\u4e86\u4e00\u4e0b  </p> <p>\u4f7f\u7528\u8be5 hostfile \u6267\u884c mpirun\uff0c\u5728\u6240\u6709\u8282\u70b9\u4e0a\u8fd0\u884c uptime \u6216 cat /etc/hostname  </p> <p>mpirun --hostfile hostfile cat /etc/hostname  P.S. \u60f3\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u8fd0\u884c\u7740\u4e00\u4e2a\u96c6\u7fa4\uff0c\u867d\u7136\u83dc\u9e21\uff0c\u4e5f\u662f\u6709\u4e9b\u5174\u594b\u7684~  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#143-hpl","title":"1.4.3 \u8fd0\u884cHPL","text":"<ul> <li> \u6210\u529f\u8fd0\u884cHPL\u8dd1\u51fa\u7ed3\u679c \u7ec8\u4e8e\u5230\u4e86\u6fc0\u52a8\u4eba\u5fc3\u7684\u90e8\u5206   <p>\u4f7f\u7528 mpirun \u5728\u6240\u6709\u8282\u70b9\u4e0a\u8fd0\u884c xhpl\uff0c\u67e5\u770b\u8fd0\u884c\u7ed3\u679c  </p> </li> </ul> <p>\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u5230 HPL \u6240\u5728\u76ee\u5f55\uff0cxhpl \u9700\u8981\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\u627e\u5230 HPL.dat cd /hpc-2.3/bin/Linux_PII \u5207\u6362\u8def\u5f84\u5230\u4e4b\u524d\u627e\u5230xphl\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5730\u65b9\uff0c\u8fd0\u884c mpirun --hostfile /home/lee/Documents/hostfile ./xhpl  \u94db\u94db\uff01\u91d1\u8272\u4f20\u8bf4\uff01 \u81f3\u6b64\u7b97\u662f\u7ed3\u675f\u4e86lab1\u7684\u5927\u90e8\u5206\u5de5\u4f5c </p> <p>\u7531\u4e8e\u6211\u7684\u8fdb\u5ea6\u5176\u5b9e\u5927\u5927\u843d\u540e\u4e8e\u522b\u4eba\uff0c\u800c\u6280\u672f\u6742\u8c08\u8fd9\u90e8\u5206\u5185\u5bb9\u5728lab\u6587\u6863\u4e5f\u6ca1\u6709\u8be6\u7ec6\u9610\u8ff0\uff0c\u6240\u4ee5\u53ea\u6253\u4e00\u4e2a\u6846\u67b6\u5728\u8fd9\u91cc\uff0c\u7b49\u5f85\u4e4b\u540e\u586b\u5751</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#15","title":"1.5 \u6280\u672f\u6742\u8c08","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#151","title":"1.5.1 \u5305\u7ba1\u7406\u5668","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#152-docker","title":"1.5.2 Docker","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#153-nfs","title":"1.5.3 NFS","text":"<p>P.S. \u4e4b\u524d\u90fd\u6ca1\u6709\u7528\u7a0b\u5e8f\u5757\uff08\u4e3b\u8981\u662fmarkdown\u8fd8\u4e0d\u592a\u719f\uff09\uff0c\u4e4b\u540e\u4f1a\u7528der</p> <p>\u6700\u540e\u8d34\u51e0\u4e2alab\u6587\u6863\u4e2d\u63d0\u5230\u7684\u8d44\u6599\uff0c\u8fd8\u662f\u8981\u611f\u6fc0cs\u771f\u7684\u662f\u4e00\u95e8\u5f88\u63a8\u5d07\u5f00\u6e90\u7684\u5b66\u79d1 https://linux.cn/article-14033-1.html https://www.lrde.epita.fr/~adl/autotools.html https://elinux.org/images/4/43/Petazzoni.pdf https://kns.cnki.net/kcms2/article/abstract?v=qwZretP9BaHvUBwZiPjDpzt_KPtU2PXJSK0YVwCUYeCUQFlgxSAJKvStsXKUQgi7vp0dzvK1lhS5OYFXUgXXdKGZL9ljRGRsbRhmjx411BBN35dOaoxrEhTaj2fwikpGLUS9jtc7unQ=&amp;uniplatform=NZKPT&amp;language=CHS  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab2","title":"Lab2:\u5411\u91cf\u5316\u8ba1\u7b97","text":"<ul> <li> \u5b8c\u6210\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u5411\u91cf\u5316\u7248\u672c  </li> <li> \u6d4b\u8bd5\u5411\u91cf\u5316\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4  </li> </ul> <p>\u4ece\u6b64\u7684lab\u6587\u6863\u683c\u5f0f\u66f4\u50cf\u662f\u5b9e\u9a8c\u62a5\u544a\u7684\u683c\u5f0f  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#21","title":"2.1 \u5b9e\u9a8c\u4ecb\u7ecd","text":"<p>NumPy\u662fPython\u4e2d\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002\u5b83\u662f\u4e00\u4e2aPython\u5e93\uff0c\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u4ee5\u53ca\u7528\u4e8e\u6570\u7ec4\u5feb\u901f\u64cd\u4f5c\u7684\u5404\u79cd API\uff0c\u6709\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002 Numpy\u4ee3\u7801\u4e00\u822c\u91c7\u7528\u5411\u91cf\u5316\uff08\u77e2\u91cf\u5316\uff09\u63cf\u8ff0\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u4e2d\u6ca1\u6709\u4efb\u4f55\u663e\u5f0f\u7684\u5faa\u73af\uff0c\u7d22\u5f15\u7b49\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u4ee5\u4e0b\u597d\u5904\uff1a  </p> <p>1\u3001\u5411\u91cf\u5316\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u4e8e\u9605\u8bfb 2\u3001\u66f4\u5c11\u7684\u4ee3\u7801\u884c\u901a\u5e38\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef 3\u3001\u4ee3\u7801\u66f4\u63a5\u8fd1\u4e8e\u6807\u51c6\u7684\u6570\u5b66\u7b26\u53f7  </p> <p>\u53e6\u5916\uff0c\u5411\u91cf\u5316\u7684\u4ee3\u7801\u80fd\u591f\u89c4\u907f\u6389 Python \u4e2d\u7f13\u6162\u7684\u8fed\u4ee3\u5faa\u73af\uff0c\u88ab\u5e95\u5c42\u7684\u5b9e\u73b0\u66f4\u597d\u7684\u8c03\u5ea6\uff0c\u5982\u63a5\u5165 BLAS \u77e9\u9635\u8fd0\u7b97\u5e93\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002 \u53cc\u7ebf\u6027\u63d2\u503c\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u56fe\u50cf\u5904\u7406\u4e2d\u7684\u5e38\u7528\u7b97\u6cd5\uff0c\u4ed6\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6750\u8d28\u8d34\u56fe\u7684\u91cd\u91c7\u6837\u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u5c06\u501f\u52a9 NumPy \u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u6279\u91cf\u5904\u7406\u7684\u5411\u91cf\u5316\u7684\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u6765\u8ba9\u5927\u5bb6\u719f\u6089 NumPy \u7684\u5411\u91cf\u5316\u7f16\u7a0b\u6a21\u5f0f\u3002      </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#22","title":"2.2 \u5b9e\u9a8c\u73af\u5883","text":"<p>\u76f4\u63a5\u5728vscode\u4e0a\u914d\u7f6e\u4e00\u4e2apython\u73af\u5883\u5c31\u597d\u4e86  </p> <p>import Numpy  </p> <p>Terminal-&gt;New Terminal <pre><code>pip install numpy\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#23","title":"2.3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#231-numpy","title":"2.3.1 Numpy","text":"<p>lab\u6587\u6863\u91cc\u5e76\u6ca1\u6709\u5173\u4e8eNumpy\u672c\u8eab\u7684\u4ecb\u7ecd\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u90e8\u5206\u57fa\u7840\u8fd8\u662f\u76f8\u5f53\u91cd\u8981\u7684\uff0c\u6240\u4ee5\u7b80\u5355\u8865\u4e00\u4e0b\uff0c\u4e5f\u4f1a\u66f4\u504f\u5e94\u7528\u5c42\u9762 \u5927\u81f4\u6846\u67b6\u53ef\u4ee5\u76f4\u63a5\u770bHPC101\u7684ppt <code>Numpy 101</code> \u5b66\u4e60\u5185\u5bb9\u5b8c\u5168\u57fa\u4e8eNumPy Illustrated: The Visual Guide to NumPy</p> <p>The beauty of it is that most operations look just the same, no matter how many dimensions an array has. But 1D and 2D cases are a bit special.   </p> <p>1.the 1D Arrays 2.the 2D Arrays 3.the 3D and above  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#numpy-array-vs-python-list","title":"Numpy Array vs Python List","text":"<p>  \u5728\u8bfe\u4e0a\u63d0\u5230\uff0c<code>python list</code>\u7684\u5b58\u50a8\u65b9\u5f0f\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u50a8\u6307\u5411\u5bf9\u5e94\u5143\u7d20\u7684\u6307\u9488\uff0c\u6240\u4ee5\u53ef\u4ee5\u652f\u6491\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\uff1b\u800c<code>numpy array</code>\u662f\u76f4\u63a5\u5b58\u5143\u7d20\u7684\uff0c\u6240\u4ee5\u57fa\u672c\u90fd\u662f\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4e5f\u56e0\u6b64<code>NumPy</code>\u5bf9\u5411\u91cf\u5316\u540e\u7684\u5143\u7d20\u5904\u7406\u66f4\u5feb\uff0c\"more compact,espacially when there's more than one dimension\"  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#vectorsthe-1d-arrays","title":"Vectors,the 1D Arrays","text":"<p>Vector initialization</p> <p>One way to create a NumPy array is to convert a Python list. The type will be auto-deduced from the list element types:  \u7531\u4e8e<code>NumPy</code>\u4e0d\u65b9\u4fbf\u76f4\u63a5\u5728\u540e\u9762\u589e\u52a0\u5143\u7d20\uff0c\u6240\u4ee5\u4e00\u822c\u4f1apreallocate the necessary sapce with <code>np.zeros</code> or <code>np.empty</code>:  It is often necessary to create an empty array which matches the existing one by shape and elements type: </p> <p> </p> <p> \u521b\u5efa\u9012\u589e\u6570\u5217\u5bf9<code>floats</code>\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46<code>arrange</code>\u5728\u5904\u7406<code>floats</code>\u65f6\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff08\u8fd9\u6d89\u53ca\u5230\u4e8c\u8fdb\u5236\u5b58\u50a8\u5c0f\u6570\u548c\u56db\u820d\u4e94\u5165\uff09\uff1a </p> <p>\u968f\u673a\u6570\u751f\u6210  Vector indexing  \u5173\u4e8e\u5207\u7247<code>copy</code>\u548c\u63d2\u5165\u7b49\u64cd\u4f5c\u4e0e<code>python list</code>\u6709\u4e9b\u4e0d\u540c\uff0c\u5177\u4f53\u539f\u7406\u770b\u6587\u6863  Also, such assignments must not change the size of the array, so tricks like  won\u2019t work in <code>NumPy</code> \u2014 use <code>np.insert</code>,<code>np.append</code>, etc. instead (described in the \u201c2D\u201d section below).  </p> <p>boolean indexing,ternary comparisons,<code>np.where</code>,<code>np.clip</code>,<code>np.minimun</code>,<code>np.maximun</code> \u89c1\u6587\u6863  </p> <p>Vector operations  </p> <p>Arithmetic is one of the places where NumPy speed shines most. Vector operators are shifted to the c++ level and allow us to avoid the costs of slow Python loops.  The same way ints are promoted to floats when adding or subtracting, scalars are promoted (aka broadcasted) to arrays:  </p> <p>Searching for an element in a vector  </p> <p>A faster way to do it is via accelerating next((i[0] for i, v in <code>np.ndenumerate(a) if v==x), -1)</code> with <code>Numba</code> (otherwise it\u2019s way slower in the worst case than where).  \u770b\u4e0d\u592a\u61c2\uff0c\u8fc7\u5427  </p> <p>Comparing floats  </p> <p> There is no silver bullet!  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#matricesthe-2d-arrays","title":"Matrices,the 2D Arrays","text":"<p>Matrix initialization  </p> <p> </p> <p>The axis argument  </p> <p>The value of the <code>axis</code> argument is, as a matter of fact, the number of the index in question: The first index is <code>axis=0</code>, the second one is <code>axis=1</code>, and so on. So in 2D <code>axis=0</code> is column-wise and <code>axis=1</code> means row-wise.  The 2D case is somewhat counter-intuitive: you need to specify the dimension to be eliminated, instead of the remaining one you would normally think about. In higher dimensional cases this is more natural, though: it\u2019d be a burden to enumerate all the remaining dimensions if you only need to sum over a single one.  </p> <p>Matrix arithmetic  </p> <p>In addition to ordinary operators (like +,-,,/,// and *) which work element-wise, there\u2019s a <code>@</code> operator that calculates a matrix product: </p> <p>Row vectors and column vectors  </p> <p>\u8f6c\u7f6e\u8fd9\u91cc\u597d\u50cf\u6709\u4e9b\u7279\u6b8a\u673a\u5236\uff0c\u4f46\u6ca1\u592a\u770b\u61c2 <code>reshape</code>\u547d\u4ee4\u4e2a\u4eba\u8ba4\u4e3a\u610f\u4e49\u4e0d\u5927\uff0c\u603b\u4e4b1D arrays,2D row vectors,2D column vectors\u4e4b\u95f4\u662f\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\u7684 </p> <p>Matrix manipulations  </p> <p> \u5bf9\u4e8e1D arrays\u4f3c\u4e4e\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u4e0e\u5176\u5b58\u50a8\u65b9\u5f0f\u6709\u5173  The inverse of stacking is splitting:  Matrix replication can be done in two ways: <code>tile</code> acts like copy-pasting and <code>repeat</code> like collated printing:  <code>delete</code> <code>insert</code> <code>append</code>(is also unable to automatically transpose 1D arrays)  <code>pad</code>\u5176\u5b9e\u5f88\u50cf\u5728\u5377\u79ef\u4e2d\u7684\u4e00\u4e9b\u5916\u5ef6\u64cd\u4f5c </p> <p>Mehgrids (\u7565)  </p> <p>Matrix statistics  </p> <p> </p> <p>Matrix sorting  </p> <p> <pre><code>a = a[a[:,2].argsort()]\na = a[a[:,1].argsort(kind='stable')]\na = a[a[:,0].argsort(kind='stable')]\n</code></pre> </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#3d-and-above","title":"3D and Above","text":"<p>When you create a 3D array by reshaping a 1D vector or converting a nested Python list, the meaning of the indices is (z,y,x). The first index is the number of the plane, then the coordinates go in that plane:  But this index order is not universal. When working with RGB images, the (y,x,z) order is usually used  If your data is laid out differently, it is more convenient to stack images using the <code>concatenate</code> command, feeding it the explicit index number in an axis argument:  3D\u77e9\u9635\u7684\u8f6c\u6362\u4e4b\u7c7b\u7684\u770b\u4e5f\u4e0d\u60f3\u770b\uff0c\u4f46\u613f\u8fd9\u8f88\u5b50\u90fd\u7528\u4e0d\u5230\uff0c\u8fc7\u5427  </p> <p>\u201c\u7a0d\u5fae\u786c\u6838\u4e00\u70b9\u7684numpy\u6559\u7a0b\u201d \u5982\u679c\u8fd8\u8981\u77e5\u9053\u7684\u66f4\u7ec6\u81f4\uff0c\u5c31\u76f4\u63a5\u770bnumpy\u6587\u6863  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#232","title":"2.3.2 \u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5","text":"<p>\u5173\u4e8e\u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5\uff0clab\u6587\u6863\u91cc\u4ecb\u7ecd\u7684\u8fd8\u662f\u6bd4\u8f83\u6e05\u695a\u7684  </p> <p>\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7b97\u6cd5\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u6982\u62ec\u6765\u8bf4\u5c31\u662f\u5148\u5728 x \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\uff0c\u518d\u5728 y \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\u3002 </p> <p>\u4ee5\u5728\u7070\u5ea6\u56fe\u4e0a\u8fdb\u884c\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5df2\u77e5\u5916\u56f4\u7684\u56db\u4e2a\u70b9 (14,20),(15,20),(14,21),(15,21) \u7070\u5ea6\u503c\u5206\u522b\u4e3a 91, 210, 162 \u548c 95\uff0c\u7136\u540e\u5e0c\u671b\u901a\u8fc7\u63d2\u503c\u5f97\u5230 (14.5,20.2) \u5904\u7684\u7070\u5ea6\u503c\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u5728 x \u65b9\u5411\u4e0a\u901a\u8fc7\u7ebf\u6027\u63d2\u503c\u8ba1\u7b97\u51fa (14.5,20),(14.5,21) \u4e24\u4e2a\u70b9\u7684\u7070\u5ea6\u503c 150.5, 128.5\uff0c\u7136\u540e\u518d\u4f7f\u7528\u8fd9\u4e24\u4e2a\u503c\u5728 y \u65b9\u5411\u4e0a\u518d\u6b21\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 (14.5,20.2) \u5750\u6807\u5904\u7684\u7070\u5ea6\u503c 146.1\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u662f\u4e00\u4e2a\u5355\u901a\u9053\u7684\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u5b9e\u9645\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5f80\u5f80\u6709\u5f88\u591a\u4e2a\u901a\u9053\uff0c\u5982\u5f69\u8272\u56fe\u7247\u62e5\u6709 RGB \u4e09\u4e2a\u901a\u9053\uff0c\u4e00\u4e9b\u56fe\u7247\u53ef\u80fd\u8fd8\u6709 \u03b1 \u900f\u660e\u5ea6\u901a\u9053\uff0c\u6216\u662f\u6df1\u5ea6\u901a\u9053\u3002\u5bf9\u4e8e\u591a\u901a\u9053\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u901a\u9053\u8fdb\u884c\u5206\u522b\u63d2\u503c\u3002  </p> <p>lab\u6587\u6863\u53c2\u7167wikipedia\u7ed9\u51fa\u4e86\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49  </p> <p>\u5047\u5982\u6211\u4eec\u60f3\u5f97\u5230\u672a\u77e5\u51fd\u6570 f \u5728\u70b9 P=(x,y) \u7684\u503c\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u51fd\u6570 f \u5728 Q11=(x1,y1), Q12=(x1,y2), Q21=(x2,y1) \u53ca Q22=(x2,y2) \u56db\u4e2a\u70b9\u7684\u503c\u3002  \u9996\u5148\u5728 x \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230</p> f ( x , y 1 ) \u2248 x 2 \u2212 x x 2 \u2212 x 1 f ( Q 11 ) + x \u2212 x 1 x 2 \u2212 x 1 f ( Q 21 ) , f ( x , y 2 ) \u2248 x 2 \u2212 x x 2 \u2212 x 1 f ( Q 12 ) + x \u2212 x 1 x 2 \u2212 x 1 f ( Q 22 ) . <p>\u7136\u540e\u5728 y \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230  </p> f ( x , y ) \u2248 y 2 \u2212 y y 2 \u2212 y 1 f ( x , y 1 ) + y \u2212 y 1 y 2 \u2212 y 1 f ( x , y 2 ) = y 2 \u2212 y y 2 \u2212 y 1 ( x 2 \u2212 x x 2 \u2212 x 1 f ( Q 11 ) + x \u2212 x 1 x 2 \u2212 x 1 f ( Q 21 ) ) + y \u2212 y 1 y 2 \u2212 y 1 ( x 2 \u2212 x x 2 \u2212 x 1 f ( Q 12 ) + x \u2212 x 1 x 2 \u2212 x 1 f ( Q 22 ) ) = 1 ( x 2 \u2212 x 1 ) ( y 2 \u2212 y 1 ) ( f ( Q 11 ) ( x 2 \u2212 x ) ( y 2 \u2212 y ) + f ( Q 21 ) ( x \u2212 x 1 ) ( y 2 \u2212 y ) + f ( Q 12 ) ( x 2 \u2212 x ) ( y \u2212 y 1 ) + f ( Q 22 ) ( x \u2212 x 1 ) ( y \u2212 y 1 ) ) = 1 ( x 2 \u2212 x 1 ) ( y 2 \u2212 y 1 ) [ x 2 \u2212 x x \u2212 x 1 ] [ f ( Q 11 ) f ( Q 12 ) f ( Q 21 ) f ( Q 22 ) ] [ y 2 \u2212 y y \u2212 y 1 ] . <p>\u6ce8\u610f\u6b64\u5904\u5982\u679c\u5148\u5728 y \u65b9\u5411\u63d2\u503c\u3001\u518d\u5728 x \u65b9\u5411\u63d2\u503c\uff0c\u5176\u7ed3\u679c\u4e0e\u6309\u7167\u4e0a\u8ff0\u987a\u5e8f\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#233-nhwc","title":"2.3.3 NHWC \u6570\u636e\u683c\u5f0f","text":"<p>\u4e00\u4e2a\u5b8c\u5168\u6ca1\u89c1\u8fc7\u7684\u4e1c\u897f\uff0c\u5148\u95ee\u4e0bgpt  </p> <p>NHWC\uff08\u6837\u672c\u6570-\u9ad8\u5ea6-\u5bbd\u5ea6-\u901a\u9053\uff09 \u6570\u636e\u683c\u5f0f\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u79cd\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5c24\u5176\u5728\u5904\u7406\u56fe\u50cf\u3001\u70b9\u4e91\u6216\u7279\u5f81\u56fe\u7b49\u591a\u7ef4\u6570\u636e\u65f6\u5c24\u4e3a\u91cd\u8981\u3002\u4ee5\u4e0b\u662f\u5bf9NHWC\u6570\u636e\u683c\u5f0f\u7684\u8be6\u7ec6\u89e3\u6790\uff1a \u4e00\u3001\u57fa\u672c\u6982\u5ff5 \u5728NHWC\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u6309\u7167\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff1a     N\uff1aBatch Size\uff08\u6279\u6b21\u5927\u5c0f\uff09\uff0c\u8868\u793a\u4e00\u6b21\u5904\u7406\u7684\u6570\u636e\u6837\u672c\u6570\u91cf\u3002     H\uff1aHeight\uff08\u9ad8\u5ea6\uff09\uff0c\u8868\u793a\u56fe\u50cf\u6216\u7279\u5f81\u56fe\u7684\u9ad8\u5ea6\u3002     W\uff1aWidth\uff08\u5bbd\u5ea6\uff09\uff0c\u8868\u793a\u56fe\u50cf\u6216\u7279\u5f81\u56fe\u7684\u5bbd\u5ea6\u3002     C\uff1aChannel\uff08\u901a\u9053\u6570\uff09\uff0c\u5bf9\u4e8e\u5f69\u8272\u56fe\u50cf\u6765\u8bf4\uff0c\u901a\u5e38\u662fRGB\u4e09\u4e2a\u901a\u9053\u3002 \u4e8c\u3001\u5b58\u50a8\u65b9\u5f0f \u5728NHWC\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a     \u9996\u5148\u662f\u6240\u6709\u6837\u672c\u7684\u7b2c\u4e00\u4e2a\u901a\u9053\u7684\u6240\u6709\u5143\u7d20\uff08\u5373\u6240\u6709\u6837\u672c\u7684\u7b2c\u4e00\u4e2a\u50cf\u7d20\u70b9\u7684\u7b2c\u4e00\u4e2a\u901a\u9053\u503c\uff09\uff0c\u7136\u540e\u662f\u7b2c\u4e00\u4e2a\u901a\u9053\u7684\u7b2c\u4e8c\u884c\u5143\u7d20\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u901a\u9053\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u5b58\u50a8\u3002     \u63a5\u7740\u662f\u7b2c\u4e8c\u4e2a\u901a\u9053\u7684\u6240\u6709\u5143\u7d20\uff0c\u6309\u7167\u4e0e\u7b2c\u4e00\u4e2a\u901a\u9053\u76f8\u540c\u7684\u987a\u5e8f\u5b58\u50a8\u3002     \u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6240\u6709\u901a\u9053\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u5b58\u50a8\u3002 \u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u4f7f\u5f97\u76f8\u540c\u7a7a\u95f4\u4f4d\u7f6e\uff08\u5373\u76f8\u540c\u50cf\u7d20\u70b9\uff09\u7684\u6240\u6709\u901a\u9053\u503c\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u8fd9\u6709\u52a9\u4e8e\u4f18\u5316\u5bf9\u7a7a\u95f4\u6570\u636e\u7684\u8bbf\u95ee\u3002 \u7136\u800c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728GPU\u4e0a\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0cNCHW\uff08\u6837\u672c\u6570-\u901a\u9053-\u9ad8\u5ea6-\u5bbd\u5ea6\uff09\u683c\u5f0f\u53ef\u80fd\u66f4\u52a0\u9ad8\u6548\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u66f4\u597d\u5730\u5229\u7528GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u548c\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u3002  </p> <p>lab\u6587\u6863\u7684\u4ecb\u7ecd\uff1a \u771f\u5b9e\u60c5\u51b5\u4e0b\u6211\u4eec\u5904\u7406\u7684\u6570\u636e\u90fd\u662f\u4ee5 batch \u4e3a\u5355\u4f4d\u7684\uff0c\u6309\u6279\u8fdb\u884c\u5904\u7406\u7684\u3002\u4ee5\u53cc\u7ebf\u6027\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u4e00\u6b21\u6027\u9001\u5165 N \u5f20\u5927\u5c0f\u4e3a H\u00d7W \u7684\u56fe\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u6709 C \u4e2a\u901a\u9053\uff0c\u7136\u540e\u4e00\u6b21\u6027\u8fd4\u56de\u8fd9 N \u5f20\u56fe\u7247\u5904\u7406\u597d\u7684\u7ed3\u679c\u3002\u6b64\u65f6\u6211\u4eec\u4e00\u6b21\u6027\u4f20\u5165\u7684\u6570\u636e\uff0c\u5c31\u662f\u76f4\u63a5\u6309\u987a\u5e8f\u5806\u53e0\u5728\u4e00\u8d77\u7684 NHWC \u683c\u5f0f\u7684\u6570\u7ec4\uff0c\u5b83\u5c06 batch \u4f5c\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u800c\u540e\u4e09\u4e2a\u7ef4\u5ea6\u5206\u522b\u662f\u5355\u5f20\u56fe\u7247\u7684\u9ad8\u5ea6\u3001\u5bbd\u5ea6\u3001\u901a\u9053\u6570\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6570\u636e\u683c\u5f0f\u7406\u89e3\u4e3a c \u8bed\u8a00\u4e2d\u7684\u9ad8\u7ef4\u6570\u7ec4 <code>image[N][H][W][C]</code>\uff0c\u800c\u56e0\u4e3a c \u7684\u6570\u7ec4\u548c NumPy \u7684 ndarray \u4e00\u6837\u90fd\u662f\u5728\u5185\u5b58\u91cc\u8fde\u7eed\u6392\u653e\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e <code>image[x1][x2][x3][x4]</code>\uff0c\u5176\u5b9e\u5c31\u662f <code>image[x1 * H * W * C + x2 * W * C + x3 * C + x4]</code> \u5904\u7684\u5185\u5b58\u3002</p> <p>\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u6570\u636e\u683c\u5f0f\u662f NCHW\uff0c\u4e5f\u5c31\u662f\u5355\u5f20\u56fe\u7247\u5185\u901a\u9053\u5728\u524d\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u9009\u7528\u3002</p> <p>\u6570\u636e\u683c\u5f0f\u66f4\u591a\u662f\u5bf9\u6570\u636e\u7684\u5b58\u653e\u987a\u5e8f\u8fdb\u884c\u7ea6\u5b9a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 np.transpose \u5c06\u4e0d\u540c\u7ef4\u5ea6\u8fdb\u884c\u8c03\u6362\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#24","title":"2.4 \u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#241","title":"2.4.1 \u63a5\u53e3\u5b9a\u4e49","text":"<p><pre><code>def bilinear_interp(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n \"\"\"\n - a is a ND array with shape [N, H1, W1, C]\n - b is a ND array with shape [N, H2, W2, 2]\n - return a ND array with shape [N, H2, W2, C]\n \"\"\"\n</code></pre> \u5176\u542b\u4e49\u662f\uff0c\u5bf9\u4e8e batch \u5185\u7684\u6bcf\u4e00\u5f20 H1\u00d7W1 \u7684\u56fe a\uff0cb \u4e2d\u7ed9\u51fa\u4e86\u65b0\u7684 H2\u00d7W2 \u7684\u56fe\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 a \u56fe\u4e2d\u5bf9\u5e94\u70b9\u7684\u5750\u6807\uff0c\u5e76\u5c06\u91c7\u6837\u7ed3\u679c\u8fd4\u56de\u3002</p> <p>\u4e3a\u4e86\u7b80\u5316\u4efb\u52a1\uff0c\u6211\u4eec\u5047\u5b9a\u4f20\u5165\u7684\u91c7\u6837\u70b9\u4e0d\u4f1a\u51fa\u73b0\u5728 (H1\u22121,W1\u22121)\uff0c\u5373\u56fe\u50cf\u7684\u53f3\u4e0b\u89d2\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#242","title":"2.4.2 \u57fa\u51c6\u4ee3\u7801","text":"<p>\u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\u8ba1\u7b97\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7248\u672c\uff1a <pre><code>import numpy as np\nfrom numpy import int64\n\n\ndef bilinear_interp_baseline(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the baseline implementation of bilinear interpolation without vectorization.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # Get axis size from ndarray shape\n    N, H1, W1, C = a.shape  # \u4e5f\u5c31\u662f\u77e5\u9053a\u7684shape\uff0c\u5f97\u5230\u8f93\u5165\u7684batch size\uff0cheight\uff0cwidth\uff0cchannel\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f5c\u4e3a\u4e09\u91cd\u5faa\u73af\u7684\u53c2\u6570\n    N1, H2, W2, _ = b.shape\n    assert N == N1  # assert\u662f\u4e00\u79cd\u201c\u65ad\u8a00\u201d\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5b9e\u65f6\u68c0\u67e5\uff0c\u4e00\u65e6N!=N1\uff0c\u5c31\u4f1a\u62a5\u9519\n\n    # Do iteration\n    res = np.empty((N, H2, W2, C), dtype=int64)  # \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684ndarray\u6765\u5b58\u653e\u7ed3\u679c\n    for n in range(N):\n        for i in range(H2):\n            for j in range(W2):\n                x, y = b[n, i, j]  # b\u7684shape\u662f[N,H2,W2,2]\uff0c\u5b83\u5b58\u50a8\u7684\u662f\u60f3\u8981\u4ece\u539f\u56fe\u4e2d\u53d6\u7684\u4f4d\u7f6e\u5750\u6807\uff0c\u5176\u4e2db[ , , ,0]\u662fx\u5750\u6807\uff0cb[ , , ,1]\u662fy\u5750\u6807\n                x_idx, y_idx = int(np.floor(x)), int(np.floor(y))  # floor\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u4e5f\u5c31\u662f\u53bb\u5bfb\u627e\u8ddd\u79bb(x,y)\u76f8\u90bb\u7684\u6574\u70b9\n                _x, _y = x - x_idx, y - y_idx\n                # For simplicity, we assume all x are in [0, H1 - 1), all y are in [0, W1 - 1)\n                res[n, i, j] = a[n, x_idx, y_idx] * (1 - _x) * (1 - _y) + a[n, x_idx + 1, y_idx] * _x * (1 - _y) + \\\n                               a[n, x_idx, y_idx + 1] * (1 - _x) * _y + a[n, x_idx + 1, y_idx + 1] * _x * _y\n                # \u8fd9\u4e2a\u8ba1\u7b97\u5b8c\u5168\u5c31\u5728\u5957\u516c\u5f0f\n    return res\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#243","title":"2.4.3 \u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0","text":"<p>\u5728\u7ed9\u51fa\u7684\u4ee3\u7801\u7684 bilinear_interp/vectorized.py \u4e2d\uff0c\u5b8c\u6210 bilinear_interp_vectorized \u51fd\u6570\u3002  </p> <p>\u6574\u9053\u9898\u5e76\u4e0d\u96be\uff0c\u5c31\u662f\u5c06\u539f\u6765\u7684\u4e09\u91cdfor\u5faa\u73af\u8f6c\u6210\u5411\u91cf\u5316\u540e\u591a\u7ef4\u4e00\u8d77\u8ba1\u7b97\u4ece\u800c\u8282\u7ea6\u65f6\u95f4  </p> <p>\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u6ca1\u6709\u8003\u8651\u5230\u7ef4\u6570\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u51fa\u73b0\u62a5\u9519  \u8fd9\u91cc\u8865\u5145numpy\u7684\u5e7f\u64ad\u89c4\u5219\uff0c\u6765\u81eagpt\uff1a  </p> <p>1\u3001\u5982\u679c\u6240\u6709\u8f93\u5165\u6570\u7ec4\u7684\u7ef4\u5ea6\u6570\u4e0d\u540c\uff0c\u5f62\u72b6\u8f83\u5c0f\u7684\u6570\u7ec4\u4f1a\u5728\u524d\u9762\u88651\uff08\u76f4\u5230\u7ef4\u5ea6\u6570\u76f8\u540c\uff09\u3002 2\u3001\u5982\u679c\u4e24\u4e2a\u6570\u7ec4\u5728\u67d0\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u5927\u5c0f\u4e0d\u540c\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u7684\u5927\u5c0f\u4e3a1\uff0c\u5219\u8be5\u7ef4\u5ea6\u4e0a\u5927\u5c0f\u4e3a1\u7684\u6570\u7ec4\u5c06\u88ab\u6269\u5c55\uff08\u6216\u201c\u5e7f\u64ad\u201d\uff09\u4ee5\u5339\u914d\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 3\u3001\u5982\u679c\u4e24\u4e2a\u6570\u7ec4\u5728\u4efb\u4f55\u7ef4\u5ea6\u4e0a\u7684\u5927\u5c0f\u90fd\u4e0d\u76f8\u540c\u4e14\u90fd\u4e0d\u4e3a1\uff0c\u5219\u4f1a\u51fa\u73b0\u5f62\u72b6\u4e0d\u5339\u914d\u7684\u9519\u8bef\u3002</p> <p>\u5728\u8fd9\u91cc\uff0c\u539f\u4ee3\u7801\u4e3a\uff1a <pre><code># \u63a5\u7740\u8ba1\u7b97\u5dee\u503c  \n_x,_y=b[:,:,:,0]-x_idx,b[:,:,:,1]-y_idx  \n\n# \u76f4\u63a5\u5957\u516c\u5f0f  \nres=a[:,x_idx,y_idx]*(1-_x)*(1-_y)+a[:,x_idx+1,y_idx]*_x*(1-_y)+a[:, x_idx, y_idx + 1] * (1 - _x) * _y + a[:, x_idx + 1, y_idx + 1] * _x * _y\n</code></pre> \u5176\u4e2d\uff0ca\u7684shape\u662f(N,H1,W1,C)\uff0c\u4f46_x\u7684shape\u662f(N,H1,W1)\uff0c\u7f3a\u5c11\u4e86\u901a\u9053\u6570\u8fd9\u4e2a\u7ef4\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u4e3a\u5b83\u52a0\u4e0a\u8fd9\u4e00\u7ef4\u5ea6 <pre><code>_x=_x[:,:,:,np.newaxis]\n_y=_y[:,:,:,np.newaxis] \n</code></pre></p> <p><code>np.nuewaxis</code>\u7528\u4e8e\u5728\u6570\u7ec4\u7684\u6307\u5b9a\u4f4d\u7f6e\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8f74\uff08axis\uff09\uff0c\u6548\u679c\u7b49\u540c\u4e8e\u5728\u5207\u7247\u64cd\u4f5c\u4e2d\u6307\u5b9a\u4e00\u4e2a None \u6216\u7a7a\u5207\u7247\uff08:\uff09\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u66f4\u660e\u786e\u7684\u8bed\u4e49\u3002 \u5f53\u4f60\u5bf9\u4e00\u4e2a\u6570\u7ec4\u4f7f\u7528<code>np.newaxis</code>\u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u662f\u5728\u544a\u8bc9 NumPy \u5728\u6570\u7ec4\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u7ef4\u5ea6\uff0c\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\u4e3a1\u3002\u8fd9\u4e0d\u4f1a\u6539\u53d8\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u6570\u636e\uff0c\u53ea\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5f62\u72b6\uff08shape\uff09  </p> <p>\u4f46\u9057\u61be\u7684\u662f\u8fd9\u6837\u505a\u867d\u7136\u80fd\u8ba9\u7a0b\u5e8f\u8fd0\u884c\uff0c\u4f46\u7b54\u6848\u51fa\u73b0\u4e86\u9519\u8bef\uff1a  \u8fd9\u4e2a\u95ee\u9898\u5c5e\u5b9e\u5bf9\u6211\u9020\u6210\u4e86\u6781\u5927\u7684\u56f0\u6270 \u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e<code>a[N,H,W]</code>\uff0c\u4f20\u5165\u7684\u65f6\u5019\u5b83\u5b58\u4e86\u6bcf\u4e2a\u70b9C\u4e2a\u901a\u9053\u7684\u503c\uff0c\u73b0\u5728\u5411\u91cf\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u8981\u5bf9\u8fd9\u4e9b\u70b9\u4e00\u8d77\u505a\u64cd\u4f5c\uff1b\u6211\u4eec\u4ee5<code>x_idx</code>\u548c<code>y_idx</code>\u4f5c\u4e3a\u7d22\u5f15\u628a\u6240\u6709\u70b9\u4f5c\u4e3a\u6574\u4f53\uff0c\u8fd9\u4e24\u4e2a\u7d22\u5f15\u5177\u6709[N,H,W]\u7684\u4e09\u7ef4\u7ed3\u6784\uff0c\u4f46\u662f<code>N</code>\u4e0d\u5177\u5907\u4e09\u7ef4\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06<code>N</code>\u62d3\u5c55\u4e3a\u4e09\u7ef4\u7684 <pre><code>new_n=np.arange(N)[:, np.newaxis, np.newaxis] # np.arange()\u751f\u6210\u7ed9\u5b9a\u8303\u56f4\u7684\u6570\u7ec4\n</code></pre> \u6700\u540e\u5f97\u5230\u7684<code>bilinear_interp_vectorized</code>\u51fd\u6570\u5982\u4e0b\uff1a <pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assert N == N1\n\n    # TODO: Implement vectorized bilinear interpolation  \n    res = np.empty((N, H2, W2, C), dtype=int64)  \n\n    # \u9996\u5148\u627e\u5230\u76f8\u90bb\u4e14\u5de6\u504f\u7684\u70b9\u5750\u6807\uff0c\u5206\u4e3ax\u548cy\n    x_idx,y_idx=np.floor(b[:,:,:,0]).astype(int64),np.floor(b[:,:,:,1]).astype(int64) \n\n    # \u63a5\u7740\u8ba1\u7b97\u5dee\u503c  \n    _x,_y=b[:,:,:,0]-x_idx,b[:,:,:,1]-y_idx  \n\n    #\u5728_x,_y\u4e0a\u6dfb\u52a0\u7a7a\u7684C\u8f74\uff0c\u4ee5\u5339\u914da\n    _x=_x[:,:,:,np.newaxis]\n    _y=_y[:,:,:,np.newaxis]  \n\n    new_n=np.arange(N)[:, np.newaxis, np.newaxis]\n\n    # \u76f4\u63a5\u5957\u516c\u5f0f  \n    # res=(a[:,x_idx,y_idx]*(1-_x)*(1-_y)+a[:,x_idx+1,y_idx]*_x*(1-_y)+a[:, x_idx, y_idx + 1] * (1 - _x) * _y + a[:, x_idx + 1, y_idx + 1] * _x * _y).astype(int64)\n\n    res=(a[new_n,x_idx,y_idx]*(1-_x)*(1-_y)+a[new_n,x_idx+1,y_idx]*_x*(1-_y)+a[new_n, x_idx, y_idx + 1] * (1 - _x) * _y + a[new_n, x_idx + 1, y_idx + 1] * _x * _y).astype(int64)\n\n    return res\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#244","title":"2.4.4 \u68c0\u6d4b\u5b9e\u73b0\u6b63\u786e\u4e0e\u52a0\u901f\u6548\u679c","text":"<p>\u8fd0\u884c <code>main.py</code>\uff0c\u67e5\u770b\u8f93\u51fa\uff0c\u4e00\u5207\u987a\u5229\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a <pre><code>Generating Data...\nExecuting Baseline Implementation...\nFinished in 139.50709176063538s\nExecuting Vectorized Implementation...\nFinished in 4.717759132385254s\n[PASSED] Results are identical.\nSpeed Up 29.570626190511327x\n</code></pre> \u5426\u5219\u5c06\u4f1a\u89e6\u53d1\u5f02\u5e38\uff1a <pre><code>Traceback (most recent call last):\n  File \"Introduction-Labs-2021/lab2_vectors/main.py\", line 28, in &lt;module&gt;\n    raise Exception('Results are different!')\nException: Results are different!\n</code></pre> \u5176\u4e2d\uff0c\u8017\u65f6\u4e0e\u52a0\u901f\u6bd4\u4e0e\u4f60\u7684\u5b9e\u73b0\u548c\u8bbe\u5907\u6709\u5173\uff08\u4e3b\u8981\u662f\u5b9e\u73b0\uff09\u3002\u8bf7\u5728\u62a5\u544a\u4e2d\u5c06\u4f60\u7684\u8fd0\u884c\u7ed3\u679c\u8d34\u51fa\u3002</p> <p></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#25","title":"2.5 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801","text":"<p>starter_code </p> <p>\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u56de\u5230lab1\uff0c\u56de\u5230Linux\uff0c\u53bb\u5b66\u4e60Docker\u5e76\u5b8c\u6210lab1\u7684bonus(\u5c1d\u8bd5)  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab1-bonus","title":"Lab1 bonus","text":"<p>\u5728Lab\u6587\u6863\u4e2dDocker\u7684\u90e8\u5206\u662f\u786e\u5b9e\u7684\uff0c\u4ec5\u7ed9\u51fa\u4e86bonus\u7684\u4efb\u52a1\u8981\u6c42</p> <p>\u4f7f\u7528Docker\u590d\u73b0\u5b9e\u9a8c\uff1a - [ ] \u5bfb\u627e\u5408\u9002\u7684 Docker - [ ] \u521b\u5efa\u591a\u4e2a Docker \u5b9e\u4f8b\uff0c\u4f7f\u7528 MPI \u5728 Docker \u7ec4\u6210\u7684\u96c6\u7fa4\u4e2d\u8fd0\u884c HPL\u3002  </p> <p>\u6240\u4ee5\u6211\u4eec\u5c06\u5b8c\u5168\u9075\u5faa\u4e2d\u79d1\u5927Linux 101\uff08\u516b\u3001Docker\uff09 \u7684\u5b66\u4e60\u8def\u5f84\uff0c\u5b66\u4e60Docker  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#31-docker","title":"3.1 Docker","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#311-docker","title":"3.1.1 \u4e3a\u4ec0\u4e48\u4f7f\u7528Docker","text":"<p>\u300c\u5bb9\u5668\u300d\uff0c\u662f\u8fd1\u5e74\u6765\u975e\u5e38\u70ed\u95e8\u7684\u4e00\u4e2a\u6982\u5ff5\u3002\u5b83\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u63d0\u4f9b\u7684\u9694\u79bb\u6280\u672f\uff0c\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u5316\u73af\u5883\u3002\u76ee\u524d\uff0c\u5b83\u5728\u8f6f\u4ef6\u7684\u5f00\u53d1\u3001\u90e8\u7f72\u7b49\u65b9\u9762\u6709\u7740\u975e\u5e38\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u800c Docker\uff0c\u662f Linux \u5bb9\u5668\u6280\u672f\u4e2d\u7684\u4ee3\u8868\u6027\u8f6f\u4ef6\uff0c\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u63a5\u53e3\u6765\u521b\u5efa\u3001\u4f7f\u7528 Linux \u5bb9\u5668\u3002</p> <p>Docker\u80fd\u591f\u5229\u7528Linux\u5185\u6838\u7684\u5bb9\u5668\u7279\u6027\uff0c\u9694\u79bb\u51fa\u4e00\u4e2a\u8f7b\u4fbf\u7684\u73af\u5883\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u7531\u6b64\u53ef\u4ee5\u5feb\u901f\u914d\u7f6e\u4e0d\u540c\u7684\u73af\u5883\uff08\u6bd4\u5982\u8bf4\uff0c\u901a\u8fc7Docker\uff0c\u4f60\u53ef\u4ee5\u5728Ubuntu\u4e0a\u4f7f\u7528CentOS\u7684\u73af\u5883\uff09\uff0c\u90e8\u7f72\u5e94\u7528  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#312-docker","title":"3.1.2 \u5b89\u88c5Docker","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#windowsmacos","title":"\u5728Windows\u6216macOS\u4e0a\u5b89\u88c5","text":"<p>Docker\u4f7f\u7528\u4e86Linux\u5185\u6838\u7684\u5bb9\u5668\u7279\u6027\uff0c\u6240\u4ee5\u4f9d\u8d56\u4e8eLinux\uff0c\u8981\u5728\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8fd0\u884c\uff0c\u5fc5\u987b\u901a\u8fc7\u865a\u62df\u865a\u62dfLinux\u5185\u6838\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5957Docker Desktop\u7684\u8f6f\u4ef6\uff0c\u5177\u4f53\u5185\u5bb9\u89c1\u6587\u6863  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#linux","title":"\u5728Linux\u4e0a\u5b89\u88c5","text":"<p>\u9996\u5148\u7ed9\u51faDocker install\u7684\u5b98\u65b9\u6587\u6863 </p> <p>\u6ce8\u610f\uff0c\u5728Debian/Ubuntu\u4e0a\uff0c\u4e0d\u8981\u8fd0\u884c <code>sudo apt install docker</code> \u6b64\u65f6\u5b89\u88c5\u7684\u662f\u4e00\u4e2a\u7cfb\u7edf\u6258\u76d8\u7a0b\u5e8f\uff0c\u548c\u8fd9\u91cc\u7684Docker\u6ca1\u6709\u5173\u7cfb  </p> <p><code>docker.op</code> \u662f\u7531Debian/Ubuntu\u7ef4\u62a4\u7684Docker\u7248\u672c\uff0c\u6bd4\u5b98\u65b9\u6700\u65b0\u7248\u7a0d\u5fae\u8001\u4e00\u70b9 <code>docker-ce</code> \u662f\u7531Docker\u5b98\u65b9\u7ef4\u62a4\u7684\u3002\u5b83\u4f9d\u8d56\u7684\u7a0b\u5e8f\u5e93\u90fd\u88ab\u6253\u5305\u5728\u8fd9\u4e2a\u5305\u4e2d  </p> <p>Docker\u5b98\u65b9\u63d0\u4f9b\u7684Docker\u793e\u533a\u7248\u5efa\u8bae\u5b89\u88c5\u811a\u672c <pre><code>curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n</code></pre></p> <p>\u8fd9\u91cc\u6709\u4e2a\u5c0f\u63d2\u66f2\uff0c\u60f3\u4e0b\u8f7dcurl\u53d1\u73b0\u865a\u62df\u673a\u8fde\u4e0d\u4e0a\u7f51\uff0c\u6700\u540e\u53d1\u73b0\u662f\u56e0\u4e3a\u4f7f\u7528\u4e86\u68af\u5b50\u6ca1\u628a\u68af\u5b50\u5173\u6389\u76f4\u63a5\u5173\u673a\u4e86\uff0c\u8fd9\u91cc\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a <pre><code>#\u91cd\u542f\u865a\u62df\u673a\u7f51\u7edc\u670d\u52a1\u5668\uff1actrl+alt+t\u6253\u5f00\u865a\u62df\u673a\u547d\u4ee4\u7ec8\u7aef\uff0c\u4f9d\u6b21\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff1a\nsudo service network-manager stop\nsudo rm /var/lib/NetworkManager/NetworkManager.state\nsudo service network-manager start\n</code></pre> \u5c1d\u8bd5\u4e86\u4e00\u4e0b\uff0c\u7528\u4e0d\u4e86\uff0c\u5f97\u7528\u955c\u50cf\u7f51\u7ad9\uff0c\u6240\u4ee5\u6700\u540e\u627e\u4e86\u7bc7CSDN\u6587\u7ae0 \u8ddf\u7740\u4e0b\u7684 </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#registry-mirror","title":"\u914d\u7f6eRegistry Mirror","text":"<p>Docker \u9ed8\u8ba4\u4ece Docker Hub \u4e0a\u62d6\u53d6\u6240\u9700\u8981\u7684\u955c\u50cf\u3002\u4f46\u7531\u4e8e\u7f51\u7edc\u539f\u56e0\uff0c\u62d6\u53d6\u7684\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\u3002\u4e00\u4e9b\u670d\u52a1\u5728\u4e2d\u56fd\u63d0\u4f9b\u4e86 Docker Hub \u7684\u955c\u50cf\uff08\u53cd\u4ee3\u7f13\u5b58\uff09\u3002\u4ee5\u4e0b\u5185\u5bb9\u4ee5\u7f51\u6613\u4e91\u4e0e\u767e\u5ea6\u4e91\u4e3a\u4f8b\u3002  </p> <p>\u4e3a\u4e86\u4f7f\u7528\u8fd9\u4e9bDocker Hub\u955c\u50cf\uff0c\u5728Ubuntu\u4e0a\u53ef\u4ee5\u7f16\u8f91 <code>/etc/docker/daemon.json</code> \u6587\u4ef6\uff08\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u65b0\u5efa\u4e00\u4e2a\uff09\uff0c\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9 <pre><code>{\n  \"registry-mirrors\": [\n    \"https://hub-mirror.c.163.com\",\n    \"https://mirror.baidubce.com\"\n  ]\n}\n</code></pre> \u4f7f\u7528 <code>sudo systemctl restart docker</code> \u91cd\u542fDocker\u670d\u52a1\uff0c\u518d\u6b21\u8fd0\u884c <code>docker info</code> \u547d\u4ee4\uff0c\u53ef\u4ee5\u770b\u5230  \u8bf4\u660eDocker Registry Mirror\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#hello-worlddocker","title":"\u4f7f\u7528Hello World\u6d4b\u8bd5Docker\u5b89\u88c5","text":"<p>\u5c1d\u8bd5\u8fd0\u884c <code>docker run --rm hello-world</code> \u62c9\u53d6hello-world\u955c\u50cf\uff0c\u4f46\u662f\u6ca1\u7528\u6210\u529f  </p> <p> </p> <p>\u6587\u6863\u91cc\u7ed9\u51fa\u7684\u79d1\u5927\u955c\u50cf\u7ad9Docker Hub registry mirror \u9700\u8981\u6821\u56ed\u7f51\uff0c\u6240\u4ee5\u572898\uff08\u539f\u8d34\uff09\u4e0a\u627e\u4e86\u6d59\u5927\u7684\u955c\u50cf\u7ad9 </p> <p>\u8fdb\u5165\u4e4b\u540e\u542f\u7528\u670d\u52a1 \u767b\u5f55\u547d\u4ee4 <pre><code>docker login dockerhub.zjusct.io -u 3230102778 -p ntjaz3okt2vti2f28a0r3qdl188fyuzl  \n</code></pre> \u4f7f\u7528\u955c\u50cf\u57df\u540d\uff0c\u8bbe\u7f6e <code>/etc/docker/daemon.json</code> \u4e3a\uff1a <pre><code>{ \"registry-mirrors\": [\"https://3230102778-ntjaz3okt2vti2f28a0r3qdl188fyuzl.dockerhub.zjusct.io\"] }\n</code></pre> \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6d59\u5927\u955c\u50cf\u7ad9\u7ed9\u51fa\u7684\u62c9\u53d6\u955c\u50cf\u793a\u4f8b\u662f <pre><code>docker pull ubuntu:24.04 \u6539\u4e3a docker pull dockerhub.zjusct.io/library/ubuntu:24.04   \n</code></pre> \u4f46\u5176\u5b9e\u4e24\u79cd\u90fd\u53ef\u4ee5\u62c9\u53d6  \u4e0d\u8fc7\u8fd9\u4e0d\u91cd\u8981  </p> <p>\u5c1d\u8bd5\u8fd0\u884c <code>docker run --rm hello-world</code> \u547d\u4ee4  \u8bf4\u660eDocker\u5df2\u7ecf\u4e00\u5207\u5c31\u7eea  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#313-docker","title":"3.1.3 \u4f7f\u7528Docker","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#ubuntushell","title":"\u5728Ubuntu\u5bb9\u5668\u4e2d\u4f7f\u7528shell","text":"<p>\u9996\u5148\u770b\u4e00\u6bb5\u547d\u4ee4 <pre><code>docker run -it --rm --name ubuntu-container unbuntu:20.04\n</code></pre> \u5176\u4e2d <code>--rm</code> \u4ee3\u8868\u5bb9\u5668\u505c\u6b62\u8fd0\u884c\uff08\u9000\u51fa\uff09\u540e\u4f1a\u88ab\u5220\u9664 <code>--name</code> \u53c2\u6570\u4ee3\u8868\u7ed9\u5bb9\u5668\u8d77\u540d\u5b57\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48docker\u4f1a\u7ed9\u5bb9\u5668\u968f\u673a\u8d77\u4e00\u4e2a\u7ed9\u662f\u7c7b\u4f3c\u4e8egracious_brahmagupta\u7684\u540d\u5b57 <code>-it</code> \u662f\u4e3a\u4e86\u83b7\u5f97\u53ef\u4ea4\u4e92\u5f0f\u7684Shell\u6240\u5fc5\u987b\u7684\u3002<code>-i</code>\u4f1a\u5c06\u5bb9\u5668\u7684init\uff08\u4e3b\u8fdb\u7a0b\uff0c\u8fd9\u91cc\u662f <code>/bin/bash</code> \uff09\u7684\u6807\u51c6\u8f93\u5165\u4e0edocker\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u6807\u51c6\u8f93\u5165\u76f8\u8fde\u63a5\uff1b\u800c <code>-t</code> \u4f1a\u544a\u8bc9\u4e3b\u8fdb\u7a0b\u8f93\u5165\u4e3a\u7ec8\u7aef\uff08TTY\uff09\u8bbe\u5907  </p> <p>\u5728\u6267\u884c\u8fd9\u884c\u547d\u4ee4\u540e\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2aUbuntu20.04\u7684\u5bb9\u5668\u73af\u5883\uff0c\u9000\u51faShell\u540e\u5bb9\u5668\u4f1a\u88ab\u9500\u6bc1  </p> <p>\u5982\u679c\u6ca1\u6709\u52a0\u4e0a <code>--rm</code> \uff0c\u9000\u51fa\u540e\u53ef\u4ee5\u4f7f\u7528 <code>docker ps -a</code> \u67e5\u770b\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u5bb9\u5668  </p> <p>P.S \u4e8b\u5b9e\u8bc1\u660e\u8fd8\u662f\u8981\u6302\u955c\u50cf\u6765\u4e0b\u8f7d\uff0c\u6bd4\u5982\u4e0b\u8f7dubuntu\u5bb9\u5668\u73af\u5883 <code>docker run -it --rm --name ubuntu-container dockerhub.zjusct.io/library/ubuntu:24.04</code> </p> <p> </p> <p><code>exit</code> \u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u5bb9\u5668  </p> <p>\u4f7f\u7528 <pre><code>docker start -ai ubuntu-container  \n</code></pre> \u542f\u52a8\u5bb9\u5668\u3002\u5176\u4e2d\uff0c <code>-a</code> \u4ee3\u8868\u8fde\u63a5\u8f93\u51fa\u4ee5\u53ca\u4fe1\u53f7\u3002\u6700\u540e\u7684 <code>ubuntu-container</code> \u6307\u4ee3\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u90a3\u4e2a\u5bb9\u5668\u3002\u4e5f\u53ef\u4ee5\u8f93\u5165\u5bb9\u5668\u7684ID\u6765\u542f\u52a8\uff08\u4e0d\u9700\u8981\u8f93\u5165\u5b8c\u6574ID\uff0c\u53ea\u9700\u8981\u524d\u51e0\u4f4d\u5373\u53ef\uff09\uff1a  \u4e0e <code>docker start</code> \u76f8\u5bf9\u5e94\uff0c<code>docker stop</code> \u53ef\u4ee5\u5173\u95ed\u4e00\u4e2a\u5bb9\u5668\uff0c <code>docker rm</code> \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u5bb9\u5668 <pre><code>docker stop ubuntu-container  \ndocker stop ubuntu-container  \n</code></pre></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#pythonpython","title":"\u5728Python\u5bb9\u5668\u4e2d\u4f7f\u7528Python\u547d\u4ee4\u884c","text":"<p><pre><code>docker run -it --name python3 python  \n</code></pre> \u6267\u884c\u540e\u4f1a\u83b7\u5f97\u4e00\u4e2aPython3\u73af\u5883</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#mkdocs","title":"\u5728MkDocs\u5bb9\u5668\u8fd0\u884c\u6587\u6863","text":"<p>\uff08\u7565\uff09  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#32-dockerlab1","title":"3.2 \u5c1d\u8bd5\u4f7f\u7528Docker\u590d\u73b0Lab1","text":"<p>\u5176\u5b9e\u6211\u5b8c\u5168\u8fd8\u4e0d\u6e05\u695a\u8981\u600e\u4e48\u7528Docker\u6765\u590d\u73b0\u96c6\u7fa4\u7684\u642d\u5efa\uff0c\u4f46\u6211\u89c9\u5f97Docker\u548c\u865a\u62df\u673a\u5e94\u8be5\u662f\u5341\u5206\u7c7b\u4f3c\u7684\uff0c\u6211\u7684\u57fa\u672c\u60f3\u6cd5\u662f\uff1a\u5728\u4e00\u4e2aubuntu\u5bb9\u5668\u4e2d\u642d\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e4b\u524dThe one\u4e00\u6837\u7684\u4e3b\u8282\u70b9\uff0c\u628a\u5b83\u521b\u5efa\u6210\u955c\u50cf\u3002\u7528\u8fd9\u4e2a\u955c\u50cf\u518d\u521b\u5efa\u4e09\u4e2a\u5bb9\u5668\uff08\u7c7b\u4f3c\u4e8e\u514b\u9686\u865a\u62df\u673a\uff09\uff0c\u8ba9\u4ed6\u4eec\u4e92\u76f8ping\u901a\uff0c\u5f62\u6210\u96c6\u7fa4  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#321-ubuntu-containerthe-one","title":"3.2.1 \u5728ubuntu-container\u5bb9\u5668\u4e2d\u590d\u73b0The one\u7684\u73af\u5883","text":"<p>\u57fa\u672c\u548cLab1\u4e2d\u5bf9The one\u7684\u914d\u7f6e\u4e00\u6837\uff0c\u4e0d\u8fc7\u4e00\u8fdb\u53bb\u7684\u65f6\u5019\u6240\u5728\u7684\u4f4d\u7f6e\u662froot\uff0c\u4e3a\u4e86\u5b8c\u5168\u4e0e\u4e4b\u524d\u7684\u6d41\u7a0b\u4e00\u81f4\uff0c\u6211cd\u5230\u4e86home\u76ee\u5f55\u4e0b\u7684ubuntu\u8def\u5f84\u4e0b\u53bb\u6267\u884c\u64cd\u4f5c\u3002  </p> <p>ubuntu\u2014container\u521b\u5efa\u7684\u65f6\u5019\u53ea\u6709root\u7528\u6237\uff0c\u8fd9\u662f\u5341\u5206\u5371\u9669\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u5148\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u4e3a\u597d  </p> <pre><code>useradd -m -s /bin/bash lee \n</code></pre> <p>\u4e4b\u540e <code>su lee</code> \u5207\u6362\u7528\u6237  </p> <p>\u795e\u5947\u7684\u662f\uff0c\u8fd9\u4e2a\u5bb9\u5668\u5c45\u7136\u6ca1\u6709sudo\u547d\u4ee4\uff0c\u6211\u7528lee\u7684\u8eab\u4efd\u53bbcp\u6587\u4ef6\uff0c\u5c45\u7136permission denied\u3002\u53ea\u80fdexit\u5230root\u7528\u6237\u53bb\u88c5\u4e86\u4e00\u4e2asudo\uff0c\u540e\u9762\u53c8\u8bbe\u5b9a\u4e86\u4e00\u4e0blee\u7528\u6237\u7684\u5bc6\u7801  </p> <p><pre><code>passwd lee\n</code></pre> \u8fd8\u9700\u8981\u628alee\u6dfb\u52a0\u5230sudoers file\u4e2d \u8fd9\u4e00\u6b65\u9700\u8981root\u7528\u6237\u6743\u9650\uff0c\u6253\u5f00 <code>/etc/sudoers</code> \uff0c\u6dfb\u52a0 <pre><code>lee ALL=(ALL) ALL\n</code></pre> \u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86  </p> <p></p> <p>\u5728\u914d\u7f6eCBLAS\u8fdb\u884cmake\u7684\u65f6\u5019\uff0c\u672c\u6765\u7684warning\u53d8\u6210\u4e86error\uff0c\u9700\u8981\u5728Makefile.in\u4e2d\u5bf9\u7f16\u8bd1\u9009\u9879\u8fdb\u884c\u4fee\u6539 <pre><code>FC=gfortran --&gt; FC=gfortran -fallow-argument-mismatch\n</code></pre> \u5ffd\u7565\u8fd9\u4e2a\u62a5\u9519\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38make  </p> <p>\u4e4b\u540e\u7684\u6784\u5efa\u4e0e\u4e4b\u524d\u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u5728\u6d4b\u8bd5OpenMPI\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u95ee\u9898  </p> <p></p> <p>\u7531\u4e8e\u65f6\u95f4\u95ee\u9898\uff0c\u8be5\u62a5\u9519\u4ecd\u7136\u6ca1\u6709\u89e3\u51b3</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#322","title":"3.2.2 \u624b\u52a8\u6784\u5efa\u955c\u50cf","text":"<p>\u7531\u4e8e\u4f7f\u7528Dockerfile\u81ea\u52a8\u6784\u5efa\u955c\u50cf\uff08\u8f83\u4e3a\u63a8\u8350\u7684\u8def\u5f84\uff09\u9700\u8981\u4e00\u5b9a\u7684\u5b66\u4e60\uff0c\u8fd9\u91cc\u5c31\u5148\u5c1d\u8bd5\u624b\u52a8\u6784\u5efa  </p> <p>\u5148\u4ece\u4e4b\u524d\u7684\u955c\u50cf\u9000\u51fa\u6765\uff0c\u67e5\u770b\u5f53\u524d\u5bb9\u5668\u7684\u60c5\u51b5 <pre><code>docker ps -a\n</code></pre></p> <p> </p> <p>\u624b\u52a8\u6784\u5efa <pre><code>docker commit 83bdd6e6831e\n</code></pre> </p> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 <code>images</code> \u4e2d\u770b\u5230\u8fd9\u4e2a\u955c\u50cf  </p> <p> </p> <p><pre><code>docker save 2325aae77464 &gt; node.tar\n</code></pre> node.tar\u5c31\u662f\u6211\u4eec\u7684\u955c\u50cf\uff08\u4f46\u6211\u771f\u4e0d\u77e5\u9053\u600e\u4e48\u52a0\u8f7d\u5b83\uff09 </p> <p>\u6211\u4eec\u53ef\u4ee5\u7528 <pre><code>docker run -it --name node01 2325aae77464 \n</code></pre> \u6765\u751f\u6210\u4e00\u4e2a\u4f7f\u7528\u8be5\u955c\u50cf\u7684\u5bb9\u5668  </p> <p> </p> <p>\u4f46\u662f\u5728\u5bb9\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u95ee\u9898\u4e0a\u5b8c\u5168\u6ca1\u6709\u76f8\u5173\u77e5\u8bc6\uff0c\u6240\u4ee5bonus\u5230\u8fd9\u91cc\u4e5f\u786e\u5b9e\u8fdb\u884c\u4e0d\u4e0b\u53bb\u4e86\uff0c\u5148\u8fd9\u6837\u5427</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab25-bonus-simd","title":"Lab2.5-Bonus \u624b\u5199 SIMD \u5411\u91cf\u5316","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#41","title":"4.1 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6","text":"<p>\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982 SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002  </p> <p>\u73b0\u4ee3\u7f16\u8bd1\u5668\u7684\u9ad8\u7b49\u7ea7\u4f18\u5316\u4e0b\u4f1a\u81ea\u52a8\u5411\u91cf\u5316\uff0c\u5bf9\u4e8e\u7ed3\u6784\u6e05\u6670\uff0c\u5faa\u73af\u8fb9\u754c\u6e05\u6670\u7684\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u5f88\u4f18\u79c0\u7684\u7a0b\u5ea6\u4e86\u3002\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u59cb\u7ec8\u662f\u4fdd\u5b88\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u65e0\u6cd5\u5b8c\u6210\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u5411\u91cf\u5316\u7684\u5de5\u4f5c  </p> <p>\u663e\u7136\u76f4\u63a5\u624b\u5199\u6c47\u7f16\u6307\u4ee4\u8fc7\u4e8e\u56f0\u96be\uff0c\u5728 C \u8bed\u8a00\u73af\u5883\u4e0b\uff0cIntel \u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5173\u4e8e SIMD \u6307\u4ee4\u7684\u51fd\u6570\u5c01\u88c5\u63a5\u53e3\u548c\u6307\u4ee4\u76f8\u5173\u884c\u4e3a\u7684\u53c2\u7167\u624b\u518c </p> <p>\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570API(Application Programming Interface\uff0c\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3)\u9700\u8981include\u76f8\u5e94\u5934\u6587\u4ef6\uff0c\u5982  </p> <pre><code>#include &lt;smmintrin.h&gt;\n#include &lt;emmintrin.h&gt;\n#include &lt;immintrin.h&gt;\n</code></pre> <p>\u8fd9\u4e2a\u7ea7\u522b\u7684\u4f18\u5316\u5f00\u59cb\u9700\u8981\u8003\u8651\u5177\u4f53\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u57fa\u7840\u7ec6\u8282\uff0c\u5982\u67d0\u4e2a\u67b6\u6784\u4e0b\u67d0\u6761\u6307\u4ee4\u7684\u5b9e\u73b0\u5ef6\u65f6\u548c\u541e\u5410\u91cf\u662f\u591a\u5c11\uff0c\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u591a\u5c11\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8bbf\u5b58\u7684\u5bf9\u9f50\u7b49\u7b49\u3002  </p> <p>\u8fd9\u79cd\u65f6\u5019\u7f16\u8bd1\u5668\u5177\u4f53\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u80fd\u6bd4 C \u8bed\u8a00\u4ee3\u7801\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4f60\u80fd\u4e86\u89e3\u5230\u81ea\u5df1\u4f7f\u7528\u4e86\u591a\u5c11\u5bc4\u5b58\u5668\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u751f\u6210\u4e86\u9884\u671f\u5916\u7684\u4ee3\u7801\u7b49\u7b49\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#42","title":"4.2 \u5b9e\u9a8c\u6b65\u9aa4","text":"<p>\u9898\u76ee\u7684\u683c\u5f0f\u597d\u50cf\u6709\u70b9\u95ee\u9898\uff0c\u770b\u4e0d\u5b8c\u6574  </p> <p>baseline\u5982\u4e0b, \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8fdb\u884cMAXN\u6b21D<sub>4*4</sub>=A<sub>4*12</sub>\\(\\times\\)B<sub>12\u22174</sub>\u7684\u77e9\u9635\u4e58\u6cd5. \u5176\u4e2dMAXN\u4e2a\u77e9\u9635\u7684\u5185\u5bb9\u4e0d\u540c, \u8ba1\u7b97\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4f4d\u79fb  </p> <p>\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0\u4ee5\u4e0b\u9009\u9879\u53ef\u4ee5\u5141\u8bb8\u7f16\u8bd1\u5668\u751f\u6210\u4f7f\u7528 AVX2 \u548c FMA \u6307\u4ee4\u96c6\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u5176\u5b83\u4e0d\u5728\u7f16\u8bd1\u5668\u9ed8\u8ba4\u8303\u56f4\u5185\u7684\u6307\u4ee4\u96c6\uff0c\u7c7b\u4f3c\u7684\u7f16\u8bd1\u9009\u9879\u662f\u5fc5\u8981\u7684\u3002  </p> <pre><code>-mavx2 -mfma\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#421-multicpp","title":"4.2.1 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801 <code>multi.cpp</code>","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;chrono&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;math.h&gt;\n#include &lt;string.h&gt;\n#include &lt;smmintrin.h&gt;\n#include &lt;emmintrin.h&gt;\n#include &lt;immintrin.h&gt;\n\n#define MAXN 10000000\n\ndouble *a;\ndouble *b;\ndouble *c;\ndouble *d;\n\nint main()\n{\n    printf(\"Initializing\\n\");\n    a = (double *)malloc(sizeof(double) * MAXN * 48); // 4*12\n    b = (double *)malloc(sizeof(double) * MAXN * 48); // 12*4\n    c = (double *)malloc(sizeof(double) * MAXN * 16); // 4*4\n    d = (double *)malloc(sizeof(double) * MAXN * 16); // 4*4\n    memset(c, 0, sizeof(double) * MAXN * 16);\n    memset(d, 0, sizeof(double) * MAXN * 16);\n    for (int i = 0; i &lt; MAXN * 48; i++)  //initialize\n    {\n        *(a + i) = 1.0 / (rand() + 1);\n        *(b + i) = 1.0 / (rand() + 1);\n    }\n\n    printf(\"Raw computing\\n\");\n    auto start = std::chrono::high_resolution_clock::now();\n    for (int n = 0; n &lt; MAXN; n++)\n    {\n        for (int k = 0; k &lt; 4; k++)\n        {\n            for (int i = 0; i &lt; 4; i++)\n            {\n                for (int j = 0; j &lt; 12; j++)\n                {\n                    *(c + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n                }\n            }\n        }\n    }\n    auto end = std::chrono::high_resolution_clock::now();\n\n    double time1 = std::chrono::duration&lt;double&gt;(end - start).count();\n\n    printf(\"New computing\\n\");\n    start = std::chrono::high_resolution_clock::now();\n    for (int n = 0; n &lt; MAXN; n++)\n    {\n        /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n        // -----------------------------------\n        for (int k = 0; k &lt; 4; k++)\n        {\n            for (int i = 0; i &lt; 4; i++)\n            {\n                for (int j = 0; j &lt; 12; j++)\n                {\n                    *(d + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n                }\n            }\n        }\n        // -----------------------------------\n    }\n\n    end = std::chrono::high_resolution_clock::now();\n\n    double time2 = std::chrono::duration&lt;double&gt;(end - start).count();\n    printf(\"raw time=%lfs\\nnew time=%lfs\\nspeed up:%lfx\\nChecking\\n\", time1, time2, time1 / time2);\n\n    for (int i = 0; i &lt; MAXN * 16; i++)\n    {\n        if (fabs(c[i] - d[i]) / d[i] &gt; 0.0001)\n        {\n            printf(\"Check Failed at %d\\n\", i);\n            return 0;\n        }\n    }\n    printf(\"Check Passed\\n\");\n}\n</code></pre> <p>\u770b\u5b8cbaseline\u53d1\u73b0\u662f\u8001\u719f\u4eba\u4e86\uff0c\u8fd9\u5176\u5b9e\u5c31\u662fSEGMM\uff0c\u53ea\u4e0d\u8fc7\u5728PAC\u6bd4\u8d5b\u91cc\u652f\u6301\u7684\u662fARM\u6307\u4ee4\u96c6\uff0c\u800c\u5728\u8fd9\u91cc\u8981\u7528AVX\u6307\u4ee4\u96c6\uff0c\u800c\u4e14\u8fd9\u91cc\u7684\u77e9\u9635\u89c4\u6a21\u662f\u786e\u5b9a\u7684\uff0c\u884c\u6570\u548c\u5217\u6570\u90fd\u662f4\u7684\u500d\u6570\uff0c\u7ed3\u679c\u77e9\u9635\u5c31\u662f\u4e00\u4e2a4\\(\\times\\)4\u7684\u77e9\u9635\uff0c\u4e0d\u9700\u8981\u5904\u7406boundary case\u3002\u53ea\u9700\u8981\u5b66\u4e60\u4e00\u4e0bAVX\u6307\u4ee4\u96c6\uff0c\u505a\u4e00\u4e2a\u66ff\u6362\u5c31\u597d\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#422-avx","title":"4.2.2 AVX\u6307\u4ee4\u96c6","text":"<p>\u6700\u6743\u5a01\u7684\u5f53\u7136\u662f\u5b98\u65b9\u6587\u6863\uff0c\u7b80\u5355\u67e5\u627e\u4e5f\u53ef\u4ee5\u770bCSDN </p> <p>\u8fd9\u91cc\u53ea\u5217\u4e3e\u4ee3\u7801\u4e2d\u4f7f\u7528\u5230\u7684:  </p> <p><code>_mm256_setzero_pd</code> </p> <p><code>_mm256_loadu_pd</code> </p> <p><code>_mm256_set1_pd</code> </p> <p><code>_mm256_fmadd_pd</code> </p> <p><code>_mm256_storeu_pd</code> </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#423","title":"4.2.3 \u4f18\u5316\u601d\u8def","text":"<p>\u6548\u7387\u89d2\u5ea6\u6765\u8bf4\u7528AVX-512\u540c\u65f6\u8fdb\u884c8\u4e2adouble\u6570\u7684\u8fd0\u7b97\u6548\u7387\u5e94\u8be5\u4f1a\u66f4\u9ad8\uff0c\u4f46\u8003\u8651\u5230a\uff0cb\u77e9\u9635\u5206\u522b\u56fa\u5b9a\u4e3a4\\(\\times\\)12\u548c12\\(\\times\\)4\u7684\u89c4\u6a21\uff0c\u884c\u6570\u548c\u5217\u6570\u90fd\u662f4\u7684\u500d\u6570\uff0c\u6211\u9009\u62e9\u4e86_m256d\u7684\u6570\u636e\u7c7b\u578b\uff0c\u540c\u65f6\u8fdb\u884c4\u4e2adouble\u6570\u7684\u5411\u91cf\u8fd0\u7b97\u3002  </p> <p>\u7531\u4e8e\u7ed3\u679c\u77e9\u9635\u672c\u8eab\u5c31\u662f4\\(\\times\\)4\u7684\u89c4\u6a21\uff0c\u4e5f\u5c31\u610f\u5473\u7740a\u77e9\u9635\u7684block\u5c31\u662f4\\(\\times\\)12\uff0cb\u77e9\u9635\u7684block\u5c31\u662f12\\(\\times\\)4\uff0c\u90fd\u53ea\u9700\u8981\u626b\u63cf\u8bfb\u53d6\u4e00\u6b21\uff0c\u56e0\u6b64\u6ca1\u6709packing\u7684\u5fc5\u8981\u3002  </p> <p>\u4f18\u5316\u540e\u7684\u4ee3\u7801multi_pro.cpp <pre><code>#include &lt;stdio.h&gt;\n#include &lt;chrono&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;math.h&gt;\n#include &lt;string.h&gt;\n#include &lt;smmintrin.h&gt;\n#include &lt;emmintrin.h&gt;\n#include &lt;immintrin.h&gt;\n\n#define MAXN 10000000\n\ndouble *a;\ndouble *b;\ndouble *c;\ndouble *d;\n\nint main()\n{\n    printf(\"Initializing\\n\");\n    a = (double *)malloc(sizeof(double) * MAXN * 48); // 4*12\n    b = (double *)malloc(sizeof(double) * MAXN * 48); // 12*4\n    c = (double *)malloc(sizeof(double) * MAXN * 16); // 4*4\n    d = (double *)malloc(sizeof(double) * MAXN * 16); // 4*4\n    memset(c, 0, sizeof(double) * MAXN * 16);\n    memset(d, 0, sizeof(double) * MAXN * 16);\n    for (int i = 0; i &lt; MAXN * 48; i++)  //initialize\n    {\n        *(a + i) = 1.0 / (rand() + 1);\n        *(b + i) = 1.0 / (rand() + 1);\n    }\n\n    printf(\"Raw computing\\n\");\n    auto start = std::chrono::high_resolution_clock::now();  //timing\n    for (int n = 0; n &lt; MAXN; n++)  //MAXN times\n    {\n        for (int k = 0; k &lt; 4; k++)\n        {\n            for (int i = 0; i &lt; 4; i++)\n            {\n                for (int j = 0; j &lt; 12; j++)\n                {\n                    *(c + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n                }\n            }\n        }\n    }\n    auto end = std::chrono::high_resolution_clock::now();\n\n    double time1 = std::chrono::duration&lt;double&gt;(end - start).count();\n\n    printf(\"New computing\\n\");\n    start = std::chrono::high_resolution_clock::now();\n    for (int n = 0; n &lt; MAXN; n++)\n    {\n        /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n        // -----------------------------------\n        // for (int k = 0; k &lt; 4; k++)\n        // {\n        //     for (int i = 0; i &lt; 4; i++)\n        //     {\n        //         for (int j = 0; j &lt; 12; j++)\n        //         {\n        //             *(d + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n        //         }\n        //     }\n        // }\n        double *a_ptr = a + n * 48, *b_ptr = b + n * 48;\n        double *d_ptr = d + n * 16;\n        int k;\n        double *a_ptr_0,*a_ptr_1,*a_ptr_2,*a_ptr_3;\n        a_ptr_0=&amp;a_ptr[0*12+0];\n        a_ptr_1=&amp;a_ptr[1*12+0];\n        a_ptr_2=&amp;a_ptr[2*12+0];\n        a_ptr_3=&amp;a_ptr[3*12+0];\n\n        __m256d c_sum_0 = _mm256_setzero_pd();  \n        __m256d c_sum_1 = _mm256_setzero_pd();  \n        __m256d c_sum_2 = _mm256_setzero_pd();  \n        __m256d c_sum_3 = _mm256_setzero_pd(); \n\n        double a_reg_0,a_reg_1,a_reg_2,a_reg_3;\n\n        for (k = 0; k &lt; 12;k++){\n            a_reg_0 = *(a_ptr_0++);\n            a_reg_1 = *(a_ptr_1++);\n            a_reg_2 = *(a_ptr_2++);\n            a_reg_3 = *(a_ptr_3++);\n\n            __m256d b_reg = _mm256_loadu_pd(&amp;b_ptr[k * 4 + 0]);\n\n            __m256d a_vec_0 = _mm256_set1_pd(a_reg_0);\n            c_sum_0 = _mm256_fmadd_pd(a_vec_0, b_reg,c_sum_0);\n            __m256d a_vec_1 = _mm256_set1_pd(a_reg_1);\n            c_sum_1 = _mm256_fmadd_pd(a_vec_1, b_reg,c_sum_1);\n            __m256d a_vec_2 = _mm256_set1_pd(a_reg_2);\n            c_sum_2 = _mm256_fmadd_pd(a_vec_2, b_reg,c_sum_2);\n            __m256d a_vec_3 = _mm256_set1_pd(a_reg_3);\n            c_sum_3 = _mm256_fmadd_pd(a_vec_3, b_reg,c_sum_3);\n\n        }\n\n        _mm256_storeu_pd(d_ptr, c_sum_0);\n        _mm256_storeu_pd(d_ptr+4, c_sum_1);\n        _mm256_storeu_pd(d_ptr+8, c_sum_2);\n        _mm256_storeu_pd(d_ptr+12, c_sum_3);\n\n        // -----------------------------------\n\n    }\n    end = std::chrono::high_resolution_clock::now();\n\n    double time2 = std::chrono::duration&lt;double&gt;(end - start).count();\n    printf(\"raw time=%lfs\\nnew time=%lfs\\nspeed up:%lfx\\nChecking\\n\", time1, time2, time1 / time2);\n\n    for (int i = 0; i &lt; MAXN * 16; i++)\n    {\n        if (fabs(c[i] - d[i]) / d[i] &gt; 0.0001)\n        {\n            printf(\"Check Failed at %d\\n\", i);\n            return 0;\n        }\n    }\n    printf(\"Check Passed\\n\");\n}\n</code></pre></p> <p>\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c4\u7684SIMD\uff0c\u5728\u4e0d\u4f7f\u7528\u7f16\u8bd1\u5668\u4f18\u5316\u9009\u9879\u7684\u60c5\u51b5\u4e0b\uff0c\u9996\u6b21\u7f16\u8bd1\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b  </p> <pre><code>g++ multi_pro.cpp -mavx2 -mfma -o multi_pro  \n./multi_pro.exe  \n</code></pre> <p> </p> <p>\u591a\u6b21\u8fd0\u884c\u540e\u52a0\u901f\u6bd4\u57fa\u672c\u7a33\u5b9a\u57282x\u4e0a\u4e0b  </p> <p> </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#43-godbolt","title":"4.3 godbolt","text":"<p>godbolt \u662f\u4e00\u6b3e\u57fa\u4e8e web \u7684\u7814\u7a76\u4e0d\u540c\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801\u7684\u5de5\u5177\uff0c\u501f\u52a9\u5b83\u6211\u4eec\u53ef\u4ee5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 </p> <p>\u8fd9\u4e2a\u5728\u7ebf\u5de5\u5177\u5176\u5b9e\u5c31\u662f\u628a\u4ee3\u7801\u8f6c\u6362\u6210\u6c47\u7f16\u8bed\u8a00\uff08\u7136\u9e45\u6211\u5bf9\u6c47\u7f16\u662f\u5b8c\u5168\u4e0d\u4f1a\u7684\uff09\u3002\u5feb\u901f\u5b66\u4e60\u6c47\u7f16\uff0c\u627e\u4e86\u4e00\u7bc7CSND </p> <p>\u4f7f\u7528\u7f16\u8bd1\uff1a<code>x86-64 gcc 14.1</code>   \u7f16\u8bd1\u9009\u9879\uff1a<code>-mavx2 -mfma</code> </p> <p><code>for</code> \u5faa\u73af\u5b9e\u73b0\u7684\u6c47\u7f16\u4ee3\u7801</p> <pre><code>        mov     DWORD PTR [rbp-24], 0  //\u5c06\u7acb\u5373\u6570\uff08immediate value\uff090\u79fb\u52a8\u5230\uff08mov\uff09\u4e00\u4e2a\u7531rbp\uff08\u57fa\u6307\u9488\u5bc4\u5b58\u5668\uff09\u51cf\u53bb28\u4e2a\u5b57\u8282\u6240\u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\u3002\u8fd9\u91cc\u7684DWORD PTR\u8868\u793a\u64cd\u4f5c\u7684\u662f\u53cc\u5b57\uff08Double Word\uff09\u5927\u5c0f\u7684\u6570\u636e\uff0c\u537332\u4f4d\uff084\u5b57\u8282\uff09\u7684\u6574\u6570\u3002\u56e0\u6b64\uff0c\u8fd9\u884c\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5c06\u6808\u4e0a\u7684\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u8bbe\u7f6e\u4e3a0\uff0c\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u76f8\u5bf9\u4e8erbp\u7684\u504f\u79fb\u91cf\u662f-28\n        jmp     .L11  //\u65e0\u6761\u4ef6\u8df3\u8f6c\uff08jmp\uff09\u5230\u6807\u7b7e.L12\u6240\u6807\u8bb0\u7684\u4ee3\u7801\u4f4d\u7f6e(.L12\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e9999999)\n.L18:\n        mov     DWORD PTR [rbp-28], 0  //\u4e00\u4e2aDouble\u9700\u89814\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u5185\u5b58\u4f4d\u7f6e\u5dee4\n        jmp     .L12\n.L17:\n        mov     DWORD PTR [rbp-32], 0\n        jmp     .L13\n.L16:\n        mov     DWORD PTR [rbp-36], 0\n        jmp     .L14\n.L15:\n        mov     rax, QWORD PTR c[rip]  //\u4ecerip\uff08\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668\uff09\u76f8\u5bf9\u504f\u79fb\u5904\u52a0\u8f7d\u4e00\u4e2a64\u4f4d\uff08QWORD\uff09\u6307\u9488\u5230rax\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6570\u7ec4c\u7684\u57fa\u5730\u5740\n        mov     edx, DWORD PTR [rbp-24]  //\u4ece\u6808\u4e0a\uff08\u76f8\u5bf9\u4e8erbp\u7684\u504f\u79fb\uff09\u8bfb\u53d6\u4e09\u4e2a32\u4f4d\uff08DWORD\uff09\u6574\u6570\uff0c\u5206\u522b\u5b58\u50a8\u5728rbp-24\u3001rbp-32\u3001rbp-28\n        //\u8fd9\u4e9b\u6574\u6570\u8fdb\u884c\u4f4d\u79fb\uff08\u5de6\u79fb\uff0c\u76f8\u5f53\u4e8e\u4e58\u4ee52\u7684\u5e42\uff09\u548c\u7d2f\u52a0\u64cd\u4f5c\uff0c\u4ee5\u8ba1\u7b97\u51fa\u4e00\u4e2a\u7d22\u5f15\n        sal     edx, 4  //\u4f4d\u79fb\n        movsx   rcx, edx  //\u5e26\u7b26\u53f7\u6269\u5c55\n        mov     edx, DWORD PTR [rbp-32]\n        sal     edx, 2\n        movsx   rdx, edx\n        add     rcx, rdx  //\u7d2f\u52a0\n        mov     edx, DWORD PTR [rbp-28]\n        movsx   rdx, edx\n        add     rdx, rcx\n        sal     rdx, 3\n        add     rax, rdx\n        vmovsd  xmm1, QWORD PTR [rax]  //\u4f7f\u7528\u8fd9\u4e2a\u7d22\u5f15\u52a0\u4e0arax\u4e2d\u7684\u57fa\u5730\u5740\uff0c\u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u4ece\u8be5\u5730\u5740\u52a0\u8f7d\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0864\u4f4d\uff0cQWORD\uff09\u5230xmm1\n        mov     rcx, QWORD PTR a[rip]\n        mov     edx, DWORD PTR [rbp-24]\n        mov     eax, edx\n        add     eax, eax\n        add     eax, edx\n        sal     eax, 4\n        movsx   rsi, eax\n        mov     edx, DWORD PTR [rbp-32]\n        mov     eax, edx\n        add     eax, eax\n        add     eax, edx\n        sal     eax, 2\n        cdqe  //\u5c0632\u4f4d\u5bc4\u5b58\u5668\uff08\u5982eax\uff09\u7684\u503c\u7b26\u53f7\u6269\u5c55\u523064\u4f4d\u5bc4\u5b58\u5668\uff08\u5982rax\uff09\n        lea     rdx, [rsi+rax]  //\u8ba1\u7b97rsi\u548crax\u4e24\u4e2a\u5bc4\u5b58\u5668\u503c\u7684\u548c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728rdx\u5bc4\u5b58\u5668\u4e2d\n        mov     eax, DWORD PTR [rbp-36]\n        cdqe\n        add     rax, rdx\n        sal     rax, 3\n        add     rax, rcx\n        vmovsd  xmm2, QWORD PTR [rax]\n        mov     rcx, QWORD PTR b[rip]\n        mov     edx, DWORD PTR [rbp-24]\n        mov     eax, edx\n        add     eax, eax\n        add     eax, edx\n        sal     eax, 4\n        movsx   rdx, eax\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 2\n        cdqe\n        add     rdx, rax\n        mov     eax, DWORD PTR [rbp-28]\n        cdqe\n        add     rax, rdx\n        sal     rax, 3\n        add     rax, rcx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmulsd  xmm0, xmm2, xmm0  //\u6267\u884c\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u4e58\u6cd5\u64cd\u4f5c\u3002\u5b83\u5c06xmm2\u5bc4\u5b58\u5668\u548cxmm0\u5bc4\u5b58\u5668\u4e2d\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u56dexmm0\u5bc4\u5b58\u5668\u4e2d\n        mov     rax, QWORD PTR c[rip]\n        mov     edx, DWORD PTR [rbp-24]\n        sal     edx, 4\n        movsx   rcx, edx\n        mov     edx, DWORD PTR [rbp-32]\n        sal     edx, 2\n        movsx   rdx, edx\n        add     rcx, rdx\n        mov     edx, DWORD PTR [rbp-28]\n        movsx   rdx, edx\n        add     rdx, rcx\n        sal     rdx, 3\n        add     rax, rdx\n        vaddsd  xmm0, xmm1, xmm0\n        vmovsd  QWORD PTR [rax], xmm0\n        add     DWORD PTR [rbp-36], 1  //\u5faa\u73af\u53d8\u91cf\u7d2f\u52a0\n.L14:\n        cmp     DWORD PTR [rbp-36], 11  //\u5224\u65ad\u5faa\u73af\u662f\u5426\u7ed3\u675f\n        jle     .L15\n        add     DWORD PTR [rbp-32], 1\n.L13:\n        cmp     DWORD PTR [rbp-32], 3\n        jle     .L16\n        add     DWORD PTR [rbp-28], 1\n.L12:\n        cmp     DWORD PTR [rbp-28], 3\n        jle     .L17\n        add     DWORD PTR [rbp-24], 1\n.L11:\n        cmp     DWORD PTR [rbp-24], 9999999\n        jle     .L18\n</code></pre> <p>AVX\u6307\u4ee4\u96c6\u5b9e\u73b0\u7684\u6c47\u7f16\u4ee3\u7801  </p> <pre><code>        mov     DWORD PTR [rbp-40], 0\n        jmp     .L19\n.L35:\n        mov     rcx, QWORD PTR a[rip]\n        mov     edx, DWORD PTR [rbp-40]\n        mov     eax, edx\n        add     eax, eax\n        add     eax, edx\n        sal     eax, 4\n        cdqe\n        sal     rax, 3\n        add     rax, rcx\n        mov     QWORD PTR [rbp-240], rax\n        mov     rcx, QWORD PTR b[rip]\n        mov     edx, DWORD PTR [rbp-40]\n        mov     eax, edx\n        add     eax, eax\n        add     eax, edx\n        sal     eax, 4\n        cdqe\n        sal     rax, 3\n        add     rax, rcx\n        mov     QWORD PTR [rbp-248], rax\n        mov     rax, QWORD PTR d[rip]\n        mov     edx, DWORD PTR [rbp-40]\n        sal     edx, 4\n        movsx   rdx, edx\n        sal     rdx, 3\n        add     rax, rdx\n        mov     QWORD PTR [rbp-256], rax\n        mov     rax, QWORD PTR [rbp-240]\n        mov     QWORD PTR [rbp-56], rax\n        mov     rax, QWORD PTR [rbp-240]\n        add     rax, 96\n        mov     QWORD PTR [rbp-64], rax\n        mov     rax, QWORD PTR [rbp-240]\n        add     rax, 192\n        mov     QWORD PTR [rbp-72], rax\n        mov     rax, QWORD PTR [rbp-240]\n        add     rax, 288\n        mov     QWORD PTR [rbp-80], rax\n        vxorpd  xmm0, xmm0, xmm0  //\u5bf9\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6267\u884c\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09\u64cd\u4f5c\u3002\u4e0d\u8fc7\uff0c\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u6e90\u64cd\u4f5c\u6570\u548c\u76ee\u6807\u64cd\u4f5c\u6570\u90fd\u662f\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\uff08xmm0\uff09\uff0c\u8fd9\u6761\u6307\u4ee4\u7684\u6548\u679c\u5b9e\u9645\u4e0a\u662f\u5c06xmm0\u5bc4\u5b58\u5668\u4e2d\u7684\u6240\u6709\u4f4d\u90fd\u8bbe\u7f6e\u4e3a0\u3002\n        vmovapd YMMWORD PTR [rbp-112], ymm0  //\u5c06ymm0\u5bc4\u5b58\u5668\u4e2d\u5b58\u50a8\u7684256\u4f4d\uff0832\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u79fb\u52a8\u5230\u7531rbp-112\u6307\u5b9a\u7684\u5185\u5b58\u5730\u5740\u5904\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-144], ymm0\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-176], ymm0\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-208], ymm0\n        mov     DWORD PTR [rbp-44], 0\n        jmp     .L24\n.L34:\n        mov     rax, QWORD PTR [rbp-56]\n        lea     rdx, [rax+8]\n        mov     QWORD PTR [rbp-56], rdx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmovsd  QWORD PTR [rbp-264], xmm0\n        mov     rax, QWORD PTR [rbp-64]\n        lea     rdx, [rax+8]\n        mov     QWORD PTR [rbp-64], rdx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmovsd  QWORD PTR [rbp-272], xmm0\n        mov     rax, QWORD PTR [rbp-72]\n        lea     rdx, [rax+8]\n        mov     QWORD PTR [rbp-72], rdx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmovsd  QWORD PTR [rbp-280], xmm0\n        mov     rax, QWORD PTR [rbp-80]\n        lea     rdx, [rax+8]\n        mov     QWORD PTR [rbp-80], rdx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmovsd  QWORD PTR [rbp-288], xmm0\n        mov     eax, DWORD PTR [rbp-44]\n        sal     eax, 2\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-248]\n        add     rax, rdx\n        mov     QWORD PTR [rbp-960], rax\n        mov     rax, QWORD PTR [rbp-960]\n        vmovupd ymm0, YMMWORD PTR [rax]  //\u4ecerax\u6307\u5411\u7684\u5730\u5740\u52a0\u8f7d256\u4f4d\uff0832\u5b57\u8282\uff09\u7684\u672a\u5bf9\u9f50\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5230ymm0\u5bc4\u5b58\u5668\u3002\n        vmovapd YMMWORD PTR [rbp-336], ymm0  //\u5c06ymm0\u5bc4\u5b58\u5668\u4e2d\u7684256\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5b58\u50a8\u5230\u6808\u4e0a\u7684rbp-336\u4f4d\u7f6e\n        vmovsd  xmm0, QWORD PTR [rbp-264]  //\u4ece\u6808\u4e0a\u7684rbp-264\u4f4d\u7f6e\u52a0\u8f7d\u4e00\u4e2a64\u4f4d\uff088\u5b57\u8282\uff09\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u5230xmm0\u5bc4\u5b58\u5668\u7684\u4f4e64\u4f4d\u3002\n        vmovsd  QWORD PTR [rbp-952], xmm0  //\u5c06xmm0\u5bc4\u5b58\u5668\u4e2d\u768464\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5b58\u50a8\u5230\u6808\u4e0a\u7684rbp-952\u4f4d\u7f6e\n        vbroadcastsd    ymm0, QWORD PTR [rbp-952]\n        vmovapd YMMWORD PTR [rbp-368], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-368]\n        vmovapd YMMWORD PTR [rbp-880], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-336]\n        vmovapd YMMWORD PTR [rbp-912], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-112]\n        vmovapd YMMWORD PTR [rbp-944], ymm0\n        vmovapd ymm1, YMMWORD PTR [rbp-912]\n        vmovapd ymm0, YMMWORD PTR [rbp-944]\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-880]  //\u6267\u884c\u4e00\u4e2a\u4e09\u64cd\u4f5c\u6570\u7684\u6d6e\u70b9\u4e58\u6cd5\u52a0\u6cd5\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u5c06ymm1\u5bc4\u5b58\u5668\u4e2d\u7684\u6bcf\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4e0erbp-880\u5730\u5740\u5904\u7684\u76f8\u5e94\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u7136\u540e\u5c06\u4e58\u79ef\u52a0\u5230ymm0\u5bc4\u5b58\u5668\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4e0a\n        nop\n        vmovapd YMMWORD PTR [rbp-112], ymm0  \n        vmovsd  xmm0, QWORD PTR [rbp-272]\n        vmovsd  QWORD PTR [rbp-824], xmm0\n        vbroadcastsd    ymm0, QWORD PTR [rbp-824]\n        vmovapd YMMWORD PTR [rbp-400], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-400]\n        vmovapd YMMWORD PTR [rbp-752], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-336]\n        vmovapd YMMWORD PTR [rbp-784], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-144]\n        vmovapd YMMWORD PTR [rbp-816], ymm0\n        vmovapd ymm1, YMMWORD PTR [rbp-784]\n        vmovapd ymm0, YMMWORD PTR [rbp-816]\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-752]\n        nop\n        vmovapd YMMWORD PTR [rbp-144], ymm0\n        vmovsd  xmm0, QWORD PTR [rbp-280]\n        vmovsd  QWORD PTR [rbp-696], xmm0\n        vbroadcastsd    ymm0, QWORD PTR [rbp-696]\n        vmovapd YMMWORD PTR [rbp-432], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-432]\n        vmovapd YMMWORD PTR [rbp-624], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-336]\n        vmovapd YMMWORD PTR [rbp-656], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-176]\n        vmovapd YMMWORD PTR [rbp-688], ymm0\n        vmovapd ymm1, YMMWORD PTR [rbp-656]\n        vmovapd ymm0, YMMWORD PTR [rbp-688]\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-624]\n        nop\n        vmovapd YMMWORD PTR [rbp-176], ymm0\n        vmovsd  xmm0, QWORD PTR [rbp-288]\n        vmovsd  QWORD PTR [rbp-568], xmm0\n        vbroadcastsd    ymm0, QWORD PTR [rbp-568]\n        vmovapd YMMWORD PTR [rbp-464], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-464]\n        vmovapd YMMWORD PTR [rbp-496], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-336]\n        vmovapd YMMWORD PTR [rbp-528], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-208]\n        vmovapd YMMWORD PTR [rbp-560], ymm0\n        vmovapd ymm1, YMMWORD PTR [rbp-528]\n        vmovapd ymm0, YMMWORD PTR [rbp-560]\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-496]\n        nop\n        vmovapd YMMWORD PTR [rbp-208], ymm0\n        add     DWORD PTR [rbp-44], 1\n.L24:\n        cmp     DWORD PTR [rbp-44], 11\n        jle     .L34\n        mov     rax, QWORD PTR [rbp-256]\n        mov     QWORD PTR [rbp-1144], rax\n        vmovapd ymm0, YMMWORD PTR [rbp-112]\n        vmovapd YMMWORD PTR [rbp-1200], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-1200]\n        mov     rax, QWORD PTR [rbp-1144]\n        vmovupd YMMWORD PTR [rax], ymm0\n        nop\n        mov     rax, QWORD PTR [rbp-256]\n        add     rax, 32\n        mov     QWORD PTR [rbp-1080], rax\n        vmovapd ymm0, YMMWORD PTR [rbp-144]\n        vmovapd YMMWORD PTR [rbp-1136], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-1136]\n        mov     rax, QWORD PTR [rbp-1080]\n        vmovupd YMMWORD PTR [rax], ymm0\n        nop\n        mov     rax, QWORD PTR [rbp-256]\n        add     rax, 64\n        mov     QWORD PTR [rbp-1016], rax\n        vmovapd ymm0, YMMWORD PTR [rbp-176]\n        vmovapd YMMWORD PTR [rbp-1072], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-1072]\n        mov     rax, QWORD PTR [rbp-1016]\n        vmovupd YMMWORD PTR [rax], ymm0\n        nop\n        mov     rax, QWORD PTR [rbp-256]\n        add     rax, 96\n        mov     QWORD PTR [rbp-968], rax\n        vmovapd ymm0, YMMWORD PTR [rbp-208]\n        vmovapd YMMWORD PTR [rbp-1008], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-1008]\n        mov     rax, QWORD PTR [rbp-968]\n        vmovupd YMMWORD PTR [rax], ymm0\n        nop\n        add     DWORD PTR [rbp-40], 1\n.L19:\n        cmp     DWORD PTR [rbp-40], 9999999\n        jle     .L35\n</code></pre> <p>\u5176\u5b9e\u611f\u89c9\u4e5f\u770b\u4e0d\u51fa\u4ec0\u4e48\u4e1c\u897f\u6765\u3002<code>for</code> \u5faa\u73af\u7684\u5b9e\u73b0\u4e2d <pre><code>*(c + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n</code></pre> \u6c47\u7f16\u4ee3\u7801\u4f1a\u5f88\u590d\u6742\uff0c\u5148\u628an,i,j,k\u53d6\u51fa\u6765\uff0c\u79fb\u4f4d\uff0c\u7b97\u7d22\u5f15\uff0c\u53d6\u6570\u636e\uff0c\u76f8\u4e58\uff0c\u7d2f\u52a0\uff1b AVX\u7684\u5b9e\u73b0\u4e2d\u5c06\u539f\u6765\u7684\u56db\u4e2a <code>for</code> \u5faa\u73af\u51cf\u5c11\u5230\u4e86\u4e24\u4e2a\uff0c\u4f7f\u7528AVX\u6307\u4ee4\u96c6\u540e\u5411\u91cf\u8fd0\u7b97\u4e5f\u6bd4\u8f83\u7b80\u6d01\uff0c\u4f46\u662f\u5411\u91cf\u8fd0\u7b97\u524d\u540e\u7684load\u548c\u91cd\u65b0\u5199\u5165\u5185\u5b58\u7684\u5f00\u9500\u660e\u663e\u66f4\u591a\uff0c\u5bf9\u5185\u5b58\u7684\u8bfb\u5199\u5e94\u8be5\u662f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#lab5","title":"Lab5 \u7b80\u5355\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f","text":"<ul> <li> Transformer \u6a21\u578b\u7684\u8bad\u7ec3  </li> </ul>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#_1","title":"\u5b9e\u9a8c\u4ecb\u7ecd","text":"<p>\u6df1\u5ea6\u5b66\u4e60\uff08Deep Learning\uff09 \u662f\u673a\u5668\u5b66\u4e60\u7684\u5206\u652f\uff0c\u662f\u4e00\u79cd\u4ee5\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e3a\u67b6\u6784\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u8868\u5f81\u5b66\u4e60\u7684\u7b97\u6cd5\u3002\u5176\u4e2d\uff0c\u7f51\u7edc\u7684\u8bad\u7ec3\u8fc7\u7a0b\u5bf9\u7b97\u529b\u7684\u8981\u6c42\u5de8\u5927\uff0c\u4e5f\u56e0\u6b64\u6210\u4e3a HPC \u9886\u57df\u7ecf\u5e38\u7814\u7a76\u7684\u8bdd\u9898\u3002  </p> <p>\u6ce8\u610f\u529b\u673a\u5236\uff08Self-Attention\uff09 \u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u4e00\u79cd\u7f51\u7edc\u7ed3\u6784\uff0c\u4e5f\u662f Transformer \u67b6\u6784\u4e2d\u7684\u6838\u5fc3\u90e8\u5206\u3002</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u96c6\u7fa4\u63d0\u4f9b\u4e24\u5f20 A100 40G\uff0c\u4e00\u5f20 A100 80G \u548c\u4e24\u5f20 2080ti \u663e\u5361\u3002  </p> <p>\u65b0\u5efa\u4e00\u4e2a python \u7248\u672c\u4e3a 3.12 \u7684\u7a7a\u73af\u5883\uff0c\u5e76\u4f7f\u7528 <code>pip install -r requirements.txt</code> \u5b89\u88c5\u6240\u5fc5\u987b\u7684\u5305\u3002  </p> <pre><code>conda create -n mytorch python=3.12\npip install -r requirements.txt  \n</code></pre> <pre><code># requirements.txt\naiohttp==3.9.5\naiosignal==1.3.1\nattrs==23.2.0\ncertifi==2024.7.4\ncharset-normalizer==3.3.2\nclick==8.1.7\ndatasets==2.20.0\ndill==0.3.8\ndocutils==0.21.2\nfilelock==3.15.4\nfrozenlist==1.4.1\nfsspec==2024.5.0\nhuggingface-hub==0.23.4\nidna==3.7\nJinja2==3.1.4\njoblib==1.4.2\nMarkupSafe==2.1.5\nmpmath==1.3.0\nmultidict==6.0.5\nmultiprocess==0.70.16\nnetworkx==3.3\nnltk==3.8.1\nnumpy==1.26.4\nnvidia-cublas-cu12==12.1.3.1\nnvidia-cuda-cupti-cu12==12.1.105\nnvidia-cuda-nvrtc-cu12==12.1.105\nnvidia-cuda-runtime-cu12==12.1.105\nnvidia-cudnn-cu12==8.9.2.26\nnvidia-cufft-cu12==11.0.2.54\nnvidia-curand-cu12==10.3.2.106\nnvidia-cusolver-cu12==11.4.5.107\nnvidia-cusparse-cu12==12.1.0.106\nnvidia-nccl-cu12==2.20.5\nnvidia-nvjitlink-cu12==12.5.82\nnvidia-nvtx-cu12==12.1.105\npackaging==24.1\npandas==2.2.2\npillow==10.4.0\npyarrow==16.1.0\npyarrow-hotfix==0.6\npython-dateutil==2.9.0.post0\npytz==2024.1\nPyYAML==6.0.1\nregex==2024.5.15\nrequests==2.32.3\nsafetensors==0.4.3\nsix==1.16.0\nsympy==1.13.0\ntokenizers==0.19.1\ntorch==2.3.1\ntorchaudio==2.3.1\ntorchvision==0.18.1\ntqdm==4.66.4\ntransformers==4.42.3\ntriton==2.3.1\ntyping_extensions==4.12.2\ntzdata==2024.1\nurllib3==2.2.2\nxxhash==3.4.1\nyarl==1.9.4\n</code></pre> <p>\u8fd9\u91cc\u6211\u91cd\u88c5\u4e86\u4e00\u53f0 Ubuntu \u865a\u62df\u673a\uff0c\u5728\u8fd9\u4e2a\u5f88\u5e72\u51c0\u7684\u7cfb\u7edf\u4e0a\u88c5\u4e86 VS Code \u548c Ananconda\u3002\u63a5\u7740\u5728 VS Code \u4e2d\u4f7f\u7528 conda \u914d\u7f6e Python \u865a\u62df\u73af\u5883\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 CSDN\u3002  </p> <p>\u8fd9\u91cc\u4e0b\u8f7d\u5305\u7528\u7684\u662f\u6e05\u534e\u6e90\uff0c\u603b\u4f53\u6548\u679c\u975e\u5e38\u597d  </p> <p> </p> <p>\u7136\u540e\u5728\u865a\u62df\u673a\u4e0a\u914d\u7f6e SSH \u8fde\u63a5\u5230 ZJUSCT \u7684\u96c6\u7fa4\u3002\u5728\u4f7f\u7528 Terminal \u6210\u529f ping \u901a\u540e\u53c8\u5c1d\u8bd5\u4e86\u5728 VS Code \u4e2d\u7528 Remote-SSH\u3002\u5982\u679c\u662f Terminal \u76f4\u63a5\u8fde\u63a5\u7684\u8bdd\u53ea\u8981\u628a\u7aef\u53e3\u8bbe\u7f6e\u4e3a <code>-p 443</code> \u5373\u53ef\uff1b\u5982\u679c\u662f\u7528 Remote-SSH \u9700\u8981\u6302\u4e0a\u6d59\u5927\u7684 RVPN\uff08\u770b98\u4e0a\u8bf4\u9ed8\u8ba4\u768422\u7aef\u53e3\u88ab\u5c01\u4f4f\u4e86\uff0c\u5e94\u8be5\u662f\u4e5f\u5fc5\u987b\u4ece443\u7aef\u53e3\u8fde\u63a5\uff0c\u4e0d\u8fc7\u6211\u6ca1\u6709\u8bd5\u9a8c\uff09\u3002  </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#_3","title":"\u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6","text":"<p>\u8fd9\u4e2a\u5b9e\u9a8c\u672c\u8d28\u5c31\u662f\u5728\u590d\u73b0\u90a3\u7bc7\u8457\u540d\u7684\u6587\u7ae0 Attention Is All You Need \u4e2d\u57fa\u4e8e Transformer \u67b6\u6784\u7684\u673a\u5668\u7ffb\u8bd1\u3002\u90a3\u4e48\u9996\u5148\u5c31\u8981\u7406\u89e3 Transformer \u67b6\u6784\u3002  </p> <p>\u5bf9 Transformer \u5f62\u6210\u4e00\u4e2a\u6846\u67b6\u53ef\u4ee5\u770bb\u7ad9\u89c6\u9891\uff0c\u63a5\u7740\u770b 3Blue1Brown \u53ef\u89c6\u5316 Transformer \u7684\u4e24\u4e2a\u89c6\u9891\u3002</p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#model-architecture","title":"Model Architecture","text":""},{"location":"HPC%20101/Lab%20Notebook/notebook/#attention","title":"Attention","text":"<p>An attention function can be described as mapping a query and a set of key-value pairs to an output, where the query, keys, values, and output are all vectors. The output is computed as a weighted sum of the values, where the weight assigned to each value is computed by a compatibility function of the query with the corresponding key.  </p> <p> </p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#embeddings-and-softmax","title":"Embeddings and Softmax","text":"<p>Similarly to other sequence transduction models, we use learned embeddings to convert the input tokens and output tokens to vectors of dimension d<sub>model</sub> . We also use the usual learned linear transformation and softmax function to convert the decoder output to predicted next-token probabilities. In our model, we share the same weight matrix between the two embedding layers and the pre-softmax linear transformation. In the embedding layers, we multiply those weights by \\(\\sqrt{d~model~}\\).   </p> <p></p> <pre><code>class InputEmbeddings(nn.Module):\n\n    def __init__(self, d_model: int, vocab_size: int):\n        super().__init__()\n        self.d_model = d_model\n        self.vocab_size = vocab_size\n        self.embedding = nn.Embedding(vocab_size, d_model)\n        # \"nn.Embedding\" is a class in Pytorch to \"convert the input tokens and output tokens to vectors of dimension d_model\"\n\n    def forward(self, x):\n        return self.embedding(x) * math.sqrt(self.d_model)\n</code></pre> <pre><code>class ProjectionLayer(nn.Module):\n\n    def __init__(self, d_model: int, vocab_size: int) -&gt; None:\n        super().__init__()\n        self.proj = nn.Linear(d_model, vocab_size)\n\n    def forward(self, x):\n        # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, vocab_size&gt;\n        return torch.log_softmax(self.proj(x), dim = -1)\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#positional-encoding","title":"Positional Encoding","text":"<p>Since our model contains no recurrence and no convolution, in order for the model to make use of the order of the sequence, we must inject some information about the relative or absolute position of the tokens in the sequence. To this end, we add \"positional encodings\" to the input embeddings at the bottoms of the encoder and decoder stacks. The positional encodings have the same dimension d<sub>model</sub> as the embeddings, so that the two can be summed. There are many choices of positional encodings, learned and fixed [9].  </p> <p>In this work, we use sine and cosine functions of different frequencie:  </p> <p> </p> <p>We chose this function because we hypothesized it would allow the model to easily learn to attend by relative positions, since for any fixed offset k, PE<sub>pos+k</sub> can be represented as a linear function of PEpos.  </p> <p> </p> <pre><code>class PositionalEncoding(nn.Module):\n\n    def __init__(self, d_model: int, seq_len: int, dropout: float) -&gt; None:\n        super().__init__()\n        self.d_model = d_model\n        self.seq_len = seq_len\n        # Reduce overfitting of neural networks\n        self.dropout = nn.Dropout(dropout)\n\n        # Create a matrix of shape &lt;seq_len, d_model&gt;  \n        pe = torch.zeros(seq_len, d_model)\n        # Create a vector of shape &lt;seq_len, 1&gt;\n        position = torch.arange(0, seq_len, dtype = torch.float).unsqueeze(1)\n        div_term = torch.exp(torch.arange(0, d_model, 2).float() * (-math.log(10000.0) / d_model))\n        # Apply the sin to even position\n        pe[:, 0::2] = torch.sin(position * div_term)\n        # Apply the cos to odd position\n        pe[:, 1::2] = torch.cos(position * div_term)\n        # Use the equivalent form of the original formula\n\n        # Add a new dimension \"batch\" to deal with a batch of sentences\n        pe = pe.unsqueeze(0) # &lt;1, seq_len, d_model&gt;  \n\n        # Register a given tensor or any other object as a buffer for the model\n        # It will be saved and loaded along with the model\n        self.register_buffer('pe', pe)\n\n    def forward(self, x):\n        x = x + (self.pe[:, :x.shape[1], :]).requires_grad_(False)\n        return self.dropout(x)\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#add-norm","title":"Add &amp; Norm","text":"<p>For each item of a batch, we calculate a mean value and a variance independently, and then calculating the new value for each of them using their own mean value and their own variance.  </p> <p> </p> <p>We also introduce two parameters, usually called gamma(multiplicative) and beta(additive) that introduce some fluctuations in the data, because maybe having all values between 0 and 1 may be too restrictive for the introduce fluctuations when necessary.   </p> <p></p> <pre><code>class LayerNormalization(nn.Module):\n\n    def __init__(self, eps:float = 1e-6) -&gt; None:\n        super().__init__()\n        # In case \"sigma = 0\" or sigma being extremely small\n        self.eps = eps\n        # Register as model parameters, which means that these tensors will be updated during the training of the model (learnable)\n        self.alpha = nn.Parameter(torch.ones(1)) # multiplicative\n        self.bias = nn.Parameter(torch.zeros(1)) # additive  \n\n    def forward(self, x):\n        mean = x.mean(dim = -1, keepdim = True)\n        std = x.std(dim = -1, keepdim = True)\n        return self.alpha * (x - mean) / (std + self.eps) + self.bias\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#position-wise-feed-forward-networks","title":"Position-wise Feed-Forward Networks","text":"<p>In addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully connected feed-forward network, which is applied to each position separately and identically. This consists of two linear transformations with a ReLU(Rectified Linear Unit) activation in between.  </p> <p> </p> <p>While the linear transformations are the same across different positions, they use different parameters from layer to layer. Another way of describing this is as two convolutions with kernel size 1. The dimensionality of input and output is d<sub>model</sub> = 512, and the inner-layer has dimensionality d<sub>ff</sub> = 2048.  </p> <p> </p> <pre><code>class FeedForwardBlock(nn.Module):\n\n    def __init__(self, d_model:int, d_ff:int, dropout:float) -&gt; None:\n        super().__init__()\n        # W1 &amp; B1\n        self.linear_1 = nn.Linear(d_model, d_ff) # \"bias:bool = True\" is the default\n        self.dropout = nn.Dropout(dropout)\n        # W2 &amp; B2\n        self.linear_2 = nn.Linear(d_ff, d_model)\n\n    def forward(self, x):\n        # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, d_ff&gt; --&gt; &lt;batch, seq_len, d_model&gt;  \n        return self.linear_2(self.dropout(torch.relu(self.linear_1(x))))\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#multi-head-attention","title":"Multi-Head Attention","text":"<p>Instead of performing a single attention function with d<sub>model</sub>-dimensional keys, values and queries, we found it beneficial to linearly project the queries, keys and values h times with different, learned linear projections to d<sub>k</sub>, d<sub>k</sub> and d<sub>v</sub> dimensions, respectively. On each of these projected versions of queries, keys and values we then perform the attention function in parallel, yielding d<sub>v</sub>-dimensional output values. These are concatenated and once again projected, resulting in the final value.  </p> <p>Multi-head attention allows the model to jointly attend to information from different representation subspaces at different positions. With a single attention head, averaging inhibits this.  </p> <p> </p> <p>Where the projections are parameter matrices W<sup>Q</sup> \u2208 R<sup>dmodel\u00d7dk</sup> , W<sup>K</sup> \u2208 R<sup>dmodel\u00d7dk</sup> , W<sup>V</sup> \u2208 R<sup>dmodel\u00d7dv</sup> and W<sup>O</sup> \u2208 R<sup>hdv\u00d7dmodel</sup>.  </p> <p>In this work we employ h = 8 parallel attention layers, or heads. For each of these we use d<sub>k</sub> = d<sub>v</sub> = d<sub>model</sub>/h = 64. Due to the reduced dimension of each head, the total computational cost is similar to that of single-head attention with full dimensionality.  </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>To sum up:  </p> <p> </p> <pre><code>class MultiHeadAttentionBlock(nn.Module):\n\n    def __init__(self, d_model: int, h: int, dropout: float) -&gt; None:\n        super().__init__()\n        self.d_model = d_model\n        self.h = h\n        assert d_model % h == 0, \"d_model is not divisible by h\"\n\n        self.d_k = d_model // h\n        self.w_q = nn.Linear(d_model, d_model) # wq\n        self.w_k = nn.Linear(d_model, d_model) # wk\n        self.w_v = nn.Linear(d_model, d_model) # wv\n\n        self.w_o = nn.Linear(d_model, d_model) # wo\n        self.dropout = nn.Dropout(dropout)\n\n    @staticmethod\n    def attention(query, key, value, mask, dropout: nn.Dropout):\n        d_k = query.shape[-1]\n\n        # &lt;batch, h, seq_len, d_k&gt; --&gt; &lt;batch, h, seq_len, seq_len&gt;\n        attention_scores = (query @ key.transpose(-2, -1) / math.sqrt(d_k))\n        if mask is not None:\n            attention_scores.mask_fill_(mask == 0, 1e-9)\n        attention_scores = attention_scores.softmax(dim = -1)\n        if dropout is not None:\n            attention_scores = dropout(attention_scores)\n\n        return (attention_scores @ value), attention_scores \n\n\n    def forward(self, q, k, v, mask):\n        # 1. dot product with weight matrices\n        query = self.w_q(q) # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, d_model&gt;\n        key = self.w_k(k) # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, d_model&gt;\n        value = self.w_v(v) # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, d_model&gt;\n\n        # 2. split tensor by number of heads\n        # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, h, d_k&gt; --&gt; &lt;batch, h, seq_len, d_k&gt;\n        query = query.view(query.shape[0], query.shape[1], self.h, self.d_k).transpose(1, 2)\n        key = key.view(query.shape[0], query.shape[1], self.h, self.d_k).transpose(1, 2)\n        value = value.view(query.shape[0], query.shape[1], self.h, self.d_k).transpose(1, 2)\n\n        x, self.attention_scores = MultiHeadAttentionBlock.attention(query, key, value, mask, self.dropout)\n\n        # &lt;batch, h, seq_len, d_k&gt; --&gt; &lt;batch, seq_len, h, d_k&gt; --&gt; &lt;batch, seq_len, d_model&gt;\n        x = x.transpose(1, 2).contiguous().view(x.shape[0], -1, self.h * self.d_k)\n\n        # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, d_model&gt;\n        return self.w_o(x)\n</code></pre> <p></p>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#encoder-stacks","title":"Encoder Stacks","text":"<p>The encoder is composed of a stack of N = 6 identical layers. Each layer has two sub-layers. The first is a multi-head self-attention mechanism, and the second is a simple, position-wise fully connected feed-forward network. We employ a residual connection around each of the two sub-layers, followed by layer normalization. That is, the output of each sub-layer is LayerNorm(x + Sublayer(x)), where Sublayer(x) is the function implemented by the sub-layer itself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding layers, produce outputs of dimension d<sub>model</sub> = 512.  </p> <pre><code>class ResidualConnection(nn.Module):\n\n    def __init__(self, dropout: float) -&gt; None:\n        super().__init__()\n        self.dropout = nn.Dropout(dropout)\n        self.norm = LayerNormalization()\n\n    def forward(self, x, sublayer):\n        return x + self.dropout(sublayer(self.norm(x)))\n</code></pre> <pre><code>class EncoderBlock(nn.Module):\n\n    def __init__(self, self_attention_block: MultiHeadAttentionBlock, feed_forward_block: FeedForwardBlock, dropout: float) -&gt; None:\n        super().__init__()\n        self.self_attention_block = self_attention_block\n        self.feed_forward_block = feed_forward_block\n        self.residual_connections = nn.ModuleList([ResidualConnection(dropout) for _ in range (2)])\n\n    def forward(self, x, src_mask):\n        x = self.residual_connections[0](x, lambda x: self.self_attention_block(x, x, x, src_mask))\n        x = self.residual_connections[1](x, self.feed_forward_block)\n\n        return x\n\nclass Encoder(nn.Module):\n\n    def __init__(self, layers: nn.ModuleList) -&gt; None:\n        super().__init__()\n        self.layers = layers\n        self.norm = LayerNormalization()\n\n    def forward(self, x, mask):\n        for layer in self.layers:\n            x = layer(x, mask)\n\n        return self.norm(x)\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#decoder-stacks","title":"Decoder Stacks","text":"<p>The decoder is also composed of a stack of N = 6 identical layers. In addition to the two sub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head attention over the output of the encoder stack. Similar to the encoder, we employ residual connections around each of the sub-layers, followed by layer normalization. We also modify the self-attention sub-layer in the decoder stack to prevent positions from attending to subsequent positions. This masking, combined with fact that the output embeddings are offset by one position, ensures that the predictions for position i can depend only on the known outputs at positions less than i.  </p> <pre><code>class DecoderBlock(nn.Module):\n\n    def __init__(self, self_attention_block: MultiHeadAttentionBlock, cross_attention_block: MultiHeadAttentionBlock, feed_forward_block: FeedForwardBlock, dropout: float) -&gt; None:\n        super().__init__()\n        self.self_attention_block = self_attention_block\n        self.cross_attention_block = cross_attention_block\n        self.feed_forward_block = feed_forward_block\n        self.residual_connections = nn.ModuleList([ResidualConnection(dropout) for _ in range (3)])\n\n    def forward(self, x, encoder_output, src_mask, tgt_mask):\n        x = self.residual_connections[0](x, lambda x: self.self_attention_block(x, x, x, tgt_mask))\n        x = self.residual_connections[1](x, lambda x: self.cross_attention_block(x, encoder_output, encoder_output, src_mask))\n        x = self.residual_connections[2](x, self.feed_forward_block)\n\n        return x\n\nclass Decoder(nn.Module):\n\n    def __init__(self, layers: nn.ModuleList) -&gt; None:\n        super().__init__()\n        self.layers = layers\n        self.nom = LayerNormalization()\n\n    def forward(self, x, encoder_ouput, src_mask, tgt_mask):\n        for layer in self.layers:\n            x = layer(x, encoder_ouput, src_mask,tgt_mask)\n\n        return self.nom(x)\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#projection-layers","title":"Projection Layers","text":"<pre><code>class ProjectionLayer(nn.Module):\n\n    def __init__(self, d_model: int, vocab_size: int) -&gt; None:\n        super().__init__()\n        self.proj = nn.Linear(d_model, vocab_size)\n\n    def forward(self, x) -&gt; None:\n        # &lt;batch, seq_len, d_model&gt; --&gt; &lt;batch, seq_len, vocab_size&gt;\n        return torch.log_softmax(self.proj(x), dim = -1)\n</code></pre>"},{"location":"HPC%20101/Lab%20Notebook/notebook/#transformer-build-transformer","title":"Transformer &amp; Build Transformer","text":"<pre><code>class Transformer(nn.Module):\n\n    def __init__(self, encoder: Encoder, decoder: Decoder, src_embed: InputEmbeddings, tgt_embed: InputEmbeddings, src_pos: PositionalEncoding, tgt_pos: PositionalEncoding, projection_layer: ProjectionLayer) -&gt; None:\n        super().__init__()\n        self.encoder = encoder\n        self.decoder = decoder\n        self.src_embed = src_embed\n        self.tgt_embed = tgt_embed\n        self.src_pos = src_pos\n        self.tgt_pos = tgt_pos\n        self.projection_layer = projection_layer\n\n    def encode(self, src, src_mask):\n        src = self.src_embed(src)\n        src = self.src_pos(src)\n        return self.encoder(src, src_mask)\n\n    def decode(self, encoder_output, src_mask, tgt, tgt_mask):\n        tgt = self.tgt_embed(tgt)\n        tgt = self.tgt_pos(tgt)\n        return self.decoder(tgt, encoder_output, src_mask, tgt_mask)\n\n    def project(self, x):\n        return self.projection_layer(x)\n\ndef build_transformer(src_vocab_size: int, tgt_vocab_size: int, src_seq_len: int, tgt_seq_len: int, d_model: int = 512, N: int = 6, h: int = 8, dropout: float = 0.1, d_ff: int = 2048) -&gt; Transformer:\n    # Create the embedding layers\n    src_embed = InputEmbeddings(d_model, src_vocab_size)\n    tgt_embed = InputEmbeddings(d_model, tgt_vocab_size)\n\n    # Create the positional encoding layers\n    src_pos = PositionalEncoding(d_model, src_seq_len, dropout)\n    tgt_pos = PositionalEncoding(d_model, tgt_seq_len, dropout)\n\n    # Create the encoder blocks\n    encoder_blocks = []\n    for _ in range (N):\n        encoder_self_attention_block = MultiHeadAttentionBlock(d_model, h, dropout)\n        feed_forward_block = FeedForwardBlock(d_model, d_ff, dropout)\n        encoder_block = EncoderBlock(encoder_self_attention_block, feed_forward_block, dropout)\n        encoder_blocks.append(encoder_block)\n\n    # Create the decoder blocks\n    decoder_blocks = []\n    for _ in range (N):\n        decoder_self_attention_block = MultiHeadAttentionBlock(d_model, h, dropout)\n        decoder_cross_attention_block = MultiHeadAttentionBlock(d_model, h, dropout)\n        feed_forward_block = FeedForwardBlock(d_model, d_ff, dropout)\n        decoder_block = DecoderBlock(decoder_self_attention_block, decoder_cross_attention_block, feed_forward_block, dropout)\n        decoder_blocks.append(decoder_block)\n\n    # Create the encoder &amp; decoder\n    encoder = Encoder(nn.ModuleList[encoder_blocks])\n    decoder = Decoder(nn.ModuleList[decoder_blocks])\n\n    # Create the projection layer\n    projection_layer = ProjectionLayer(d_model, tgt_vocab_size)\n\n    # Create the Transformer\n    transformer = Transformer(encoder, decoder, src_embed, tgt_embed, src_pos, tgt_pos, projection_layer)\n\n    # Initialize the parameters\n    for p in transformer.parameters():\n        if p.dim() &gt; 1:\n            nn.init.xavier_uniform_(p)\n\n    return transformer\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/","title":"Lab1 Report","text":"<p>\u8f6f\u4ef6\u5b89\u88c5 - [x] \u4e0b\u8f7dOpenMPI\u3001BLAS\u548cHPL\u7684\u6e90\u4ee3\u7801\u5e76\u7f16\u8bd1\u5b89\u88c5  </p> <p>\u96c6\u7fa4\u642d\u5efa - [x] \u514b\u9686\u865a\u62df\u673a - [x] \u914d\u7f6e\u865a\u62df\u673a\u4e92\u8054 - [x] \u6d4b\u8bd5\u8282\u70b9\u95f4\u901a\u4fe1  </p> <p>\u6027\u80fd\u6d4b\u8bd5 - [x] \u5728\u865a\u62df\u673a\u96c6\u7fa4\u4e0a\u4f7f\u7528openMPI\u8fd0\u884cHPL\u6027\u80fd\u6d4b\u8bd5\uff0c\u8bb0\u5f55\u6d4b\u8bd5\u7ed3\u679c  </p> <p>Bonus\uff08\u9009\u505a\uff09 - [ ] \u914d\u7f6eNFS\u5e76\u590d\u73b0\u5b9e\u9a8c - [ ] \u4f7f\u7528Docker\u590d\u73b0\u5b9e\u9a8c - [ ] \u4f7f\u7528Spack\u590d\u73b0\u5b9e\u9a8c  </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#1","title":"1. \u865a\u62df\u673a\u7684\u642d\u5efa","text":"<p>\u6211\u642d\u5efa\u7684\u865a\u62df\u673a\u73af\u5883\u914d\u7f6e\u5982\u4e0b\uff1a <pre><code>Hypervisor : VMware Workstation Pro 17.5.2  \nOS : ubuntu-18.04.6-64bit\nHard Disk : 20GB  \nMemory : 4096MB  \nNetwork Adapter : NAT  \nOther Devices : 2CPU cores\n</code></pre> </p> <p>\u88c5\u673a\u5b8c\u6210\u540e\u4e3a\u865a\u62df\u673a\u4e0b\u8f7d\u5fc5\u8981\u7684build-seeential\u8f6f\u4ef6\u5305\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5168\u9762\u7684\u7f16\u8bd1\u5668\u548c\u6784\u5efa\u5de5\u5177  </p> <pre><code>sudo apt update\nsudo apt install build-essential\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#2-openmpihpl","title":"2. \u4efb\u52a1\u4e00\uff1a\u4ece\u6e90\u7801\u6784\u5efaOpenMPI\u548cHPL","text":"<p>\u63a5\u4e0b\u6765\u7684\u6784\u5efa\u548c\u5b89\u88c5\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206  </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#21-blas-cblas","title":"2.1 BLAS &amp; CBLAS","text":""},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#blas","title":"BLAS","text":"<p><pre><code>wget \"http://www.netlib.org/blas/blas-3.12.0.tgz\"\ntar xvf blas-3.12.0.tgz\ncd BLAS-3.12.0\nmake\n</code></pre> \u524d\u4e09\u53e5\u8bdd\u6ca1\u6709\u95ee\u9898\uff0c<code>make</code>\u7684\u65f6\u5019\u4f1a\u62a5\u9519 <pre><code>make : gfortran :No such file or directory  \n</code></pre> \u63d0\u793a\u7f3a\u5c11\u4e86gfortran\uff0c\u9700\u8981\u4e0b\u8f7d:<code>sudo apt install gfortran</code> \u518d\u6b21<code>make</code>\u540e\u5c06\u521a\u4e0b\u8f7d\u5230\u7684\u5e93\u6587\u4ef6\u590d\u5236\u5230\u7cfb\u7edf\u5e93\u6587\u4ef6 <pre><code>sudo cp blas_LINUX.a /usr/local/lib/libblas.a\n</code></pre> </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#cblas","title":"CBLAS","text":"<p><pre><code>wget http://www.netlib.org/blas/blast-forum/cblas.tgz\ntar -xvf cblas.tgz\n</code></pre> \u63a5\u4e0b\u6765\u6211\u4eec\u7684\u76ee\u6807\u662f\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u7f16\u8bd1CBLAS\u6587\u4ef6\uff0c\u5f97\u5230cblas_LINUX.a  </p> <p><code>make</code>\u4e4b\u524d\u9700\u8981\u4fee\u6539Makefile\u3002\u6253\u5f00Makefile.in\uff0c\u53ef\u4ee5\u770b\u5230</p> <p> </p> <p>\u6211\u4eec\u9700\u8981\u6307\u5b9aBLAS\u5e93\u7684\u8def\u5f84\uff0c\u521a\u521a\u6211\u4eec\u5df2\u7ecf\u628ablas_LINUX.a\u590d\u5236\u5230\u4e86\u7cfb\u7edf\u5e93\u6587\u4ef6\uff0c\u4fee\u6539\u8def\u5f84\u5982\u4e0b</p> <p> </p> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5<code>make</code> </p> <p></p> <p>P.S. \u4e2d\u95f4\u6709\u51e0\u6761warning\uff0c\u4f46\u6ca1\u6709error </p> <p> </p> <p>\u6210\u529f\u5728 /CBLAS/lib\u4e2d\u751f\u6210\u4e86cblas_LINUX.a \u628a\u5b83\u4e5f\u590d\u5236\u5230<code>/usr/local/lib/libcblas.a</code> <pre><code>sudo cp cblas_LINUX.a /usr/local/lib/libcblas.a  \n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#22-openmpi","title":"2.2 OpenMPI","text":"<p><pre><code>wget \"https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.3.tar.gz\"\ntar xvf openmpi-5.0.3.tar.gz\ncd openmpi-5.0.3\n</code></pre> \u4e0b\u8f7d\u597d\u540e\u5b89\u88c5\u5728\u7279\u5b9a\u7684\u8def\u5f84<code>/usr/local/openMPI</code> <pre><code>./configure --prefix=/usr/local/openMPI\nmake\nsudo make install  \n</code></pre> \u6f2b\u957f\u7684\u7b49\u5f85\u540e\u5b89\u88c5\u5b8c\u6210</p> <p>\u63a5\u4e0b\u6765\u9700\u8981\u4fee\u6539<code>PATH</code>\u548c<code>LD_LIBRARY_PATH</code>(\u4e4b\u540e\u8bb2MPI\u7684\u65f6\u5019\u4f1a\u63d0\u5230)\uff0c\u6211\u662f\u4f7f\u7528nano\u6253\u5f00\u4fee\u6539\u7684 <pre><code>nano ~/.bashrc\n</code></pre> \u5728<code>.bashrc</code>\u7684\u6700\u4e0a\u9762\u914d\u7f6e\u73af\u5883\u53d8\u91cf  </p> <p> </p> <p>\u6700\u540e\u8fd0\u884c\u4e00\u4e0b\u4f7f\u4fee\u6539\u751f\u6548 <pre><code>source ~/.bashrc\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#23-hpl","title":"2.3 HPL","text":"<p><pre><code>wget https://netlib.org/benchmark/hpl/hpl-2.3.tar.gz\ntar -xvf hpl-2.3.tar.gz\ncd hpl-2.3\n</code></pre> \u4e3aHPL\u6784\u5efa\u63d0\u4f9b\u4e00\u4e2a\u5408\u9002\u7684Makefile\u6587\u4ef6 <pre><code>cp setup/Make.Linux_PII_CBLAS ./Make.Linux_PII \n</code></pre> \u5bf9\u8fd9\u4e2aMake.Linuc_PII\u6587\u4ef6\u8fdb\u884c\u4fee\u6539 <pre><code>ARCH         = Linux_PII_CBLAS -&gt; Linux_PII  \nTOPdir       = $(HOME)/hpl-2.3 -&gt; /home/lee/hpl-2.3  \nMPdir        = /usr/local/mpi -&gt;/usr/local/openmpi  \nMPinc        = -I$(MPdir)/include\nMPlib        = $(MPdir)/lib/libmpich.a -&gt; $(MPdir)/lib/libmpi.so  \nLAdir        = $(HOME)/netlib/ARCHIVES/Linux_PII -&gt; /home/lee/CBLAS  \nLAinc        =\nLAlib        = $(LAdir)/libcblas.a $(LAdir)/libatlas.a -&gt; /usr/local/lib/libcblas.a /usr/local/lib/libblas.a -lgfortran\nCC           = /usr/bin/gcc -&gt; /usr/local/openMPI/bin/mpicc\n</code></pre> \u4fee\u6539\u5b8c\u6210\u540e\uff0c\u6839\u636e\u521a\u624d\u4fee\u6539\u7684Makefile\u53bbmake <pre><code>make arch=Linux_PII\n</code></pre> \u53ef\u4ee5\u5728<code>/hpl-2.3/bin/Linux_PII</code>\u76ee\u5f55\u4e0b\u627e\u5230\u7684\u53ef\u6267\u884c\u6587\u4ef6xhpl  </p> <p></p> <p>P.S \u4efb\u52a1\u4e00\u6e90\u7801\u6784\u5efa\u7684\u5185\u5bb9\u867d\u7136\u770b\u8d77\u6765\u4e0d\u751a\u590d\u6742\uff0c\u4f46\u5bf9\u4e8e\u65b0\u624b\u5c5e\u5b9e\u4e0d\u53cb\u597d\u3002\u524d\u7f6e\u5b9e\u9a8c\u5bf9Angband\u7684\u6784\u5efa\u4e2d\uff0c\u5bf9\u5b89\u88c5\u8def\u5f84\u5f3a\u8c03\u7684\u4e0d\u591a\uff0c\u5728\u5b9e\u9a8c\u6587\u6863\u4e2d\u8bf4  ./configure # \u4e0d\u5e26\u53c2\u6570\uff0c\u5c06\u9ed8\u8ba4\u5b89\u88c5\u5230 /usr/local/ \u4e0b\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u4fee\u6539 PATH \u548c LD_LIBRARY_PATH \u7b49 ; \u5982\u679c\u4f60\u4f7f\u7528 --prefix \u53c2\u6570\u6307\u5b9a\u4e86\u5b89\u88c5\u8def\u5f84\uff0c\u5219\u53ef\u80fd\u9700\u8981\u4fee\u6539 PATH \u548c LD_LIBRARY_PATH\u3002   \u4f46\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u5c1d\u8bd5\uff08ubuntu\uff09\u7684\u65f6\u5019\u5185\u5b58\u4e0d\u8db3\uff0c\u7b2c\u4e8c\u6b21\u6539\u7528Debian\u53d1\u73b0\u5e76\u6ca1\u6709\u4e0b\u8f7d\u5230local\u91cc\uff0c\u800c\u662f\u5728/home/lee/\u4e0b\uff0cBLAS\u4e5f\u5b8c\u5168\u6ca1\u6709\u914d\u597d\uff0c\u65e2\u6ca1\u6709\u628a\u5e93\u653e\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u4e5f\u6ca1\u6709\u5728Makefile.Linux_PII\u4e2d\u4fee\u6539\u6210\u6b63\u786e\u7684\u8def\u5f84\uff0c\u5bfc\u81f4\u4e00\u76f4error\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u4e00\u5ea6\u5f88\u5d29\u6e83\u3002\u7b2c\u4e09\u6b21\u5c1d\u8bd5\u53c8\u6362\u56deubuntu\uff0cconfigure\u7684\u65f6\u5019\u7528\u4e86--prefix\u6307\u5b9a/usr/local\uff0c\u6dfb\u52a0\u4e86PATH\u548cLD_LIBRTARY_PATH\u73af\u5883\u53d8\u91cf\uff0c\u6309\u7167Makefile\u53bb\u653e\u7f6e\u5e93 </p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#3-hpl","title":"3. \u4efb\u52a1\u4e8c\uff1a\u4f7f\u7528HPL\u6d4b\u8bd5\u865a\u62df\u673a\u96c6\u7fa4\u7684\u6027\u80fd","text":""},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#31","title":"3.1 \u96c6\u7fa4\u8282\u70b9\u95f4\u7684\u8fde\u63a5\u4e0e\u4e92\u8bbf","text":"<p>\u7528VMware Workstation\u81ea\u5e26\u7684\u529f\u80fd\u514b\u9686\u865a\u62df\u673a\uff0c\u547d\u540d\u4e3anode01\uff0cnode02\uff0cnode03\uff0cnode04\u3002 \u5728\u514b\u9686\u65f6\u9009\u62e9\u5b8c\u6574\u514b\u9686 \u6ce8\u610f\uff0c\u4e0d\u53ea\u662f\u5728 Hypervisor \u4e2d\u4fee\u6539\u540d\u5b57\uff0c\u8fd8\u9700\u8981\u5728\u865a\u62df\u673a\u4e2d\u4fee\u6539 /etc/hostname \u6211\u4eec\u53ef\u4ee5\u7528<code>sudo nano /etc/hostname</code>\u6765\u4fee\u6539\u540d\u79f0,\u4e4b\u540e<code>reboot</code>\u91cd\u542f <pre><code># \u67e5\u770b\u5404\u53f0\u865a\u62df\u673a\u7684ip\u5730\u5740\uff1a\nip addr\nnode01\uff1a192.168.75.145\nnode02\uff1a192.168.75.143\nnode03\uff1a192.168.75.138\nnode04\uff1a192.168.75.142\n</code></pre> \u83b7\u53d6\u540e\u5728node01\u4e2d\u4fee\u6539<code>/etc/hosts</code>\u6587\u4ef6\uff0c\u6dfb\u52a0\u5176\u4ed6\u8282\u70b9\u7684\u5730\u5740  </p> <p></p> <p>\u6839\u636essh\u539f\u7406\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e3b\u8282\u70b9(node01)\u4e0a\u751f\u6210\u516c\u94a5\uff0c\u628a\u516c\u94a5\u653e\u5230node02/03/04\u4e0a\uff0c\u5efa\u7acb\u94fe\u63a5\u3002(\u8fd9\u4e00\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u7b2c\u4e00\u6b21\u767b\u5f55ZJU\u96c6\u7fa4\u65f6\u7684\u64cd\u4f5c) <pre><code>ssh-keygen # \u6ce8\u610f\u4e0d\u9700\u8981\u4e3a\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5168\u7a0b\u56de\u8f66\u5373\u53ef  \nssh-copy-id user@hostname  #e.g.ssh-copy-id lee@node02\n</code></pre> </p> <p>P.S \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5931\u8bef\uff0c\u7531\u4e8e\u662f\u91cd\u88c5\u4e86\u4e00\u53f0ubuntu\u6765\u505a\u7684\uff0c\u6240\u4ee5\u4e4b\u524d\u6ca1\u6709\u88c5openssh-server\u548copenssh-client\uff0c\u5e94\u8be5\u5148\u88c5\u597d\u518d\u514b\u9686\u7684 </p> <p> </p> <p>\u4e4b\u540e\u518d\u64cd\u4f5c\u5c31\u4e0d\u4f1aerror\u4e86  </p> <p> </p> <p>\u6839\u636e\u63d0\u793a\u5c1d\u8bd5\u767b\u5f55node02 <pre><code>ssh lee@node02\n</code></pre> </p> <p>\u7ea2\u6846\u5904\u8868\u9762\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u4ecenode01\u767b\u5f55node02\u7684shell\u4e86  </p> <p>\u5bf9node03/node04\u505a\u540c\u6837\u7684\u64cd\u4f5c  </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#32-mpi","title":"3.2 \u6d4b\u8bd5MPI\u8fd0\u884c","text":"<p>\u5728node01\u4e0a\u5199\u4e00\u4e2ahostfile\uff0c\u6307\u5b9a\u8282\u70b9\u548c\u8fdb\u7a0b\u6570(\u76f4\u63a5\u65b0\u5efa\u5c31\u597d\uff0c\u8fd9\u91cc\u6211\u5efa\u5728\u4e86<code>/home/Documents</code>)  </p> <p></p> <p>P.S \u8fd9\u4e2aslots\u4f3c\u4e4e\u662f\u4e0e\u5f53\u65f6\u8bbe\u7f6e\u7684cores\u6709\u5173\u7684\uff0c\u5728\u524d\u9762\u6d4b\u8bd5MPI\u80fd\u5426\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u6267\u884c<code>mpirun -n 2 hello_c</code>\u662f\u53ef\u4ee5\u7684\uff0c\u5982\u679c\u8d85\u8fc72\u4e2aMPI processes\u5c31\u4f1aerror\u3002\u4f3c\u4e4e\u662fMPI\u4f1a\u8ba1\u7b97CPU\u7684\u7b97\u529b\u4e0a\u9650\uff0c\u7ed9\u51fa\u9650\u5236\u3002 SOLVED:\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u58f0\u660e<code>export OMP_NUM_THREADS=8</code>\u5c31\u53ef\u4ee5\u8bbe\u5b9a\u7ebf\u7a0b\u6570\u91cf</p> <p> </p> <p>\u7b80\u5355\u6d4b\u8bd5MPI\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c <pre><code>mpirun --hostfile hostfile cat /etc/hostname\n</code></pre> </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#33-hpl","title":"3.3 \u8fd0\u884cHPL","text":"<p>\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u5230<code>HPL</code>\u6240\u5728\u76ee\u5f55\uff0c<code>xhpl</code>\u9700\u8981\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\u627e\u5230<code>HPL.dat</code> <pre><code>cd /hpc-2.3/bin/Linux_PII\n</code></pre> \u627e\u5230xphl\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c <pre><code>mpirun --hostfile /home/lee/Documents/hostfile ./xhpl  \n</code></pre></p> <p> </p> <p>\u8fd0\u884c\u6210\u529f\uff01</p> <p>P.S \u5728\u5199\u5b9e\u9a8c\u62a5\u544a\u7684\u65f6\u5019\u7b2c\u4e8c\u6b21\u8fc7\u4e86\u4e00\u4e0b\u6d41\u7a0b\uff0c\u53d1\u73b0ssh\u5c45\u7136\u8fde\u4e0d\u4e0a\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u865a\u62df\u673a\u91cd\u542f\u540eIP\u5730\u5740\u4e5f\u53d8\u4e86(?)\uff0c\u9700\u8981\u4fee\u6539<code>hosts</code>\u6587\u4ef6\u3002 </p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#4bonus","title":"4.Bonus\u5c1d\u8bd5\uff08\u672a\u6210\u529f\uff09","text":"<p>\u5176\u5b9e\u6211\u5b8c\u5168\u8fd8\u4e0d\u6e05\u695a\u8981\u600e\u4e48\u7528Docker\u6765\u590d\u73b0\u96c6\u7fa4\u7684\u642d\u5efa\uff0c\u4f46\u6211\u89c9\u5f97Docker\u5bb9\u5668\u548c\u865a\u62df\u673a\u5e94\u8be5\u662f\u5341\u5206\u7c7b\u4f3c\u7684\uff0c\u6211\u7684\u57fa\u672c\u60f3\u6cd5\u662f\uff1a\u5728\u4e00\u4e2aubuntu\u5bb9\u5668\u4e2d\u642d\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e4b\u524dThe One\u4e00\u6837\u7684\u4e3b\u8282\u70b9\uff0c\u628a\u5b83\u521b\u5efa\u6210\u955c\u50cf\u3002\u7528\u8fd9\u4e2a\u955c\u50cf\u518d\u521b\u5efa\u4e09\u4e2a\u5bb9\u5668\uff08\u7c7b\u4f3c\u4e8e\u514b\u9686\u865a\u62df\u673a\uff09\uff0c\u8ba9\u4ed6\u4eec\u4e92\u76f8ping\u901a\uff0c\u5f62\u6210\u96c6\u7fa4\u3002\u6982\u62ec\u6765\u8bf4\u662f\u4e00\u53f0\u4e3b\u673a\u3001\u56db\u4e2a\u5bb9\u5668\u7684\u7ed3\u6784\u3002  </p> <p>\u4f46\u7531\u4e8e\u65f6\u95f4\u548c\u80fd\u529b\u6709\u9650\uff0c\u53ea\u5728\u4e00\u4e2aDocker\u5bb9\u5668\u4e2d\u590d\u73b0\u4e86The One\u7684\u73af\u5883\u914d\u7f6e\uff0c\u5e76\u624b\u52a8\u6784\u5efa\u4e86\u955c\u50cf\uff0c\u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e86\u9047\u5230\u7684\u95ee\u9898\uff0c\u5176\u4ed6\u6b65\u9aa4\u4e0eThe One\u7684\u914d\u7f6e\u4e00\u6837  </p> <p>\u65b0\u7684ubuntu-container\u8fdb\u53bb\u540e\u53ea\u6709root\u7528\u6237\uff0c\u9700\u8981\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u3001\u4e0b\u8f7dsudo\uff0c\u5e76\u628a\u8be5\u7528\u6237\u6dfb\u52a0\u5230sudoers file\u4e2d  </p> <p>\u4f7f\u7528root\u7528\u6237\u6743\u9650\uff0c\u6253\u5f00 /etc/sudoers \uff0c\u6dfb\u52a0 <pre><code>lee ALL=(ALL) ALL\n</code></pre></p> <p>\u5728\u914d\u7f6eCBLAS\u8fdb\u884cmake\u7684\u65f6\u5019\uff0c\u672c\u6765\u7684warning\u53d8\u6210\u4e86error\uff0c\u9700\u8981\u5728Makefile.in\u4e2d\u5bf9\u7f16\u8bd1\u9009\u9879\u8fdb\u884c\u4fee\u6539 <pre><code>FC=gfortran --&gt; FC=gfortran -fallow-argument-mismatch\n</code></pre> \u5ffd\u7565\u8fd9\u4e2a\u62a5\u9519\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38make  </p> <p>\u4e4b\u540e\u7684\u6784\u5efa\u4e0e\u4e4b\u524d\u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u5728\u6d4b\u8bd5OpenMPI\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u95ee\u9898  </p> <p></p> <p>\u7531\u4e8e\u65f6\u95f4\u95ee\u9898\uff0c\u8be5\u62a5\u9519\u4ecd\u7136\u6ca1\u6709\u89e3\u51b3</p> <p>\u624b\u52a8\u6784\u5efa\u955c\u50cf\u540e\u53ef\u4ee5\u518d <code>images</code> \u4e2d\u67e5\u770b\u5230\u8be5\u955c\u50cf <pre><code>docker commit 83bdd6e6831e\n</code></pre> </p> <p>\u6211\u4eec\u53ef\u4ee5\u7528 <pre><code>docker run -it --name node01 2325aae77464 \n</code></pre> \u6765\u751f\u6210\u4e00\u4e2a\u4f7f\u7528\u8be5\u955c\u50cf\u7684\u5bb9\u5668</p> <p> </p> <p>\u540e\u7eed\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e\u5bb9\u5668\u7684\u7f51\u7edc\u6765\u5b9e\u73b0\u76f8\u4e92\u7684\u94fe\u63a5</p>"},{"location":"HPC%20101/Lab%20Reports/lab1%20report/lab1%20report/#5","title":"5. \u603b\u7ed3","text":"<p>\u81f3\u6b64\uff0cLab1\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u544a\u4e00\u6bb5\u843d\u3002\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u5bf9\u5927\u4f6c\u6765\u8bf4\u5f53\u7136\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u60c5\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e4b\u524d\u8fdelinux\u548c\u865a\u62df\u673a\u90fd\u4ece\u6765\u6ca1\u78b0\u8fc7\u7684\u7eaf\u7eaf\u5c0f\u767d\uff0c\u5f53\u610f\u8bc6\u5230\u6709\u4e00\u4e2a\u5c0f\u96c6\u7fa4\u8fd0\u884c\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u65f6\uff0c\u8fd8\u662f\u76f8\u5f53\u6fc0\u52a8\u7684\u3002 \u6211\u4e0d\u786e\u5b9a\u4f1a\u5728HPC\u8fd9\u6761\u8def\u4e0a\u8d70\u591a\u8fdc\uff0c\u4f46\u5f88\u9ad8\u5174\uff0c\u5df2\u7ecf\u5f00\u59cb\u4e86 <pre><code>hello new world\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/","title":"Lab2 Report","text":"<ul> <li> \u5b8c\u6210\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u5411\u91cf\u5316\u7248\u672c  </li> <li> \u6d4b\u8bd5\u5411\u91cf\u5316\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4  </li> </ul>"},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#1","title":"1. \u57fa\u672c\u6982\u5ff5","text":""},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#11","title":"1.1 \u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5","text":"<p>wikipedia\u7ed9\u51fa\u4e86\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\uff1a  </p> <p>\u5047\u5982\u6211\u4eec\u60f3\u5f97\u5230\u672a\u77e5\u51fd\u6570 f \u5728\u70b9 P=(x,y) \u7684\u503c\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u51fd\u6570 f \u5728 Q11=(x1,y1), Q12=(x1,y2), Q21=(x2,y1) \u53ca Q22=(x2,y2) \u56db\u4e2a\u70b9\u7684\u503c\u3002</p> <p> </p> <p>\u9996\u5148\u5728 x \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230</p> <p></p> <p>\u7136\u540e\u5728 y \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230  </p> <p></p> <p>\u6ce8\u610f\u6b64\u5904\u5982\u679c\u5148\u5728 y \u65b9\u5411\u63d2\u503c\u3001\u518d\u5728 x \u65b9\u5411\u63d2\u503c\uff0c\u5176\u7ed3\u679c\u4e0e\u6309\u7167\u4e0a\u8ff0\u987a\u5e8f\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002  </p> <p>\u5728 <code>basline</code> \u7248\u672c\u4e2d\uff0c <pre><code>res[n, i, j] = a[n, x_idx, y_idx] * (1 - _x) * (1 - _y) + a[n, x_idx + 1, y_idx] * _x * (1 - _y) + a[n, x_idx, y_idx + 1] * (1 - _x) * _y + a[n, x_idx + 1, y_idx + 1] * _x * _y\n</code></pre> \u5c31\u662f\u5bf9\u516c\u5f0f <code>f(x,y)</code> \u7684\u5c55\u5f00\u3002  </p>"},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#12-nhwc","title":"1.2 NHWC \u6570\u636e\u683c\u5f0f","text":"<p>NHWC\uff08\u6837\u672c\u6570-\u9ad8\u5ea6-\u5bbd\u5ea6-\u901a\u9053\uff09 \u6570\u636e\u683c\u5f0f\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u79cd\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5c24\u5176\u5728\u5904\u7406\u56fe\u50cf\u3001\u70b9\u4e91\u6216\u7279\u5f81\u56fe\u7b49\u591a\u7ef4\u6570\u636e\u65f6\u5c24\u4e3a\u91cd\u8981\u3002\u5728NHWC\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u6309\u7167\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff1a <pre><code>N\uff1aBatch Size\uff08\u6279\u6b21\u5927\u5c0f\uff09\uff0c\u8868\u793a\u4e00\u6b21\u5904\u7406\u7684\u6570\u636e\u6837\u672c\u6570\u91cf\u3002\nH\uff1aHeight\uff08\u9ad8\u5ea6\uff09\uff0c\u8868\u793a\u56fe\u50cf\u6216\u7279\u5f81\u56fe\u7684\u9ad8\u5ea6\u3002\nW\uff1aWidth\uff08\u5bbd\u5ea6\uff09\uff0c\u8868\u793a\u56fe\u50cf\u6216\u7279\u5f81\u56fe\u7684\u5bbd\u5ea6\u3002\nC\uff1aChannel\uff08\u901a\u9053\u6570\uff09\uff0c\u5bf9\u4e8e\u5f69\u8272\u56fe\u50cf\u6765\u8bf4\uff0c\u901a\u5e38\u662fRGB\u4e09\u4e2a\u901a\u9053\u3002\n</code></pre> \u771f\u5b9e\u60c5\u51b5\u4e0b\u6211\u4eec\u5904\u7406\u7684\u6570\u636e\u90fd\u662f\u4ee5 batch \u4e3a\u5355\u4f4d\u7684\uff0c\u6309\u6279\u8fdb\u884c\u5904\u7406\u7684\u3002\u4ee5\u53cc\u7ebf\u6027\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u4e00\u6b21\u6027\u9001\u5165 N \u5f20\u5927\u5c0f\u4e3a H\u00d7W \u7684\u56fe\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u6709 C \u4e2a\u901a\u9053\uff0c\u7136\u540e\u4e00\u6b21\u6027\u8fd4\u56de\u8fd9 N \u5f20\u56fe\u7247\u5904\u7406\u597d\u7684\u7ed3\u679c\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#2","title":"2. \u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#21","title":"2.1 \u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0","text":"<p>\u9700\u8981\u4f18\u5316\u7684\u90e8\u5206\u5c31\u662f3\u4e2a <code>for</code> \u5faa\u73af\uff0c\u901a\u8fc7\u5411\u91cf\u5316\u8ba9b\u4e2d\u4e0d\u540c\u6279\u6b21(N)\u3001\u4e0d\u540c\u4f4d\u7f6e(H,W)\u7684\u70b9\u540c\u65f6\u901a\u8fc7\u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5\u5f97\u5230\u5bf9\u5e94\u503c\u3002  </p> <p>\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u6ca1\u6709\u8003\u8651\u5230\u7ef4\u6570\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u51fa\u73b0\u62a5\u9519  </p> <p> </p> <p>\u539f\u4ee3\u7801\u4e3a\uff1a  </p> <pre><code># \u63a5\u7740\u8ba1\u7b97\u5dee\u503c  \n_x,_y=b[:,:,:,0]-x_idx,b[:,:,:,1]-y_idx  \n\n# \u76f4\u63a5\u5957\u516c\u5f0f  \nres=a[:,x_idx,y_idx]*(1-_x)*(1-_y)+a[:,x_idx+1,y_idx]*_x*(1-_y)+a[:, x_idx, y_idx + 1] * (1 - _x) * _y + a[:, x_idx + 1, y_idx + 1] * _x * _y\n</code></pre> <p>\u5176\u4e2d\uff0ca\u7684shape\u662f(N,H1,W1,C)\uff0c\u4f46_x\u7684shape\u662f(N,H1,W1)\uff0c_x\u7f3a\u5c11\u4e86\u901a\u9053\u6570\u8fd9\u4e2a\u7ef4\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u4e3a\u5b83\u52a0\u4e0a\u8fd9\u4e00\u7ef4\u5ea6 <pre><code>_x=_x[:,:,:,np.newaxis]\n_y=_y[:,:,:,np.newaxis] \n</code></pre> <code>np.nuewaxis</code> \u7528\u4e8e\u5728\u6570\u7ec4\u7684\u6307\u5b9a\u4f4d\u7f6e\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8f74\uff08axis\uff09\uff0c\u6548\u679c\u7b49\u540c\u4e8e\u5728\u5207\u7247\u64cd\u4f5c\u4e2d\u6307\u5b9a\u4e00\u4e2a None \u6216\u7a7a\u5207\u7247\uff08:\uff09\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u66f4\u660e\u786e\u7684\u8bed\u4e49\u3002 \u5f53\u5bf9\u4e00\u4e2a\u6570\u7ec4\u4f7f\u7528 <code>np.newaxis</code> \u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u544a\u8bc9 NumPy \u5728\u6570\u7ec4\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u7ef4\u5ea6\uff0c\u8be5\u7ef4\u5ea6\u7684\u5927\u5c0f\u4e3a1\u3002\u8fd9\u4e0d\u4f1a\u6539\u53d8\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u6570\u636e\uff0c\u53ea\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5f62\u72b6\uff08shape\uff09   </p> <p>\u4f46\u9057\u61be\u7684\u662f\u8fd9\u6837\u505a\u867d\u7136\u80fd\u8ba9\u7a0b\u5e8f\u8fd0\u884c\uff0c\u4f46\u7b54\u6848\u51fa\u73b0\u4e86\u9519\u8bef\uff1a </p> <p> </p> <p>\u8fd9\u4e2a\u95ee\u9898\u5bf9\u6211\u9020\u6210\u4e86\u6781\u5927\u7684\u56f0\u6270 \u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e <code>a[N,H,W]</code> \uff0c\u4f20\u5165\u7684\u65f6\u5019\u5b83\u5b58\u4e86\u6bcf\u4e2a\u70b9C\u4e2a\u901a\u9053\u7684\u503c\uff0c\u73b0\u5728\u5411\u91cf\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u8981\u5bf9\u8fd9\u4e9b\u70b9\u4e00\u8d77\u505a\u64cd\u4f5c\uff1b\u6211\u4eec\u4ee5 <code>x_idx</code> \u548c <code>y_idx</code> \u4f5c\u4e3a\u7d22\u5f15\u628a\u6240\u6709\u70b9\u4f5c\u4e3a\u6574\u4f53\uff0c\u8fd9\u4e24\u4e2a\u7d22\u5f15\u5177\u6709[N,H,W]\u7684\u4e09\u7ef4\u7ed3\u6784\uff0c\u4f46\u662f <code>N</code> \u4e0d\u5177\u5907\u4e09\u7ef4\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06 <code>N</code> \u62d3\u5c55\u4e3a\u4e09\u7ef4\u7684  </p> <p>P.S \u63cf\u8ff0\u7684\u8fd8\u662f\u5f88\u6a21\u7cca\uff0c\u4ecd\u7136\u4e0d\u662f\u5b8c\u5168\u660e\u767d</p> <p><pre><code>new_n=np.arange(N)[:, np.newaxis, np.newaxis] # np.arange()\u751f\u6210\u7ed9\u5b9a\u8303\u56f4\u7684\u6570\u7ec4\n</code></pre> \u6700\u540e\u5f97\u5230\u7684 <code>bilinear_interp_vectorized</code> \u51fd\u6570\u5982\u4e0b\uff1a <pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assert N == N1\n\n    # TODO: Implement vectorized bilinear interpolation  \n    res = np.empty((N, H2, W2, C), dtype=int64)  \n\n    # \u9996\u5148\u627e\u5230\u76f8\u90bb\u4e14\u5de6\u504f\u7684\u70b9\u5750\u6807\uff0c\u5206\u4e3ax\u548cy\n    x_idx,y_idx=np.floor(b[:,:,:,0]).astype(int64),np.floor(b[:,:,:,1]).astype(int64) \n\n    # \u63a5\u7740\u8ba1\u7b97\u5dee\u503c  \n    _x,_y=b[:,:,:,0]-x_idx,b[:,:,:,1]-y_idx  \n\n    #\u5728_x,_y\u4e0a\u6dfb\u52a0\u7a7a\u7684C\u8f74\uff0c\u4ee5\u5339\u914da\n    _x=_x[:,:,:,np.newaxis]\n    _y=_y[:,:,:,np.newaxis]  \n\n    new_n=np.arange(N)[:, np.newaxis, np.newaxis]\n\n    # \u76f4\u63a5\u5957\u516c\u5f0f  \n    # res=(a[:,x_idx,y_idx]*(1-_x)*(1-_y)+a[:,x_idx+1,y_idx]*_x*(1-_y)+a[:, x_idx, y_idx + 1] * (1 - _x) * _y + a[:, x_idx + 1, y_idx + 1] * _x * _y).astype(int64)\n\n    res=(a[new_n,x_idx,y_idx]*(1-_x)*(1-_y)+a[new_n,x_idx+1,y_idx]*_x*(1-_y)+a[new_n, x_idx, y_idx + 1] * (1 - _x) * _y + a[new_n, x_idx + 1, y_idx + 1] * _x * _y).astype(int64)\n\n    return res\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab2%20report/lab2%20report/#22","title":"2.2 \u68c0\u6d4b\u5b9e\u73b0\u6b63\u786e\u4e0e\u52a0\u901f\u6548\u679c","text":"<p>\u8fd0\u884c <code>main.py</code>\uff0c\u67e5\u770b\u8f93\u51fa\uff1a  </p> <p> </p> <p>\u4f7f\u7528 <code>bilinear_interp_baseline</code> \u51fd\u6570\u8017\u65f6\u7ea664s\uff0c\u4f7f\u7528 <code>bilinear_interp_vectorized</code> \u51fd\u6570\u8017\u65f6\u7ea622s\uff0c\u52a0\u901f\u6bd4\u8fbe\u5230\u4e8622x  </p> <p>\u8be5\u7a0b\u5e8f\u8fd0\u884c\u5728\u81ea\u5df1\u7684\u4e3b\u673a\u4e0a\uff0c\u4f7f\u7528\u7684\u662f 12<sup>th</sup> Gen Intel(R) Core(TM) i5-12500H   2.50 GHz</p>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/","title":"Lab2.5 Report","text":"<ul> <li> \u5b8c\u6210\u4ee5\u4e0a\u4ee3\u7801\u7684\u624b\u5199 SIMD \u5411\u91cf\u5316  </li> <li> \u6d4b\u8bd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4  </li> </ul>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/#1","title":"1. \u5b9e\u9a8c\u539f\u7406","text":"<p>\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002  </p> <p>\u5b9e\u9a8c\u7684 <code>baseline</code> \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8fdb\u884cMAXN\u6b21 D<sub>4*4</sub>=A<sub>4*12</sub>\\(\\times\\)B<sub>12\u22174</sub> \u7684\u77e9\u9635\u4e58\u6cd5\u3002  </p>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/#2","title":"2. \u5b9e\u9a8c\u6b65\u9aa4","text":"<p><code>baseline</code> \u77e9\u9635\u4e58\u6cd5\u7684\u5b9e\u73b0 <pre><code>for (int n = 0; n &lt; MAXN; n++){\n    {\n        /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n        // -----------------------------------\n        for (int k = 0; k &lt; 4; k++)\n        {\n            for (int i = 0; i &lt; 4; i++)\n            {\n                for (int j = 0; j &lt; 12; j++)\n                {\n                    *(d + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * \\*(b + n * 48 + j * 4 + k);\n                }\n            }\n        }\n        // -----------------------------------\n    }\n}  \n</code></pre></p> <p>\u6211\u4eec\u9700\u8981\u4f18\u5316\u4e2d\u95f4SGEMM\u90e8\u5206\u3002  </p> <p>\u5728 <code>baseline</code> \u4e2d\uff0c\u6bcf\u6b21\u5185\u5faa\u73af\u6267\u884c\u7684\u662fa\u77e9\u9635\u4e2d\u4e00\u4e2a\u6570\u4e58\u4ee5b\u77e9\u9635\u4e2d\u4e00\u4e2a\u6570\u5e76\u7d2f\u52a0\uff0c\u6bcf\u6b21\u53ea\u80fd\u786e\u5b9a\u7ed3\u679c\u77e9\u9635\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u8fd9\u6837\u6548\u7387\u5f88\u4f4e\u3002  </p> <p>\u7531\u4e8eb\u77e9\u9635\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\uff0c\u6bcf\u4e2a\u6570\u636e\u90fd\u76f8\u90bb\uff0c\u6240\u4ee5\u501f\u52a9 <code>_mm256_loadu_pd</code> \u6307\u4ee4\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21load\u56db\u4e2aDouble\u7c7b\u578b\u7684\u6570\u636e\u5230\u5bc4\u5b58\u5668\u4e2d\u3002\u6b64\u65f6\u4ecea\u77e9\u9635\u53d6\u51fa\u4e00\u4e2a\u6570\u636e\uff0c\u5e76\u5e7f\u64ad\u4e3a1\\(\\times\\)4\u7684block\u5c31\u53ef\u4ee5\u501f\u52a9 <code>_mm256_fmadd_pd</code> \u4e0eb\u77e9\u9635\u4e2d\u7684block\u8fdb\u884c\u5411\u91cf\u4e58\u52a0\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u786e\u5b9a\u4e86\u7ed3\u679c\u77e9\u9635\u4e2d\u7684\u4e00\u4e2a1\\(\\times\\)4\u7684block\u3002  </p> <p>\u66f4\u8fdb\u4e00\u6b65\uff0c\u5bf9\u4e8e\u7ed3\u679c\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2ablock\uff0c\u64cd\u4f5c\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff1b\u7ed3\u679c\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a4\\(\\times\\)4block\u9700\u8981\u7684b\u77e9\u9635\u4e2d\u7684\u6570\u636e\u662f\u4e00\u6837\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u4ecea\u77e9\u9635\u4e2d\u53d6\u51fa\u540c\u4e00\u5217\u7684\u56db\u4e2a\u6570\u636e\uff0c\u540c\u65f6\u5e76\u884c\u56db\u7ec4\u8fd0\u7b97\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u786e\u5b9a\u4e86\u7ed3\u679c\u77e9\u9635\u4e2d\u7684\u4e00\u4e2a4\\(\\times\\)4\u7684block\u3002  </p> <p>\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b  </p> <pre><code>for (int n = 0; n &lt; MAXN; n++)\n    {\n        double *a_ptr = a + n * 48, *b_ptr = b + n * 48;\n        double *d_ptr = d + n * 16;\n        int k;\n        double *a_ptr_0,*a_ptr_1,*a_ptr_2,*a_ptr_3;\n        a_ptr_0=&amp;a_ptr[0*12+0];\n        a_ptr_1=&amp;a_ptr[1*12+0];\n        a_ptr_2=&amp;a_ptr[2*12+0];\n        a_ptr_3=&amp;a_ptr[3*12+0];\n\n        __m256d c_sum_0 = _mm256_setzero_pd();  \n        __m256d c_sum_1 = _mm256_setzero_pd();  \n        __m256d c_sum_2 = _mm256_setzero_pd();  \n        __m256d c_sum_3 = _mm256_setzero_pd(); \n\n        double a_reg_0,a_reg_1,a_reg_2,a_reg_3;\n\n        for (k = 0; k &lt; 12;k++){\n            a_reg_0 = *(a_ptr_0++);\n            a_reg_1 = *(a_ptr_1++);\n            a_reg_2 = *(a_ptr_2++);\n            a_reg_3 = *(a_ptr_3++);\n\n            __m256d b_reg = _mm256_loadu_pd(&amp;b_ptr[k * 4 + 0]);\n\n            __m256d a_vec_0 = _mm256_set1_pd(a_reg_0);\n            c_sum_0 = _mm256_fmadd_pd(a_vec_0, b_reg,c_sum_0);\n            __m256d a_vec_1 = _mm256_set1_pd(a_reg_1);\n            c_sum_1 = _mm256_fmadd_pd(a_vec_1, b_reg,c_sum_1);\n            __m256d a_vec_2 = _mm256_set1_pd(a_reg_2);\n            c_sum_2 = _mm256_fmadd_pd(a_vec_2, b_reg,c_sum_2);\n            __m256d a_vec_3 = _mm256_set1_pd(a_reg_3);\n            c_sum_3 = _mm256_fmadd_pd(a_vec_3, b_reg,c_sum_3);\n\n        }\n\n        _mm256_storeu_pd(d_ptr, c_sum_0);\n        _mm256_storeu_pd(d_ptr+4, c_sum_1);\n        _mm256_storeu_pd(d_ptr+8, c_sum_2);\n        _mm256_storeu_pd(d_ptr+12, c_sum_3);\n    }\n</code></pre> <p>\u5bf9\u4e8e\u4e00\u822c\u7684SGEMM\uff0c\u8fd8\u9700\u8981\u8003\u8651\u884c\u6570\u548c\u5217\u6570\u4e0d\u80fd\u88ab4\u6574\u9664\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5904\u7406boundary case\u3002\u4f46\u8fd9\u91cc\u6bd4\u8f83\u7279\u6b8a\uff0ca\u548cb\u77e9\u9635\u7684\u89c4\u6a21\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u884c\u6570\u548c\u5217\u6570\u90fd\u80fd\u88ab4\u6574\u9664\u3002  </p> <p>\u5bf9\u4e8e\u4e00\u822c\u7684SGEMM\uff0c\u53ef\u4ee5\u53d1\u73b0\u4ecea\u77e9\u9635\u4e2d\u53d6\u6570\u636e\u7684\u65f6\u5019\u8fd8\u662f\u7eb5\u5411\u4e00\u4e2a\u4e00\u4e2a\u53d6\u7684\uff0c\u5728\u4e0eb\u77e9\u9635\u4e2dblock\u76f8\u4e58\u7684\u65f6\u5019\u4e5f\u662f\u4e00\u4e2a\u4e00\u4e2a\u8fd0\u7b97\u7684\u3002\u8fdb\u4e00\u6b65\u4f18\u5316\u53ef\u4ee5\u5bf9a\u77e9\u9635\u4e2d\u53d6\u51fa\u7684\u6570\u636e\u505apacking\uff1a\u7b2c\u4e00\u6b21\u4ecea\u77e9\u9635\u4e2d\u53d6\u6570\u636e\u65f6\u5c06\u5b83\u4eec\u5b58\u5728\u8fde\u7eed\u7684\u5185\u5b58\u4e2d\uff0c\u4e4b\u540e\u518d\u53d6\u7528\u5c31\u53ef\u4ee5\u76f4\u63a5load\u3002  </p> <p>\u4f46\u5728\u8fd9\u91cc\uff0c\u7531\u4e8e\u7ed3\u679c\u77e9\u9635\u672c\u8eab\u5c31\u662f4\\(\\times\\)4\u7684\u89c4\u6a21\uff0c\u4e5f\u5c31\u610f\u5473\u7740a\u77e9\u9635\u7684block\u5c31\u662f4\\(\\times\\)12\uff0cb\u77e9\u9635\u7684block\u5c31\u662f12\\(\\times\\)4\uff0c\u90fd\u53ea\u9700\u8981\u626b\u63cf\u8bfb\u53d6\u4e00\u6b21\uff0c\u56e0\u6b64\u6ca1\u6709packing\u7684\u5fc5\u8981\u3002\u867d\u7136packing\u53ef\u4ee5\u8282\u7ea6\u7eb5\u5411\u53d6\u6570\u636e\u7684\u65f6\u95f4\uff0c\u4f46\u4e5f\u8981\u589e\u52a0\u5c06\u6570\u636e\u5b58\u5165\u6570\u7ec4\u548c\u4ece\u6570\u7ec4load\u6570\u636e\u7684\u65f6\u95f4\u3002  </p>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/#3","title":"3. \u5b9e\u9a8c\u7ed3\u679c","text":"<p>\u5728\u4e0d\u4f7f\u7528\u7f16\u8bd1\u5668\u4f18\u5316\u9009\u9879\u7684\u60c5\u51b5\u4e0b\uff0c\u9996\u6b21\u7f16\u8bd1\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b  </p> <pre><code>g++ multi_pro.cpp -mavx2 -mfma -o multi_pro  \n./multi_pro.exe  \n</code></pre> <p> </p> <p>\u591a\u6b21\u8fd0\u884c\u540e\u52a0\u901f\u6bd4\u57fa\u672c\u7a33\u5b9a\u57282x\u4e0a\u4e0b  </p> <p> </p> <p> </p> <p> </p>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/#4","title":"4. \u6c47\u7f16\u4ee3\u7801\u5206\u6790","text":"<p>godbolt \u662f\u4e00\u6b3e\u57fa\u4e8e web \u7684\u7814\u7a76\u4e0d\u540c\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801\u7684\u5de5\u5177\uff0c\u501f\u52a9\u5b83\u6211\u4eec\u53ef\u4ee5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 </p> <p>\u8fd9\u4e2a\u5728\u7ebf\u5de5\u5177\u5176\u5b9e\u5c31\u662f\u628a\u4ee3\u7801\u8f6c\u6362\u6210\u6c47\u7f16\u8bed\u8a00\uff08\u7136\u800c\u6c47\u7f16\u662f\u5b8c\u5168\u4e0d\u4f1a\u7684\uff09\u3002  </p> <p>\u4f7f\u7528\u7f16\u8bd1\uff1a<code>x86-64 gcc 14.1</code>   \u7f16\u8bd1\u9009\u9879\uff1a<code>-mavx2 -mfma</code> </p> <p><code>for</code> \u5faa\u73af\u5b9e\u73b0\u7684\u6c47\u7f16\u4ee3\u7801\uff08\u90e8\u5206\uff09</p> <pre><code>        mov     DWORD PTR [rbp-24], 0  //\u5c06\u7acb\u5373\u6570\uff08immediate value\uff090\u79fb\u52a8\u5230\uff08mov\uff09\u4e00\u4e2a\u7531rbp\uff08\u57fa\u6307\u9488\u5bc4\u5b58\u5668\uff09\u51cf\u53bb28\u4e2a\u5b57\u8282\u6240\u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\u3002\u8fd9\u91cc\u7684DWORD PTR\u8868\u793a\u64cd\u4f5c\u7684\u662f\u53cc\u5b57\uff08Double Word\uff09\u5927\u5c0f\u7684\u6570\u636e\uff0c\u537332\u4f4d\uff084\u5b57\u8282\uff09\u7684\u6574\u6570\u3002\u56e0\u6b64\uff0c\u8fd9\u884c\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5c06\u6808\u4e0a\u7684\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u8bbe\u7f6e\u4e3a0\uff0c\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u76f8\u5bf9\u4e8erbp\u7684\u504f\u79fb\u91cf\u662f-28\n        jmp     .L11  //\u65e0\u6761\u4ef6\u8df3\u8f6c\uff08jmp\uff09\u5230\u6807\u7b7e.L12\u6240\u6807\u8bb0\u7684\u4ee3\u7801\u4f4d\u7f6e(.L12\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e9999999)\n.L18:\n        mov     DWORD PTR [rbp-28], 0  //\u4e00\u4e2aDouble\u9700\u89814\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u5185\u5b58\u4f4d\u7f6e\u5dee4\n        jmp     .L12\n.L17:\n        mov     DWORD PTR [rbp-32], 0\n        jmp     .L13\n.L16:\n        mov     DWORD PTR [rbp-36], 0\n        jmp     .L14\n.L15:\n        mov     rax, QWORD PTR c[rip]  //\u4ecerip\uff08\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668\uff09\u76f8\u5bf9\u504f\u79fb\u5904\u52a0\u8f7d\u4e00\u4e2a64\u4f4d\uff08QWORD\uff09\u6307\u9488\u5230rax\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6570\u7ec4c\u7684\u57fa\u5730\u5740\n        mov     edx, DWORD PTR [rbp-24]  //\u4ece\u6808\u4e0a\uff08\u76f8\u5bf9\u4e8erbp\u7684\u504f\u79fb\uff09\u8bfb\u53d6\u4e09\u4e2a32\u4f4d\uff08DWORD\uff09\u6574\u6570\uff0c\u5206\u522b\u5b58\u50a8\u5728rbp-24\u3001rbp-32\u3001rbp-28\n        //\u8fd9\u4e9b\u6574\u6570\u8fdb\u884c\u4f4d\u79fb\uff08\u5de6\u79fb\uff0c\u76f8\u5f53\u4e8e\u4e58\u4ee52\u7684\u5e42\uff09\u548c\u7d2f\u52a0\u64cd\u4f5c\uff0c\u4ee5\u8ba1\u7b97\u51fa\u4e00\u4e2a\u7d22\u5f15\n        sal     edx, 4  //\u4f4d\u79fb\n        movsx   rcx, edx  //\u5e26\u7b26\u53f7\u6269\u5c55\n        mov     edx, DWORD PTR [rbp-32]\n        sal     edx, 2\n        movsx   rdx, edx\n        add     rcx, rdx  //\u7d2f\u52a0\n        mov     edx, DWORD PTR [rbp-28]\n        movsx   rdx, edx\n        add     rdx, rcx\n        sal     rdx, 3\n        add     rax, rdx\n        vmovsd  xmm1, QWORD PTR [rax]  //\u4f7f\u7528\u8fd9\u4e2a\u7d22\u5f15\u52a0\u4e0arax\u4e2d\u7684\u57fa\u5730\u5740\uff0c\u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u4ece\u8be5\u5730\u5740\u52a0\u8f7d\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0864\u4f4d\uff0cQWORD\uff09\u5230xmm1  \n\n        ...  \n\n        cdqe  //\u5c0632\u4f4d\u5bc4\u5b58\u5668\uff08\u5982eax\uff09\u7684\u503c\u7b26\u53f7\u6269\u5c55\u523064\u4f4d\u5bc4\u5b58\u5668\uff08\u5982rax\uff09\n        lea     rdx, [rsi+rax]  //\u8ba1\u7b97rsi\u548crax\u4e24\u4e2a\u5bc4\u5b58\u5668\u503c\u7684\u548c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728rdx\u5bc4\u5b58\u5668\u4e2d\n\n        ...\n\n        vmovsd  xmm2, QWORD PTR [rax]\n\n        ...\n\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmulsd  xmm0, xmm2, xmm0  //\u6267\u884c\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u4e58\u6cd5\u64cd\u4f5c\u3002\u5b83\u5c06xmm2\u5bc4\u5b58\u5668\u548cxmm0\u5bc4\u5b58\u5668\u4e2d\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u56dexmm0\u5bc4\u5b58\u5668\u4e2d  \n\n        ...  \n\n        vaddsd  xmm0, xmm1, xmm0\n        vmovsd  QWORD PTR [rax], xmm0\n        add     DWORD PTR [rbp-36], 1  //\u5faa\u73af\u53d8\u91cf\u7d2f\u52a0\n.L14:\n        cmp     DWORD PTR [rbp-36], 11  //\u5224\u65ad\u5faa\u73af\u662f\u5426\u7ed3\u675f\n        jle     .L15\n        add     DWORD PTR [rbp-32], 1\n.L13:\n        cmp     DWORD PTR [rbp-32], 3\n        jle     .L16\n        add     DWORD PTR [rbp-28], 1\n.L12:\n        cmp     DWORD PTR [rbp-28], 3\n        jle     .L17\n        add     DWORD PTR [rbp-24], 1\n.L11:\n        cmp     DWORD PTR [rbp-24], 9999999\n        jle     .L18\n</code></pre> <p>AVX\u6307\u4ee4\u96c6\u5b9e\u73b0\u7684\u6c47\u7f16\u4ee3\u7801  </p> <pre><code>        mov     DWORD PTR [rbp-40], 0\n        jmp     .L19\n.L35:\n        ...\n\n        vxorpd  xmm0, xmm0, xmm0  //\u5bf9\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6267\u884c\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09\u64cd\u4f5c\u3002\u4e0d\u8fc7\uff0c\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u6e90\u64cd\u4f5c\u6570\u548c\u76ee\u6807\u64cd\u4f5c\u6570\u90fd\u662f\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\uff08xmm0\uff09\uff0c\u8fd9\u6761\u6307\u4ee4\u7684\u6548\u679c\u5b9e\u9645\u4e0a\u662f\u5c06xmm0\u5bc4\u5b58\u5668\u4e2d\u7684\u6240\u6709\u4f4d\u90fd\u8bbe\u7f6e\u4e3a0\u3002\n        vmovapd YMMWORD PTR [rbp-112], ymm0  //\u5c06ymm0\u5bc4\u5b58\u5668\u4e2d\u5b58\u50a8\u7684256\u4f4d\uff0832\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u79fb\u52a8\u5230\u7531rbp-112\u6307\u5b9a\u7684\u5185\u5b58\u5730\u5740\u5904\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-144], ymm0\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-176], ymm0\n        vxorpd  xmm0, xmm0, xmm0\n        vmovapd YMMWORD PTR [rbp-208], ymm0\n        mov     DWORD PTR [rbp-44], 0\n        jmp     .L24\n.L34:\n        mov     rax, QWORD PTR [rbp-56]\n        lea     rdx, [rax+8]\n        mov     QWORD PTR [rbp-56], rdx\n        vmovsd  xmm0, QWORD PTR [rax]\n        vmovsd  QWORD PTR [rbp-264], xmm0\n\n        ...\n\n        vmovupd ymm0, YMMWORD PTR [rax]  //\u4ecerax\u6307\u5411\u7684\u5730\u5740\u52a0\u8f7d256\u4f4d\uff0832\u5b57\u8282\uff09\u7684\u672a\u5bf9\u9f50\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5230ymm0\u5bc4\u5b58\u5668\u3002\n        vmovapd YMMWORD PTR [rbp-336], ymm0  //\u5c06ymm0\u5bc4\u5b58\u5668\u4e2d\u7684256\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5b58\u50a8\u5230\u6808\u4e0a\u7684rbp-336\u4f4d\u7f6e\n        vmovsd  xmm0, QWORD PTR [rbp-264]  //\u4ece\u6808\u4e0a\u7684rbp-264\u4f4d\u7f6e\u52a0\u8f7d\u4e00\u4e2a64\u4f4d\uff088\u5b57\u8282\uff09\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u5230xmm0\u5bc4\u5b58\u5668\u7684\u4f4e64\u4f4d\u3002\n        vmovsd  QWORD PTR [rbp-952], xmm0  //\u5c06xmm0\u5bc4\u5b58\u5668\u4e2d\u768464\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u636e\u5b58\u50a8\u5230\u6808\u4e0a\u7684rbp-952\u4f4d\u7f6e\n        vbroadcastsd    ymm0, QWORD PTR [rbp-952]\n        vmovapd YMMWORD PTR [rbp-368], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-368]\n\n        ...\n\n        vmovapd ymm0, YMMWORD PTR [rbp-944]\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-880]  //\u6267\u884c\u4e00\u4e2a\u4e09\u64cd\u4f5c\u6570\u7684\u6d6e\u70b9\u4e58\u6cd5\u52a0\u6cd5\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u5c06ymm1\u5bc4\u5b58\u5668\u4e2d\u7684\u6bcf\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4e0erbp-880\u5730\u5740\u5904\u7684\u76f8\u5e94\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u76f8\u4e58\uff0c\u7136\u540e\u5c06\u4e58\u79ef\u52a0\u5230ymm0\u5bc4\u5b58\u5668\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4e0a\n        nop\n        vmovapd YMMWORD PTR [rbp-112], ymm0  \n        vmovsd  xmm0, QWORD PTR [rbp-272]\n\n        ...\n\n        vfmadd231pd     ymm0, ymm1, YMMWORD PTR [rbp-496]\n        nop\n        vmovapd YMMWORD PTR [rbp-208], ymm0\n        add     DWORD PTR [rbp-44], 1\n.L24:\n        cmp     DWORD PTR [rbp-44], 11\n        jle     .L34\n        mov     rax, QWORD PTR [rbp-256]\n        mov     QWORD PTR [rbp-1144], rax\n        vmovapd ymm0, YMMWORD PTR [rbp-112]\n        vmovapd YMMWORD PTR [rbp-1200], ymm0\n        vmovapd ymm0, YMMWORD PTR [rbp-1200]\n        mov     rax, QWORD PTR [rbp-1144]\n        vmovupd YMMWORD PTR [rax], ymm0\n        nop\n        mov     rax, QWORD PTR [rbp-256]\n        add     rax, 32\n\n        ...\n\n.L19:\n        cmp     DWORD PTR [rbp-40], 9999999\n        jle     .L35\n</code></pre> <p>\u5176\u5b9e\u6211\u4e5f\u770b\u4e0d\u51fa\u4ec0\u4e48\u4e1c\u897f\u6765\u3002<code>for</code> \u5faa\u73af\u7684\u5b9e\u73b0\u4e2d <pre><code>*(c + n * 16 + i * 4 + k) += *(a + n * 48 + i * 12 + j) * *(b + n * 48 + j * 4 + k);\n</code></pre> \u6c47\u7f16\u4ee3\u7801\u4f1a\u5f88\u590d\u6742\uff0c\u5148\u628an,i,j,k\u53d6\u51fa\u6765\uff0c\u79fb\u4f4d\uff0c\u7b97\u7d22\u5f15\uff0c\u53d6\u6570\u636e\uff0c\u76f8\u4e58\uff0c\u7d2f\u52a0\uff1b AVX\u7684\u5b9e\u73b0\u4e2d\u5c06\u539f\u6765\u7684\u56db\u4e2a <code>for</code> \u5faa\u73af\u51cf\u5c11\u5230\u4e86\u4e24\u4e2a\uff0c\u4f7f\u7528AVX\u6307\u4ee4\u96c6\u540e\u5411\u91cf\u8fd0\u7b97\u4e5f\u6bd4\u8f83\u7b80\u6d01\uff0c\u4f46\u662f\u5411\u91cf\u8fd0\u7b97\u524d\u540e\u7684load\u548c\u91cd\u65b0\u5199\u5165\u5185\u5b58\u7684\u5f00\u9500\u660e\u663e\u66f4\u591a\uff0c\u5bf9\u5185\u5b58\u7684\u8bfb\u5199\u5e94\u8be5\u662f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u3002  </p>"},{"location":"HPC%20101/Lab%20Reports/lab2.5%20report/lab2.5%20report/#5","title":"5. \u9644\u4ef6","text":"<ul> <li>\u4f18\u5316\u540e\u7684c++\u4ee3\u7801\uff1amulti_pro.cpp  </li> <li>multi_pro.cpp\u901a\u8fc7godbolt\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\uff1amulti_pro.asm  </li> </ul>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/","title":"Lab3 Report","text":""},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#1","title":"1. \u5b9e\u9a8c\u7b80\u4ecb","text":"<p>\u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08General matrix multiply, GEMM\uff09\u662f BLAS (Basic Linear Algebra Subprograms\uff0c\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u7a0b\u5e8f\u96c6) \u4e2d\u7ecf\u5178\u7684\u5b50\u7a0b\u5e8f\u4e4b\u4e00\u3002\u4f5c\u4e3a\u5f53\u4eca\u79d1\u5b66\u8ba1\u7b97\u6700\u5e38\u89c1\u7684\u8ba1\u7b97\u4efb\u52a1\u4e4b\u4e00\uff0cGEMM \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u77e9\u9635\u4e58\u6cd5\u3002</p> <p>\u5b9e\u9a8c\u9700\u8981\u4f7f\u7528 CUDA \u5b8c\u6210\u4e00\u4e2a\u9ad8\u6027\u80fd\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 GEMM \u5b9e\u73b0 (sgemm)\uff0c\u5e76\u4f7f\u7528\u81ea\u5df1\u7684\u7a0b\u5e8f\u548c cuBLAS \u7684\u7a0b\u5e8f\u5728\u76f8\u540c\u7684\u8f93\u5165\u4e0b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528\u76f8\u5bf9\u6027\u80fd\u4f5c\u4e3a\u8bc4\u6d4b\u6807\u51c6\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#2","title":"2. \u5b9e\u9a8c\u73af\u5883","text":"<p>\u6709\u4e24\u5f20 A100 40G\uff0c\u4e00\u5f20 A100 80G \u548c\u4e24\u5f20 2080Ti \u663e\u5361\u4f9b\u4f7f\u7528\u3002\u7531\u4e8e\u96c6\u7fa4\u6392\u961f\u4e25\u91cd\uff0c\u9650\u5236\u7a0b\u5e8f\u5728\u67d0\u4e00\u8282\u70b9\u6267\u884c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u56e0\u6b64\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u9650\u5236\u4f7f\u7528\u7684\u663e\u5361\u7c7b\u578b\u3002oj \u6700\u9ad8\u5206\u7684\u6d4b\u8bd5\u4f7f\u7528\u7684\u662f M603 \u8282\u70b9\u7684 NVIDIA A100 80GB \u663e\u5361\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#3","title":"3. \u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#31","title":"3.1 \u95ee\u9898\u63cf\u8ff0","text":"<p>\u8f93\u5165\u77e9\u9635 A B \uff0c\u8ba1\u7b97\u77e9\u9635\u4e58\u79ef <code>C = AB</code> \u3002\u5176\u4e2d A \u7684\u5927\u5c0f\u4e3a <code>M \u00d7 K</code> \uff0c B \u7684\u5927\u5c0f\u4e3a <code>K \u00d7 N</code> \uff0cC \u7684\u5927\u5c0f\u4e3a <code>M \u00d7 N</code> \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0cbaseline \u5bf9\u77e9\u9635\u7684\u5b58\u50a8\u987a\u5e8f\u505a\u4e86\u4e00\u4e9b\u8c03\u6574\u3002\u5176\u4e2d\uff0cA \u77e9\u9635\u4e3a\u884c\u4f18\u5148\u5b58\u50a8\uff0cB \u77e9\u9635\u4e3a\u5217\u4f18\u5148\u5b58\u50a8\uff0cC \u77e9\u9635\u4e3a\u5217\u4f18\u5148\u5b58\u50a8\u3002</p> <p>\u503c\u7684\u4e00\u63d0\u7684\u662f CUDA \u662f\u9488\u5bf9\u5355\u4e2a\u7ebf\u7a0b\u7f16\u7a0b\u7684\uff0c\u6211\u4eec\u7f16\u5199\u7684\u7a0b\u5e8f\u7ea6\u675f\u7684\u662f\u67d0\u4e2a\u7ebf\u7a0b\u7684\u884c\u4e3a\uff0c\u5e76\u4e14\u5bf9\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u662f\u901a\u7528\u7684\uff0c\u8fd9\u4e00\u70b9\u5341\u5206\u91cd\u8981\u3002\u8fd9\u4e00\u60f3\u6cd5\u4e5f\u53ef\u4ee5\u4ece baseline \u7684 <code>sgemm_kernel</code> \u4e2d\u770b\u51fa\uff1a</p> <pre><code>__global__ void sgemm_kernel(const float* __restrict__ A,\n        const float* __restrict__ B, float* __restrict__ C,\n        const int m, const int n, const int k) {\n    int row = blockIdx.y * blockDim.y + threadIdx.y;\n    int col = blockIdx.x * blockDim.x + threadIdx.x;\n\n    if (row &lt; m &amp;&amp; col &lt; n) {\n        float sum = 0.0f;\n        for (int i = 0; i &lt; k; i++) {\n        // \u6bcf\u4e2a thread \u8ba1\u7b97 C \u77e9\u9635\u4e2d\u7684\u4e00\u4e2a\u503c\n        sum += A[row * k + i] * B[i + col * k];  // \u6bcf\u4e2a thread \u904d\u5386 A \u4e2d\u7684\u4e00\u884c\u548c B \u4e2d\u7684\u4e00\u5217\n        }\n        C[row + col * m] = sum;\n    }\n}\n</code></pre> <p>\u53e6\u5916\u9700\u8981\u5173\u6ce8 block \u548c grid \u7684\u914d\u7f6e\uff0c\u6bd4\u5982 baseline \u4e2d\uff1a</p> <pre><code>dim3 block(32, 32);\n    dim3 grid((n + block.x - 1) / block.x, (m + block.y - 1) / block.y);\n    sgemm_kernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(d_A.data().get(), d_B.data().get(), d_C.data().get(), m, n, k);\n</code></pre> <p>\u5bf9\u4e8e CUDA \u7684\u4e09\u7ea7\u5c42\u6b21\u7f16\u7a0b\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u4ece\u8fd9\u5f20\u56fe\u4e2d\u770b\u51fa\uff1a</p> <p></p> <p>baseline \u7684\u7a0b\u5e8f\u4f1a\u56e0\u4e3a\u566a\u97f3\u8fc7\u5927(?)\u5728\u7b2c\u56db\u4e2a sample \u7ed3\u675f\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#32","title":"3.2 \u4f18\u5316","text":""},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#321-step-1","title":"3.2.1 Step 1","text":""},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#smem","title":"SMEM","text":"<p>\u9996\u5148\u5c1d\u8bd5 Global Memory Coalescing \u3002\u5728 CUDA \u4e2d\uff0c\u4e00\u4e2a block \u4e2d\u7ebf\u7a0b\u88ab\u5206\u7ec4\u4e3a Warp \uff0c\u7531 32 \u4e2a\u7ebf\u7a0b\u7ec4\u6210\uff0c\u662f GPU \u6267\u884c\u7684\u6700\u5c0f\u786c\u4ef6\u5355\u5143\u3002</p> <p>\u5c5e\u4e8e\u540c\u4e00 Warp \u7684\u7ebf\u7a0b\u987a\u5e8f\u5185\u5b58\u8bbf\u95ee\u53ef\u4ee5\u5206\u7ec4\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u79f0\u4e3a\u5168\u5c40\u5185\u5b58\u5408\u5e76(global memory coalescing)\uff0c\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u66f4\u5feb\u7684\u5185\u5b58\u8bbf\u95ee\u3002\u4ee5 <code>warpsize = 8</code> \u4e3a\u4f8b(\u5b9e\u9645\u662f 32)\uff0c\u6bd4\u8f83\u5408\u7406\u7684\u5185\u5b58\u8bbf\u95ee\u65b9\u5f0f\u5e94\u5f53\u662f\u8fd9\u6837\uff1a</p> <p></p> <p>\u4f46\u662f\u7531\u4e8e\u6211\u5e76\u4e0d\u662f\u5341\u5206\u7406\u89e3\u8fd9\u6837\u7684\u8bbf\u5b58\u6a21\u5f0f\uff0c\u6240\u4ee5\u6211\u7b2c\u4e00\u6b21\u4f18\u5316\u51fa\u6765\u7684\u7a0b\u5e8f\u5c06 block \u8bbe\u7f6e\u4e3a\u4e86 <code>(32 * 32, 1, 1)</code> \uff0c\u8ba9\u8fd9\u4e2a\u7ec6\u957f\u7684 block \u6cbf\u7740 C \u77e9\u9635\u7684 y \u65b9\u5411\u6392\u5e03\u3002\u8fd9\u6837\u505a\u867d\u7136\u7ed3\u679c\u68c0\u6d4b\u901a\u8fc7\uff0c\u4f46\u65f6\u95f4\u8fc7\u957f\uff0c\u88ab\u6211\u624b\u52a8\u6740\u6389\u4e86\u3002\u53e6\u5916\uff0c\u5c06 A \u6539\u4e3a\u884c\u4e3b\u5e8f\u5b58\u50a8\u4f3c\u4e4e\u5df2\u7ecf\u4e00\u5b9a\u7a0b\u5ea6\u5b9e\u73b0\u4e86\u8fd9\u90e8\u5206\u4f18\u5316(?)</p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#322-step-2","title":"3.2.2 Step 2","text":"<p>GPU \u4e2d\u6709\u4e00\u5757\u5171\u4eab\u5185\u5b58(Shared Memory)\u88ab\u540c\u4e00\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u5171\u4eab\uff0c\u5728\u5b58\u50a8\u5c42\u7ea7\u4e2d\uff0cShared Memory \u4e0e L1 Cache \u540c\u7ea7\uff0c\u5229\u7528 Shared Memory \u5c06\u7ebf\u7a0b\u5757\u7684\u5bc6\u96c6\u8bbf\u5b58\u52a0\u901f\u80fd\u591f\u83b7\u5f97\u6781\u4f4e\u7684\u8bbf\u5b58\u5ef6\u8fdf\u4e14\u5927\u5927\u8282\u7701\u5185\u5b58\u5e26\u5bbd\u3002</p> <p></p> <p>\u5728\u505a GEMM \u65f6\uff0c\u5f88\u591a\u5185\u5b58\u9700\u8981\u91cd\u590d\u8bfb\u53d6\uff0c\u6bd4\u5982\u8ba1\u7b97 C \u4e2d\u67d0\u4e00\u884c\u6570\u636e\u65f6\uff0c\u6240\u9700\u7684 A \u4e2d\u7684\u6570\u636e\u90fd\u662f\u540c\u4e00\u884c\uff0c\u4f46\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8981\u72ec\u81ea\u4ece A \u4e2d(\u4e5f\u5c31\u662f Global Memory \u4e2d)\u8bfb\u53d6\u8fd9\u4e00\u884c\u6570\u636e\uff0c\u9020\u6210\u8be5\u884c\u6570\u636e\u91cd\u590d\u8bfb\u53d6 N \u6b21\u3002</p> <p>\u82e5\u6211\u4eec\u5c06 A \u4e2d\u8fd9\u4e00\u884c\u6570\u636e\u9884\u5148\u5b58\u8fdb SMEM \u4e2d\uff0c\u91cd\u590d\u8bfb\u53d6\u5c31\u53d1\u751f\u5728 SMEM \uff0c\u7531\u4e8e\u5e26\u5bbd\u7684\u589e\u5927\uff0c\u8bbf\u5b58\u901f\u5ea6\u5c31\u4f1a\u6781\u5927\u589e\u5feb\u3002</p> <p>\u4f46\u662f SMEM \u7684\u5bb9\u91cf\u662f\u6709\u9650\u7684\uff0c\u8fdc\u4e0d\u80fd\u5c06\u6574\u4e2a A \u77e9\u9635\u5b58\u5165\u5176\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u5bf9 A \u5206\u5757\uff0c\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a Tiling \u3002\u5bf9\u4e8e C \u4e2d\u6bcf\u4e2a\u5206\u5757\u77e9\u9635 BM \\(\\times\\) BN \uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97 BM \\(\\times\\) K \u4e0e K \\(\\times\\) BN \u7684\u77e9\u9635\u4e58\u79ef\u3002Tiling \u7684\u597d\u5904\u662f\u5c06\u8bbf\u5b58\u548c\u8ba1\u7b97\u64cd\u4f5c\u5206\u79bb\uff0c\u63d0\u9ad8\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u5ea6(ILP)\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u3002</p> <p>\u8003\u8651\u5230\u77e9\u9635\u662f 8192 \\(\\times\\) 8192 \u7684\u89c4\u6a21\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u5bf9BM \\(\\times\\) K \u4e0e K \\(\\times\\) BN \u7684\u77e9\u9635\u5206\u5757\uff0c\u5c06\u5c0f\u5206\u5757 BM \\(\\times\\) BK \u4e0e BK \\(\\times\\) BN \u5b58\u5165 SMEM\uff0c\u5e76\u904d\u5386\u5927\u5206\u5757\u3002</p> <p></p> <p>\u4e0e\u6700\u521d\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\u8ba1\u7b97 C \u77e9\u9635\u4e2d\u7684\u4e00\u4e2a\u503c\u4e0d\u540c\uff0c\u6b64\u65f6\u6211\u4eec\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u8ba1\u7b97\u7684\u662f C \u4e2d\u7684\u4e00\u4e2a TM \\(\\times\\) TN \u7684\u77e9\u9635\uff0c\u5176\u4e2d TM \u548c TN \u7684\u503c\u53ef\u4ee5\u7531\u4ee5\u4e0b\u516c\u5f0f\u786e\u5b9a\uff1a</p> <pre><code>TM = BM / blockDim.x\nTN = BN / blockDim.y\n</code></pre> <p>\u81f3\u6b64\uff0c\u53ef\u4ee5\u5f52\u7eb3\u4e00\u4e0b\u5206\u5757\u4f7f\u7528\u5230\u7684\u76f8\u5173\u53c2\u6570\uff1a</p> <pre><code>\u5c0f\u5206\u5757          \uff1aBM * BK  BK * BN\n\u5927\u5206\u5757          \uff1aBM * K   K  * BN\nC \u77e9\u9635\u5206\u5757      \uff1aBM * BN\n\u6bcf\u4e2a thread \u8ba1\u7b97\uff1aTM * TN\n</code></pre> <p>\u6bcf\u4e2a\u7ebf\u7a0b\u6bcf\u8f6e\u5faa\u73af\u9700\u8981\u505a\u7684\u64cd\u4f5c\uff1a <pre><code>1. \u4ece A B \u4e2d\u52a0\u8f7d\u4e00\u5b9a\u6570\u91cf\u6570\u636e\u5230 SMEM\n2. \u4ece SMEM \u4e2d\u53d6\u51fa\u5bf9\u5e94\u503c\u76f8\u4e58\u5e76\u7d2f\u52a0\uff0c\u5faa\u73af\u7b97\u51fa TM * TN \u4e2a\u503c\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#_1","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u7b2c\u4e00\u4e2a\u7248\u672c\u8bbe\u5b9a\u7684\u53c2\u6570\u5927\u5c0f\uff1a</p> <pre><code>const int BM = 128;\nconst int BN = 128;\nconst int BK = 8;\n\nconst int TM = 4;\nconst int TN = 4;\n</code></pre> <p>\u8fd9\u6837\u5bf9\u5e94\u6bcf\u4e2a\u7ebf\u7a0b\u9700\u8981\u4ece A B \u4e2d\u5206\u522b\u53d6\u51fa\u4e00\u4e2a\u6570\u5b58\u5165 SMEM \uff0c\u8ba1\u7b97 C \u4e2d 4 * 4 \u7684\u5206\u5757\u3002</p> <p>\u5728\u8fd9\u91cc\u9047\u5230\u4e86\u56f0\u6270\u6211\u6574\u6574\u4e00\u5929\u7684\u62a5\u9519\uff1a</p> <p></p> <p>\u7531\u4e8e\u8c03\u8bd5\u4fe1\u606f\u6781\u5176\u6709\u9650\uff0c\u867d\u7136\u4f7f\u7528\u4e86 compute-sanitizer \uff0c\u4f46\u662f\u7ed9\u51fa\u7684\u5730\u5740\u4fe1\u606f\u8fc7\u4e8e\u539f\u59cb\u3002\u6700\u540e\u60f3\u5230\u76f4\u63a5\u5e26\u5165\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u6a21\u62df\u8bbf\u5b58\uff0c\u53d1\u73b0\u662f\u8bbe\u7f6e grid \u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u6bcf\u4e2a\u7ebf\u7a0b\u8ba1\u7b97\u7684\u662f TM * TN \u7684\u5206\u5757\uff0c\u5bfc\u81f4\u5b9a\u4e49\u7684 block \u8fc7\u591a\uff0c\u591a\u51fa\u7684\u7ebf\u7a0b\u8bbf\u95ee A B \u77e9\u9635\u4e4b\u5916\u7684\u5185\u5b58\u5f15\u8d77\u9519\u8bef\u3002</p> <p>oj \u5f97\u5206 62.99 \uff0c\u4f7f\u7528 NVIDIA A100-PCIE-40GB <pre><code>#include \"gemm.cuh\"\n\n__global__ void sgemm_kernel(const float* __restrict__ A,\n                             const float* __restrict__ B, float* __restrict__ C,\n                             const int m, const int n, const int k) {\n    // \u8bbe\u7f6e\u5c0f block \u53c2\u6570\uff0c\u4e5f\u662f\u5f00\u8f9f\u7684 shared memory \u7a7a\u95f4\u5927\u5c0f\n    const int BM = 128;\n    const int BN = 128;\n    const int BK = 8;\n\n    // \u6bcf\u4e2a thread \u5904\u7406\u7ed3\u679c\u77e9\u9635\u4e2d 4 * 4 \u7684\u6570\u636e\n    const int TM = 4;\n    const int TN = 4;\n\n    const int tid = threadIdx.y * blockDim.x + threadIdx.x; // thread \u5728\u5bf9\u5e94 block \u4e2d\u7684 id\n\n    __shared__ float sub_a[BM][BK];\n    __shared__ float sub_b[BK][BN];\n\n    float r_c[TM][TN] = {0.0};\n\n    int a_smem_row = tid / 8 ;\n    int a_smem_col = tid % 8;\n    int b_smem_row = tid % 8;\n    int b_smem_col = tid / 8;\n\n    int a_gmem_row = blockIdx.y * BM + a_smem_row;\n    int b_gmem_col = blockIdx.x * BN + b_smem_col;\n\n    for (int bk = 0; bk &lt; k / BK; bk++){\n        int a_gmem_col = bk * BK + a_smem_col;\n        int b_gmem_row = bk * BK + b_smem_row;\n\n        sub_a[a_smem_row][a_smem_col] = A[a_gmem_row * k + a_gmem_col];\n        sub_b[b_smem_row][b_smem_col] = B[b_gmem_col * k + b_gmem_row];\n\n        __syncthreads();\n\n        #pragma unroll\n        for (int K = 0; K &lt; BK; K++){\n            #pragma unroll\n            for(int M = 0; M &lt; TM; M++){\n                #pragma unroll\n                for(int N = 0; N &lt; TN; N++){\n                    r_c[M][N] += sub_a[threadIdx.y * TM + M][K] * sub_b[K][threadIdx.x * TN + N];\n                }\n            }\n        }\n        __syncthreads();\n    }\n\n    #pragma unroll\n    for(int j = 0; j &lt; TN; j++){\n        int c_gmem_col = blockIdx.x * BN + threadIdx.x * TN + j;\n        #pragma unroll\n        for(int i = 0; i &lt; TM; i++){\n            int c_gmem_row = blockIdx.y * BM + threadIdx.y * TN + i;\n            C[c_gmem_row + c_gmem_col * m] = r_c[i][j];\n        }\n    }\n}\n\ntemplate &lt;&gt;\nvoid run_custom&lt;float&gt;(thrust::device_vector&lt;float&gt;&amp; d_A,\n                       thrust::device_vector&lt;float&gt;&amp; d_B,\n                       thrust::device_vector&lt;float&gt;&amp; d_C, const int m,\n                       const int n, const int k) {\n\n    dim3 block(32 , 32);\n    dim3 grid((n + block.x - 1) / (block.x * 4), (m + block.y - 1) / (block.y * 4));\n    sgemm_kernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(d_A.data().get(),\n                                  d_B.data().get(),\n                                  d_C.data().get(), m, n, k);\n}\n</code></pre></p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#323-step-3","title":"3.2.3 Step 3","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u53ea\u4ece A B \u4e2d\u5404\u52a0\u8f7d 1 \u4e2a\u6570\u636e\u5230 SMEM \u662f\u5f88\u6d6a\u8d39\u7684\uff0c\u5f97\u76ca\u4e8e\u5bf9 A \u77e9\u9635\u7684\u8f6c\u7f6e\uff0c\u53ef\u4ee5\u60f3\u5230\u5e94\u8be5\u5c1d\u8bd5\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u50cf AVX \u6307\u4ee4\u4e00\u6837\u540c\u65f6\u52a0\u8f7d\u591a\u4e2a\u8fde\u7eed\u7684\u6570\u636e\uff0c\u901a\u8fc7\u4fee\u6539\u53c2\u6570\u8bbe\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u52a0\u8f7d 4 \u4e2a\u6570\u636e\u5230 SMEM \uff0c\u5e76\u624b\u52a8\u8fdb\u884c\u5411\u91cf\u5316\u5c55\u5f00\u3002</p> <p>oj \u5f97\u5206 75.36\uff0c\u4f7f\u7528 NVIDIA A100-PCIE-40GB</p> <pre><code>#include \"gemm.cuh\"\n\n__global__ void sgemm_kernel(const float* __restrict__ A,\n                             const float* __restrict__ B, float* __restrict__ C,\n                             const int m, const int n, const int k) {\n    // \u8bbe\u7f6e\u5c0f block \u53c2\u6570\uff0c\u4e5f\u662f\u5f00\u8f9f\u7684 shared memory \u7a7a\u95f4\n    const int BM = 128;\n    const int BN = 128;\n    const int BK = 8;\n\n    // \u6bcf\u4e2a thread \u5904\u7406\u7ed3\u679c\u77e9\u9635\u4e2d 8 * 8 \u7684\u6570\u636e\n    const int TM = 8;\n    const int TN = 8;\n\n    const int tid = threadIdx.y * blockDim.x + threadIdx.x; // thread \u5728\u5bf9\u5e94 block \u4e2d\u7684 id\n\n    __shared__ float sub_a[BM][BK];\n    __shared__ float sub_b[BK][BN];\n\n    float r_c[TM][TN] = {0.0};\n\n    int a_smem_row = tid &gt;&gt; 1;\n    int a_smem_col = (tid &amp; 1) &lt;&lt; 2;\n    int b_smem_row = (tid &amp; 1) &lt;&lt; 2;\n    int b_smem_col = tid &gt;&gt; 1;\n\n    int a_gmem_row = blockIdx.y * BM + a_smem_row;\n    int b_gmem_col = blockIdx.x * BN + b_smem_col;\n\n    for (int bk = 0; bk &lt; (k + BK - 1) / BK; bk++){\n        int a_gmem_col = bk * BK + a_smem_col;\n        int b_gmem_row = bk * BK + b_smem_row;\n\n        // \u624b\u52a8\u5411\u91cf\u5316\u5c55\u5f00\u8bbf\u95ee\n        sub_a[a_smem_row][a_smem_col] = A[a_gmem_row * k + a_gmem_col];\n        sub_a[a_smem_row][a_smem_col + 1] = A[a_gmem_row * k + a_gmem_col + 1];\n        sub_a[a_smem_row][a_smem_col + 2] = A[a_gmem_row * k + a_gmem_col + 2];\n        sub_a[a_smem_row][a_smem_col + 3] = A[a_gmem_row * k + a_gmem_col + 3];\n\n        sub_b[b_smem_row][b_smem_col] = B[b_gmem_col * k + b_gmem_row];\n        sub_b[b_smem_row + 1][b_smem_col] = B[b_gmem_col * k + b_gmem_row + 1];\n        sub_b[b_smem_row + 2][b_smem_col] = B[b_gmem_col * k + b_gmem_row + 2];\n        sub_b[b_smem_row + 3][b_smem_col] = B[b_gmem_col * k + b_gmem_row + 3];\n\n        __syncthreads();\n\n        #pragma unroll\n        for (int K = 0; K &lt; BK; K++){\n            #pragma unroll\n            for(int M = 0; M &lt; TM; M++){\n                #pragma unroll\n                for(int N = 0; N &lt; TN; N++){\n                    r_c[M][N] += sub_a[threadIdx.y * TM + M][K] * sub_b[K][threadIdx.x * TN + N];\n                }\n            }\n        }\n        __syncthreads();\n    }\n\n    #pragma unroll\n    for(int j = 0; j &lt; TN; j++){\n        int c_gmem_col = blockIdx.x * BN + threadIdx.x * TN + j;\n        #pragma unroll\n        for(int i = 0; i &lt; TM; i+= 4){\n            int c_gmem_row = blockIdx.y * BM + threadIdx.y * TM + i;\n\n            C[c_gmem_row + c_gmem_col * m] = r_c[i][j];\n            C[c_gmem_row + c_gmem_col * m + 1] = r_c[i + 1][j];\n            C[c_gmem_row + c_gmem_col * m + 2] = r_c[i + 2][j];\n            C[c_gmem_row + c_gmem_col * m + 3] = r_c[i + 3][j];\n        }\n    }\n}\n\ntemplate &lt;&gt;\nvoid run_custom&lt;float&gt;(thrust::device_vector&lt;float&gt;&amp; d_A,\n                       thrust::device_vector&lt;float&gt;&amp; d_B,\n                       thrust::device_vector&lt;float&gt;&amp; d_C, const int m,\n                       const int n, const int k) {\n\n    dim3 block(16, 16);\n    dim3 grid((n + block.x - 1) / (block.x * 8), (m + block.y - 1) / (block.y * 8));\n    sgemm_kernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(d_A.data().get(),\n                                  d_B.data().get(),\n                                  d_C.data().get(), m, n, k);\n}\n</code></pre> <p>\u57fa\u4e8e\u8fd9\u4e00\u7248\u672c\uff0c\u6211\u8fd8\u5c1d\u8bd5\u4e86\u5176\u4ed6\u53c2\u6570\u8bbe\u5b9a\uff1a</p> <p>oj \u5f97\u5206 73.62\uff0c\u4f7f\u7528 NVIDIA A100-PCIE-40GB</p> <pre><code>const int BM = 128;\nconst int BN = 128;\nconst int BK = 32;\n\nconst int TM = 4;\nconst int TN = 4;\n\ndim3 block(32, 32);\ndim3 grid((n + block.x - 1) / (block.x * 4), (m + block.y - 1) / (block.y * 4));\n</code></pre> <p>\u66f4\u8fdb\u4e00\u6b65\uff0c\u65e2\u7136\u5df2\u7ecf\u624b\u52a8\u5411\u91cf\u5316\u5c55\u5f00\u4e86\uff0c\u53ef\u4ee5\u4f7f\u7528 CUDA \u4e2d\u7684 <code>float4</code> \u6570\u636e\u7c7b\u578b\u3002</p> <p>oj \u5f97\u5206 86.07\uff0c\u4f7f\u7528 NVIDIA A100 80GB PCIe</p> <pre><code>float4 tmpA = *reinterpret_cast&lt;float4 *&gt;(&amp;A[a_gmem_row * k + a_gmem_col]);\nsub_a[a_smem_row][a_smem_col] = tmpA.x;\nsub_a[a_smem_row][a_smem_col + 1] = tmpA.y;\nsub_a[a_smem_row][a_smem_col + 2] = tmpA.z;\nsub_a[a_smem_row][a_smem_col + 3] = tmpA.w;\n\n// \u6216\u76f4\u63a5 *reinterpret_cast&lt;float4*&gt;(&amp;sub_a[a_smem_row][a_smem_col]) = *reinterpret_cast&lt;float4 *&gt;(&amp;A[a_gmem_row * k + a_gmem_col])\n// \u4e8c\u8005\u5728\u6027\u80fd\u4e0a\u6ca1\u6709\u660e\u663e\u5dee\u8ddd\n\nfloat4 tmpB = *reinterpret_cast&lt;float4 *&gt;(&amp;B[b_gmem_col * k + b_gmem_row]);\nsub_b[b_smem_row][b_smem_col] = tmpB.x;\nsub_b[b_smem_row + 1][b_smem_col] = tmpB.y;\nsub_b[b_smem_row + 2][b_smem_col] = tmpB.z;\nsub_b[b_smem_row + 3][b_smem_col] = tmpB.w;\n\nfloat4* C_float4 = reinterpret_cast&lt;float4*&gt;(&amp;C[c_gmem_row + c_gmem_col * m]);\nfloat4 r_c_vec = make_float4(r_c[i][j], r_c[i + 1][j], r_c[i + 2][j], r_c[i + 3][j]);\nC_float4[0] = r_c_vec;\n</code></pre> <p>\u57fa\u4e8e\u8fd9\u4e00\u7248\u672c\uff0c\u6211\u8fd8\u5c1d\u8bd5\u4e86\u5176\u4ed6\u53c2\u6570\u8bbe\u5b9a\uff1a</p> <p>oj \u5f97\u5206 85.95\uff0c\u4f7f\u7528 NVIDIA A100-PCIE-40GB</p> <pre><code>const int BM = 64;\nconst int BN = 64;\nconst int BK = 16;\n\nconst int TM = 4;\nconst int TN = 4;\n\ndim3 block(32, 32);\ndim3 grid((n + block.x - 1) / (block.x * 4), (m + block.y - 1) / (block.y * 4));\n</code></pre> <p>\u7531\u4e8e\u65f6\u95f4\u6709\u9650\uff0c\u6211\u7684\u4f18\u5316\u544a\u4e00\u6bb5\u843d\u3002\u6700\u597d\u7684 oj \u5f97\u5206\u4e3a\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#4","title":"4. \u601d\u8003\u9898","text":"<pre><code>1. \u5982\u4f55\u8ba1\u7b97 GEMM \u7684 Flops \u6570\uff1f\u4f60\u7684\u5b9e\u73b0\u548c cublas \u7684\u5b9e\u73b0\u7684 Flops \u5206\u522b\u662f\u591a\u5c11\uff1f\n\n\u53ef\u4ee5\u5148\u8ba1\u7b97\u6d6e\u70b9\u8fd0\u7b97\u6b21\u6570 FLOPS = 2 * M * N * K \uff0c\u518d\u9664\u4ee5\u8ba1\u7b97\u65f6\u95f4 t\n\nmax bench: 16.183 TFLOPS, max cublas: 18.8029 TFLOPS.\n</code></pre> <pre><code>2. sgemm \u5728 2080Ti \u548c A100-80G \u4e0a\u7684\u7406\u8bba\u6027\u80fd\u4e0a\u9650\u662f\u591a\u5c11\uff08\u5373 2080Ti \u548c A100-80G \u7684 FP32 \u7b97\u529b\u662f\u591a\u5c11\uff09\uff1f\u4f60\u53ef\u4ee5\u5728 [13] [14] \u4e2d\u627e\u5230\u7b54\u6848\u3002\n\n2080Ti \u662f 14.2 TFLOPS1\nA100-80G \u662f 19.5 TFLOPS1\n</code></pre> <pre><code>3. \u8f6c\u7f6e\u5176\u4e2d\u4e00\u4e2a\u77e9\u9635\u7684\u64cd\u4f5c\u5bf9\u63d0\u9ad8\u8bbf\u5b58\u6027\u80fd\u6709\u4ec0\u4e48\u5e2e\u52a9\uff08\u6216\u8005\u4f60\u89c9\u5f97\u6709\u6ca1\u6709\u4ec0\u4e48\u66f4\u597d\u65b9\u6cd5\uff09\uff1f\u63d0\u793a\uff1a\u8003\u8651 L2 Cache \u548c Memory Coalescing\u3002\n\n\u8f6c\u7f6e\u540e\u4ece A \u8bfb\u53d6\u4e00\u884c\u6570\u636e\u7684\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5b58\u50a8\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u4ece\u800c\u66f4\u5927\u7a0b\u5ea6\u5730\u5229\u7528 L2 Cache\uff0c\u51cf\u5c11 cache miss\u3002\n\u5bf9\u4e8e\u6211\u7684\u4ee3\u7801\uff0cA \u7684\u8f6c\u7f6e\u6709\u52a9\u4e8e\u6211\u5b9e\u73b0\u5411\u91cf\u5316\u7684\u8bbf\u5b58\u3002\n\u5728 Step 1 \u4e2d\u63d0\u5230\u7684 Global Memory Coalescing \uff0c\u80fd\u8ba9\u5c5e\u4e8e\u540c\u4e00 Warp \u7684\u7ebf\u7a0b\u987a\u5e8f\u8bbf\u95ee\u5185\u5b58\u3002\n</code></pre> <pre><code>4. Tiling \u5728\u4f18\u5316 GEMM \u4e2d\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u63d0\u9ad8\u6027\u80fd\uff1f\n\nTiling \u53ef\u4ee5\u7f29\u5c0f\u9700\u8981\u4e00\u6b21\u5b58\u5165 Shared Memory \u4e2d\u7684\u6570\u636e\u91cf\uff0c\u907f\u514d Shared Memory \u4e0d\u8db3\u3002\u540c\u65f6\u5c06\u8bbf\u5b58\u548c\u8ba1\u7b97\u64cd\u4f5c\u5206\u79bb\uff0c\u63d0\u9ad8\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u5ea6(ILP)\n</code></pre> <pre><code>5. \u4f60\u9009\u62e9\u4e86\u600e\u6837\u7684 Tiling \u914d\u7f6e\uff1f\n\nconst int BM = 128;\nconst int BN = 128;\nconst int BK = 8;\nconst int TM = 8;\nconst int TN = 8;\n</code></pre> <pre><code>6. \u4f60\u7684\u4ee3\u7801\u5bf9 Global Memory \u7684\u8bbf\u5b58\u91cf\u662f\u591a\u5927\uff1f\n\nM * N * K * (1 / BM + 1 / BN) \u7ea6\u7b49\u4e8e 8600000000\n</code></pre> <pre><code>7. \u901a\u8fc7 Nsight Compute \u5de5\u5177\uff0c\u67e5\u770b Baseline \u4ee3\u7801\u5728 M=N=K=1024 \u4e0b\u7684 Global Memory \u7684\u8bbf\u5b58\u91cf\uff0c\u6bd4\u8f83\u5b83\u4eec\u548c cublas \u4ee3\u7801\u7684\u8bbf\u5b58\u91cf\u5dee\u5f02\u3002\u56de\u987e\u4e0a\u9762 Tiling \u4e00\u8282\u4e2d\u6240\u8bb2\uff0c\u4e0d\u505a Tiling \u7684 Baseline \u662f\u5426\u771f\u7684\u5b58\u5728 Global Memory \u8bbf\u5b58\u4e0a\u7684\u5197\u4f59\uff1f\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8fd9\u79cd\u5197\u4f59\uff1f\n\n\u6839\u636e lab \u6587\u6863\u4e2d\u7684\u89e3\u91ca\uff1a\u8bbf\u5b58\u548c\u8ba1\u7b97\u64cd\u4f5c\u4ea4\u66ff\u6267\u884c\u9020\u6210\u7684\u6570\u636e\u4f9d\u8d56\u4f7f\u5f97\u6307\u4ee4\u7ea7\u5e76\u884c\u5ea6 (ILP) \u5f88\u5dee\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\uff0c\u800c Tiling \u6280\u672f\u5c06\u8bbf\u5b58\u548c\u8ba1\u7b97\u64cd\u4f5c\u5206\u79bb\uff0c\u63d0\u9ad8\u4e86 ILP\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u3002\n</code></pre> <pre><code>8. FP32 \u7684\u77e9\u9635\u4e58 (sgemm) \u80fd\u5426\u7528 Tensor Core \u52a0\u901f\uff1f\u4e3a\u4ec0\u4e48\uff1f\n\n\u4e0d\u80fd\uff0c\u56e0\u4e3a Tensor Core \u662f\u7528\u4e8e\u6df7\u5408\u7cbe\u5ea6\u7684\uff0c\u5728\u5e95\u5c42\u786c\u4ef6\u7b97\u5b50\u5c42\u9762\uff0c\u4f7f\u7528\u534a\u7cbe\u5ea6\uff08FP16\uff09\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4f7f\u7528\u5168\u7cbe\u5ea6\uff08FP32\uff09\u8fdb\u884c\u4e2d\u95f4\u7ed3\u679c\u8ba1\u7b97\u4ece\u800c\u4e0d\u635f\u5931\u8fc7\u591a\u7cbe\u5ea6\u7684\u6280\u672f\uff0c\u800c\u4e0d\u662f\u7f51\u7edc\u5c42\u9762\u65e2\u6709 FP16 \u53c8\u6709 FP32\u3002\u5bf9\u4e8e CUDA Runtime API \u7684\u63a5\u53e3\uff0cwmma \u63a5\u53e3\u9650\u5236\u4e86\u77e9\u9635\u7684\u5f62\u72b6\u90fd\u662f 16\u00d716\uff0c\u4ee5\u53ca\u8f93\u5165\u6570\u636e\u90fd\u662f half \u534a\u7cbe\u5ea6\u7c7b\u578b\u3002\uff08\u7f51\u4e0a\u67e5\u5230\u7684\u8d44\u6599\uff0c\u4f46\u5177\u4f53\u5e76\u4e0d\u4e86\u89e3qwq\uff09\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab3%20report/lab3%20report/#5","title":"5. \u53c2\u8003\u8d44\u6599","text":"<p>How to Optimize a CUDA Matmul Kernel for cuBLAS-like Performance: a Worklog</p> <p>\u4ece\u5565\u4e5f\u4e0d\u4f1a\u5230CUDA GEMM\u4f18\u5316</p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/","title":"Lab4 Report","text":""},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#1","title":"1. \u5b9e\u9a8c\u4ecb\u7ecd","text":"<p>BiCGSTAB (Biconjugate gradient stabilized method, \u7a33\u5b9a\u53cc\u5171\u8f6d\u68af\u5ea6\u6cd5) \u6b63\u662f\u4e00\u79cd\u8fed\u4ee3\u6c42\u89e3\u975e\u5bf9\u79f0\u7ebf\u6027\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002\u5b83\u662f BiCG (Biconjuagate gradient method, \u53cc\u5171\u8f6d\u68af\u5ea6\u6cd5) \u7684\u53d8\u79cd\uff0c\u6709\u7740\u66f4\u5feb\u901f\u5e73\u7f13\u7684\u6536\u655b\u8868\u73b0\u3002</p> <p>\u6211\u4eec\u9700\u8981\u5bf9 baseline \u4e2d\u7684 <code>solver.c</code> \u8fdb\u884c\u4f18\u5316\uff0c\u5e76\u5728\u4f7f\u7528 MPI \u65f6\u5728 <code>main.c</code> \u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684\u4ee3\u7801\u3002</p> <p>data \u90e8\u5206\u7ed9\u51fa\u4e86\u4e09\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6570\u636e\u89c4\u6a21\u5206\u522b\u4e3a 2001 \\(\\times\\) 2001\uff0c 4001 \\(\\times\\) 4001\uff0c6001 \\(\\times\\) 6001\u3002</p> <p>\u786c\u4ef6\u73af\u5883\u662f Slurm \u4e0a\u7684 Solver \u5206\u533a\uff0c\u5c06\u63d0\u4f9b 3 \u4e2a\u8282\u70b9 (M602-M604\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u4f7f\u7528 52 \u4e2a\u7269\u7406\u6838\u5fc3 (2 \u00d7 Intel(R) Xeon(R) Gold 5320 CPU @ 2.20GHz)\uff0c\u4ee5\u53ca 503 GiB \u5185\u5b58\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#2","title":"2. \u5b9e\u9a8c\u6b65\u9aa4","text":"<p>\u9996\u5148\u6d4b\u8bd5\u4e0b baseline \u7684\u8fd0\u884c\u60c5\u51b5\u3002\u4e3a\u4e86\u7f29\u77ed\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\uff0c\u5728\u4f18\u5316\u9636\u6bb5\u6211\u5148\u53ea\u4f7f\u7528\u4e86 <code>case_2001.bin</code> \u8fd9\u4e00\u7ec4\u6570\u636e\u3002</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#21-step-1","title":"2.1 Step 1","text":"<p>\u5148\u505a\u7f16\u8bd1\u5668\u4f18\u5316\u3002\u6211\u7ee7\u7eed\u6cbf\u7528\u4e86 <code>GCC</code> \u7f16\u8bd1\u5668\uff0c\u5e76\u6dfb\u52a0 <code>-std=c++11 -Ofast</code> \u7684\u7f16\u8bd1\u4f18\u5316\u9009\u9879\uff0c\u6027\u80fd\u6709\u4e86\u660e\u663e\u63d0\u5347\uff1a</p> <p></p> <p>\u4ee5 <code>gemv</code> \u51fd\u6570\u4e3a\u4f8b\uff0c\u7528 Compiler Explorer \u5206\u6790\u7f16\u8bd1\u5668\u4f18\u5316\u524d\u540e\u7684\u6c47\u7f16\u8bed\u8a00\u3002\u6dfb\u52a0\u7f16\u8bd1\u4f18\u5316\u9009\u9879\u524d\uff1a  </p> <pre><code>gemv(double*, double*, double*, int):\n        push    rbp\n        mov     rbp, rsp\n        mov     QWORD PTR [rbp-24], rdi\n        mov     QWORD PTR [rbp-32], rsi\n        mov     QWORD PTR [rbp-40], rdx\n        mov     DWORD PTR [rbp-44], ecx\n        mov     DWORD PTR [rbp-4], 0\n        jmp     .L2\n.L5:\n        mov     eax, DWORD PTR [rbp-4]\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-24]\n        add     rax, rdx\n        pxor    xmm0, xmm0\n        movsd   QWORD PTR [rax], xmm0\n        mov     DWORD PTR [rbp-8], 0\n        jmp     .L3\n.L4:\n        mov     eax, DWORD PTR [rbp-4]\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-24]\n        add     rax, rdx\n        movsd   xmm1, QWORD PTR [rax]\n        mov     eax, DWORD PTR [rbp-4]\n        imul    eax, DWORD PTR [rbp-44]\n        mov     edx, eax\n        mov     eax, DWORD PTR [rbp-8]\n        add     eax, edx\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-32]\n        add     rax, rdx\n        movsd   xmm2, QWORD PTR [rax]\n        mov     eax, DWORD PTR [rbp-8]\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-40]\n        add     rax, rdx\n        movsd   xmm0, QWORD PTR [rax]\n        mulsd   xmm0, xmm2\n        mov     eax, DWORD PTR [rbp-4]\n        cdqe\n        lea     rdx, [0+rax*8]\n        mov     rax, QWORD PTR [rbp-24]\n        add     rax, rdx\n        addsd   xmm0, xmm1\n        movsd   QWORD PTR [rax], xmm0\n        add     DWORD PTR [rbp-8], 1\n.L3:\n        mov     eax, DWORD PTR [rbp-8]\n        cmp     eax, DWORD PTR [rbp-44]\n        jl      .L4\n        add     DWORD PTR [rbp-4], 1\n.L2:\n        mov     eax, DWORD PTR [rbp-4]\n        cmp     eax, DWORD PTR [rbp-44]\n        jl      .L5\n        nop\n        nop\n        pop     rbp\n        ret\n</code></pre> <p>\u6dfb\u52a0\u7f16\u8bd1\u4f18\u5316\u9009\u9879\u540e\uff1a</p> <pre><code>gemv(double*, double*, double*, int):\n        test    ecx, ecx\n        jle     .L1\n        movsx   rcx, ecx\n        sal     rcx, 3\n        lea     r8, [rdi+rcx]\n.L4:\n        mov     QWORD PTR [rdi], 0x000000000\n        xor     eax, eax\n        pxor    xmm1, xmm1\n.L3:\n        movsd   xmm0, QWORD PTR [rsi+rax]\n        mulsd   xmm0, QWORD PTR [rdx+rax]\n        add     rax, 8\n        addsd   xmm1, xmm0\n        movsd   QWORD PTR [rdi], xmm1\n        cmp     rcx, rax\n        jne     .L3\n        add     rdi, 8\n        add     rsi, rcx\n        cmp     r8, rdi\n        jne     .L4 \n.L1:\n        ret\n</code></pre> <p>\u539f\u59cb\u4ee3\u7801\u9891\u7e41\u5730\u5728\u6808\u4e0a\u4fdd\u5b58\u548c\u52a0\u8f7d\u53d8\u91cf\uff0c\u4f18\u5316\u540e\u7684\u4ee3\u7801\u66f4\u591a\u5730\u4f9d\u8d56\u5bc4\u5b58\u5668\u6765\u5b58\u50a8\uff0c\u5c06\u5faa\u73af\u7ed3\u6784\u7b80\u5316\uff0c\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u548c\u8df3\u8f6c\uff1b\u4f18\u5316\u540e\u7684\u4ee3\u7801\u5229\u7528\u4e86 <code>rcx</code> \u548c <code>r8</code> \u5bc4\u5b58\u5668\u6765\u8ddf\u8e2a\u5faa\u73af\u8ba1\u6570\u548c\u5185\u5b58\u5730\u5740\uff0c\u907f\u514d\u4e86\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u91cd\u590d\u8ba1\u7b97\u504f\u79fb\u91cf\u3002</p> <p>\u4f46\u662f\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u7f16\u8bd1\u5668\u4f18\u5316\u540e\u4f7f\u7528\u7684\u4f9d\u7136\u662f <code>xmm</code> \u5bc4\u5b58\u5668\uff0c\u6ca1\u6709\u542f\u7528<code>ymm</code> / <code>zmm</code> \u7cfb\u5217\u7684\u5411\u91cf\u5316\u5bc4\u5b58\u5668\u3002\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053\u786c\u4ef6\u662f\u4e0d\u662f\u652f\u6301 <code>AVX</code> \u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u81ea\u5df1\u68c0\u6d4b\u5f53\u524d\u786c\u4ef6\u652f\u6301\u7684\u6307\u4ee4\u96c6\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u5668\u4f18\u5316\u6307\u4ee4 <code>-march=native</code> \u5373\u53ef\u3002</p> <p>\u6548\u679c\u662f\u975e\u5e38\u660e\u663e\u7684\uff0c\u901f\u5ea6\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u53c8\u5feb\u4e86\u4e00\u500d\uff1a</p> <p></p> <p>\u6240\u4ee5\u6700\u7ec8\u6211\u4eec\u7684\u7f16\u8bd1\u5668\u8bbe\u7f6e\u4e3a\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#22-step-2","title":"2.2 Step 2","text":"<p>\u7531\u4e8e\u5bf9 BICGSTAB \u7b97\u6cd5\u6ca1\u6709\u4e86\u89e3\uff0c\u6240\u4ee5\u6839\u636e Lab \u6587\u6863\u7684\u5efa\u8bae\uff0c\u6211\u4eec\u5173\u6ce8 <code>solver.c</code> \u4ee3\u7801\u672c\u8eab\u3002\u5728 <code>run.sh</code> \u4e2d\u901a\u8fc7 <code>source /opt/intel/oneapi/setvars.sh</code> \u542f\u7528\u6027\u80fd\u5206\u6790\u5de5\u5177 Vtune \u8fdb\u884c profile \u3002\u6211\u5c1d\u8bd5\u4e86\u76f4\u63a5\u5728 VS Code \u4e0a\u901a\u8fc7 X11 \u8f6c\u53d1\u542f\u52a8\u56fe\u5f62\u5316\u754c\u9762\uff0c\u4f46\u4f3c\u4e4e\u6709\u4e9b\u95ee\u9898\u4e00\u76f4\u65e0\u6cd5\u6210\u529f\uff1b\u53c8\u5c1d\u8bd5\u4e86 MobaXterm \uff0c\u4f46\u53cd\u5e94\u5ef6\u8fdf\u975e\u5e38\u9ad8\uff0c\u5e76\u4e14\u6ca1\u6cd5\u6b63\u5e38\u542f\u52a8\u5206\u6790\uff1b\u6700\u540e\u662f\u5c06\u751f\u6210\u7684\u62a5\u544a\u4e0b\u8f7d\u5230\u672c\u5730\u67e5\u770b\u3002</p> <pre><code>source /opt/intel/oneapi/setvars.sh\n\nVTUNE_OUTPUT_DIR=vtune_results\nmkdir -p $VTUNE_OUTPUT_DIR\n\nvtune -collect hotspots -result-dir $VTUNE_OUTPUT_DIR -quiet ./build/bicgstab ./data/case_2001.bin\nvtune -finalize -result-dir $VTUNE_OUTPUT_DIR\n</code></pre> <p>\u8fd9\u91cc\u6211\u4e3b\u8981\u5173\u6ce8\u4e86 <code>hotspot</code> \u7684\u4fe1\u606f\uff1a</p> <p></p> <p><code>Summary</code> \u4e2d\u7ed9\u51fa\u4e86 <code>Top Hotspots</code> \u7684\u6c47\u603b\uff0c\u53ef\u4ee5\u660e\u663e\u770b\u5230 <code>gemv</code> \u51fd\u6570\u5360\u636e\u4e86\u7edd\u5927\u90e8\u5206 CPU Time \u3002\u6240\u4ee5\u63a5\u4e0b\u4e86\u4f18\u5316\u91cd\u5fc3\u653e\u5728 <code>gemv</code> \u4e0a\u3002</p> <p>P.S \u5b9e\u9645\u4e0a Vtune \u7684\u529f\u80fd\u5341\u5206\u5f3a\u5927\uff0c\u4f46\u73b0\u5728\u5c5e\u5b9e\u8fd8\u4e0d\u592a\u4f1a\u7528\uff0c\u5149\u8ba9\u5b83\u751f\u6210\u51fa\u4e00\u4efd\u6b63\u5e38\u7684\u62a5\u544a\u5c31\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u6240\u4ee5\u5b9e\u9645\u4f18\u5316\u7684\u65f6\u5019 Vtune\u5e76\u6ca1\u6709\u5e2e\u5230\u6211\u4ec0\u4e48\u5fd9qwq\uff0c\u5e0c\u671b\u4e4b\u540e\u6709\u673a\u4f1a\u8be6\u7ec6\u5b66\u4e00\u4e0b</p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#23-step-3","title":"2.3 Step 3","text":"<p>\u5bf9\u4e8e <code>gemv</code> \u7684\u4f18\u5316\uff0c\u9996\u5148\u6211\u5c1d\u8bd5\u4e86\u8bbf\u5b58\u4f18\u5316\uff0c\u5229\u7528\u7a0b\u5e8f\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u5bf9\u77e9\u9635\u548c\u5411\u91cf\u8fdb\u884c\u5206\u5757\uff1a</p> <pre><code>void gemv(double* y, double* A, double* x, int N) {\n    const int B = 560;  // \u5206\u5757\u5927\u5c0f\n\n    for (int i = 0; i &lt; N; i++) {\n        y[i] = 0.0;\n    }\n\n    for (int i = 0; i &lt; N; i += B) {\n        for (int j = 0; j &lt; N; j += B) {\n            int i_max = (i + B &gt; N) ? N : i + B;\n            int j_max = (j + B &gt; N) ? N : j + B;\n            for (int ii = i; ii &lt; i_max; ii++)\n                for (int jj = j; jj &lt; j_max; jj++)   \n                    y[ii] += A[ii * N + jj] * x[jj];\n        }\n    }\n}\n</code></pre> <p>\u6211\u5c06\u77e9\u9635\u5206\u6210\u4e86 560 \\(\\times\\) 560 \u7684\u5757\uff0c\u5c06\u5411\u91cf\u5206\u6210\u4e86 1 \\(\\times\\) 560 \u7684\u5757\u3002\u9009\u53d6 560 \u662f\u56e0\u4e3a\u8282\u70b9\u7684 L1d cache \u7684\u5927\u5c0f\u4e3a 2.4 MiB \uff0c\u80fd\u5b58\u50a8\u7ea6 560 \\(\\times\\) 560 \u4e2a double \u6570\u3002</p> <p>\u5728\u5185\u5faa\u73af\u4e2d\uff0c\u968f\u7740 <code>jj</code> \u7d2f\u52a0\uff0c\u5bf9 A \u548c\u5bf9 x \u7684\u5185\u5b58\u8bbf\u95ee\u662f\u8fde\u7eed\u8fdb\u884c\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u9884\u53d6\u673a\u5236\u63d0\u524d\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u7f13\u5b58\u4e2d\uff0c\u51cf\u5c11 cache miss \u3002</p> <p>\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u7684\u6548\u679c\u5e76\u4e0d\u597d\uff0c\u5728\u65f6\u95f4\u4e0a\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u63d0\u5347\uff0c\u52a0\u4e0a\u540e\u9762\u6211\u59cb\u7ec8\u6ca1\u60f3\u660e\u767d\u600e\u4e48\u628a\u5206\u5757\u548c SIMD \u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u5728\u6700\u7ec8\u4ee3\u7801\u4e2d\u5e76\u6ca1\u6709\u4f53\u73b0\u4efb\u4f55\u5206\u5757\uff0c\u8fd9\u53ea\u662f\u4e00\u6b21\u5bf9\u8bbf\u5b58\u4f18\u5316\u4e0d\u6210\u529f\u7684\u5c1d\u8bd5\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#24-step-4","title":"2.4 Step 4","text":"<p>\u63a5\u4e0b\u6765\u5c1d\u8bd5 SIMD \u6307\u4ee4\u7ea7\u5e76\u884c\u3002\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 <code>AVX-512</code> \u6307\u4ee4\u96c6\uff0c\u540c\u65f6\u53d6\u51fa 8 \u4e2a double \u7c7b\u578b\u7684\u6570\u636e\u540c\u65f6\u8fd0\u7b97\u3002\u5177\u4f53\u4f18\u5316\u7c7b\u4f3c Lab2.5 \u624b\u5199 SIMD \u5411\u91cf\u5316\u3002</p> <p>\u6211\u5bf9 <code>gemv</code> <code>dot-product</code> <code>precondition</code> <code>precondition_apply</code> \u56db\u4e2a\u51fd\u6570\u4f7f\u7528\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u4f18\u5316\uff0c\u4f46\u771f\u6b63\u5bf9\u8fd0\u884c\u65f6\u95f4\u8d77\u5230\u51b3\u5b9a\u6027\u4f5c\u7528\u7684\u662f <code>gemv</code> \u51fd\u6570\uff1a</p> <pre><code>void gemv(double* y, double* A, double* x, int N) {\n    for (int i = 0; i &lt; N; i++) {\n        __m512d y_reg = _mm512_setzero_pd();\n\n        int j;\n        for (j = 0; j &lt;= N - 8; j += 8) {\n            __m512d A_reg = _mm512_loadu_pd(A + i * N + j);  // \u5185\u5b58\u672a\u5bf9\u9f50\n            __m512d x_reg = _mm512_loadu_pd(x + j);          \n            __m512d mul_reg = _mm512_mul_pd(A_reg, x_reg);\n            y_reg = _mm512_add_pd(y_reg, mul_reg);              \n        }\n\n        y[i] = _mm512_reduce_add_pd(y_reg);\n\n        // \u5269\u4f59\u8fb9\u754c\n        for (; j &lt; N; j++) {\n            y[i] += A[i * N + j] * x[j];\n        }\n    }\n}\n</code></pre> <p>\u7531\u4e8e A\uff0cx \u7684\u8bfb\u53d6\u4e0d\u5728 <code>solver.c</code> \u4e2d\uff0c\u6240\u4ee5\u6ca1\u6cd5\u5c06\u5185\u5b58\u5bf9\u9f50\u3002\u603b\u4f53\u601d\u8def\u5c31\u662f\u6bcf\u6b21\u4ece A\uff0cx \u4e2d\u8bfb\u53d6 8 \u4e2a double \u6570\u636e\uff0c\u5e76\u884c\u5730\u505a\u5411\u91cf\u7684\u9010\u4f4d\u4e58\u6cd5\uff0c\u518d\u505a\u5411\u91cf\u7d2f\u52a0\uff0c\u6700\u540e\u5c06 8 \u4f4d\u6570\u636e\u76f8\u52a0\u5f97\u5230\u5bf9\u5e94\u7ed3\u679c\u5411\u91cf\u7b2c i \u4f4d\u7684\u503c\u3002</p> <p>SIMD \u6307\u4ee4\u7ea7\u4f18\u5316\u540e\uff0c\u65f6\u95f4\u51cf\u5c11\u4e86\u7ea6 10s \uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#25-step-5","title":"2.5 Step 5","text":"<p>\u5728\u5355\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u5f80\u5f80\u4f7f\u7528\u591a\u7ebf\u7a0b\u6765\u8fdb\u884c\u5e76\u884c\u5316\u3002OpenMP \u662f\u4e00\u79cd\u7b80\u5355\u6613\u7528\u7684\u591a\u7ebf\u7a0b\u5e76\u884c\u7f16\u7a0b\u6a21\u578b\u3002</p> <p>\u7531\u4e8e OpenMP \u672c\u8eab\u5728\u7ebf\u7a0b\u521b\u5efa\u3001\u8c03\u5ea6\u3001\u9500\u6bc1\u4e0a\u5c31\u6709\u5f00\u9500\uff0c\u6240\u4ee5\u6211\u53ea\u5bf9 <code>gemv</code> \u51fd\u6570\u4f7f\u7528\u4e86 OpenMP \u3002\u5177\u4f53\u4f7f\u7528\u5176\u5b9e\u53ea\u662f\u5728\u5916\u5c42 <code>for</code> \u5faa\u73af\u5916\u52a0\u4e00\u53e5</p> <pre><code>#pragma omp parallel for\n</code></pre> <p>\u7528\u4e8e\u542f\u52a8\u591a\u7ebf\u7a0b\u5e76\u884c\u6267\u884c\u8fd9\u4e2a <code>for</code> \u5faa\u73af\uff0c\u9700\u8981\u5728 run.sh \u4e2d\u58f0\u660e\u53d8\u91cf</p> <pre><code>export OMP_NUM_THREADS=52\n</code></pre> <p>\u7531\u4e8e\u5b9e\u9a8c\u73af\u5883\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u4f7f\u7528 52 \u4e2a\u7269\u7406\u6838\u5fc3 (2 \u00d7 Intel(R) Xeon(R) Gold 5320 CPU @ 2.20GHz)\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u58f0\u660e\u4e86 52 \u4e2a\u7ebf\u7a0b\u3002\u7531\u4e8e\u65f6\u95f4\u6709\u9650\uff0c\u6211\u6ca1\u6709\u8be6\u7ec6\u6d4b\u8bd5\u6700\u4f18\u7684\u7ebf\u7a0b\u6570\uff0c\u53ea\u6d4b\u8bd5\u4e86\u5e94\u7528\u8d85\u7ebf\u7a0b\u540e 104 \u4e2a\u7ebf\u7a0b\u548c 52 \u4e2a\u7ebf\u7a0b\u7684\u6548\u679c\u5dee\u4e0d\u591a\u3002</p> <p>\u6dfb\u52a0 OpenMP \u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>void gemv(double* y, double* A, double* x, int N) {\n    #pragma omp parallel for\n    for (int i = 0; i &lt; N; i++) {\n        __m512d y_reg = _mm512_setzero_pd();\n\n        int j;\n        for (j = 0; j &lt;= N - 8; j += 8) {\n            __m512d A_reg = _mm512_loadu_pd(A + i * N + j);  // \u5185\u5b58\u672a\u5bf9\u9f50\n            __m512d x_reg = _mm512_loadu_pd(x + j);          \n            __m512d mul_reg = _mm512_mul_pd(A_reg, x_reg);\n            y_reg = _mm512_add_pd(y_reg, mul_reg);              \n        }\n\n        y[i] = _mm512_reduce_add_pd(y_reg);\n\n        // \u5269\u4f59\u8fb9\u754c\n        for (; j &lt; N; j++) {\n            y[i] += A[i * N + j] * x[j];\n        }\n    }\n}\n</code></pre> <p>\u503c\u7684\u4e00\u63d0\u7684\u662f\uff0c\u4ece\u5bc4\u5b58\u5668\u7d2f\u52a0\u5230 <code>y[i]</code> \u524d\u9762\u662f\u4e0d\u9700\u8981\u9650\u5b9a <code># pragma omp critical</code> \u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\u65f6\u90fd\u5bf9\u5e94\u5355\u72ec\u7684 <code>i</code> \uff0c\u5199\u5165\u65f6 <code>y[i]</code> \u662f\u4e0d\u5b58\u5728\u51b2\u7a81\u7684\uff0c\u589e\u52a0 <code>critical</code> \u7684\u9650\u5b9a\u53cd\u800c\u4f1a\u9020\u6210\u6027\u80fd\u4e0b\u964d\u3002</p> <p>\u53ef\u4ee5\u5728 <code>for</code> \u540e\u6dfb\u52a0 <code>schedule(kind[, chunk_size])</code> \u6307\u5b9a\u8c03\u5ea6\u65b9\u5f0f\u548c\u7c92\u5ea6\u3002\u6211\u5c1d\u8bd5\u4e86 <code>static</code> \u548c <code>dynamic</code> \u4e24\u79cd\u6a21\u5f0f\u4ee5\u53ca\u4e00\u4e9b\u53c2\u6570\uff0c\u4f46\u4f3c\u4e4e\u90fd\u6ca1\u6709\u4f18\u5316\u6548\u679c\uff0c\u52a0\u4e0a\u65f6\u95f4\u6709\u9650\uff0c\u6ca1\u6709\u7ec6\u81f4\u6d4b\u8bd5\u5408\u9002\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u6700\u540e\u6ca1\u6709\u8bbe\u7f6e <code>schedule</code> \u3002</p> <p>\u4f46\u662f\u7b2c\u4e00\u6b21\u5f00\u542f OpenMP \u540e\u53d1\u73b0\u65f6\u95f4\u53cd\u800c\u53d8\u6162\u4e86\u3002\u8d77\u521d\u6211\u4ee5\u4e3a\u662f OpenMP \u6709\u5de8\u5927\u5f00\u9500\uff0c\u6d4b\u8bd5\u7684\u77e9\u9635\u89c4\u6a21\u4e0d\u591f\u5927\uff0c\u6216\u662f\u7f16\u8bd1\u5668\u4f18\u5316\u5df2\u7ecf\u4f18\u5316\u5230\u4e86\u8fd9\u79cd\u7a0b\u5ea6\u3002\u4f46\u90fd\u6ca1\u6709\u9053\u7406\uff0c\u8fd9\u4f3c\u4e4e\u662f\u65e2\u589e\u52a0\u4e86 OpenMP \u7684\u5f00\u9500\uff0c\u53c8\u6ca1\u6709\u542f\u7528\u7ebf\u7a0b\u7ea7\u5e76\u884c\u7684\u7ed3\u679c\u3002</p> <p>\u6700\u540e\u53d1\u73b0\u95ee\u9898\u51fa\u5728 run.sh \u6587\u4ef6\uff0c\u6211\u4f9d\u65e7\u6cbf\u7528\u4e86\u521d\u59cb <code>#SBATCH\u200a-\u200acpus-per-task=1</code> \u7684\u8bbe\u7f6e\uff0c\u8fd9\u76f8\u5f53\u4e8e\u91cd\u65b0\u9650\u5236\u4e86\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a CPU \u6838\u5fc3\u3002\u5728\u8bbe\u5b9a\u4e86\u6bcf\u4e2a task \u5206\u914d\u7684 CPU \u6838\u5fc3\u6570\u5e76\u7b80\u5355\u8bbe\u5b9a\u7ed1\u6838\u7b56\u7565\u4e3a close \u540e</p> <pre><code>#SBATCH --cpus-per-task=104\n\nexport OMP_PROC_BIND=close\n</code></pre> <p>\u8fd0\u7b97\u901f\u5ea6\u6709\u4e86\u5de8\u5927\u63d0\u5347\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#26","title":"2.6 \u4f18\u5316\u6548\u679c\u6d4b\u8bd5","text":"<p>\u81f3\u6b64\uff0c\u4f18\u5316\u5df2\u7ecf\u6709\u8f83\u597d\u7684\u6210\u6548\uff0c\u5728 oj \u5e73\u53f0\u8fdb\u884c\u6d4b\u8bd5 \u53d6\u5f97 103.89 \u5206\uff1a</p> <p></p> <p>\u5e76\u7528 Vtune \u6d4b\u8bd5\u6027\u80fd\u8fdb\u884c\u5bf9\u6bd4\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230 hotspot \u5df2\u7ecf\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\uff0c\u4f3c\u4e4e CPU \u65f6\u95f4\u4e0d\u518d\u96c6\u4e2d\u5728 <code>gemv</code> \u51fd\u6570\u4e0a\uff0c\u800c\u5728\u8ba1\u65f6\u533a\u5185\u8fd0\u884c BICGSTAB \u7684\u65f6\u95f4\u5f88\u77ed\uff0c\u5bf9\u4e8e\u6574\u4e2a\u7a0b\u5e8f\uff0c\u66f4\u591a\u7684\u65f6\u95f4\u662f\u7528\u5728 OpenMP \u76f8\u5173\u7684\u989d\u5916\u5f00\u9500\u4e0a\uff0c\u6bd4\u5982 libomp.so \u662f\u7528\u4e8e\u5b9e\u73b0 OpenMP \u5e76\u884c\u53d8\u6210\u7684\u5e93\uff0c\u800c gemv._omp_fn.0 \u5e94\u8be5\u662f\u81ea\u52a8\u751f\u6210\u7ebf\u7a0b\u5904\u7406\u7684\u51fd\u6570\uff0c\u8d1f\u8d23\u6267\u884c\u5982 <code>#pragma omp for</code> \u6307\u4ee4\u4e2d\u7684\u4ee3\u7801\u5757\u3002</p> <p>\u5728\u8fd9\u4e24\u5f20\u56fe\u4e2d\u663e\u793a\u7684\u66f4\u8be6\u7ec6\uff1a\u6574\u4e2a\u7a0b\u5e8f\u7684\u4e3b\u8981\u65f6\u95f4\u662f\u7528\u5728\u524d\u540e\u7ea2\u8272\u6846\u4e2d OpenMP \u5e26\u6765\u7684\u5f00\u9500\uff0c\u4e2d\u95f4\u7d2b\u8272\u6846\u7684\u90e8\u5206\u6240\u5360\u7528\u7684\u65f6\u95f4\u662f\u6781\u5c11\u7684\uff1b\u4e0e\u4e4b\u76f8\u53cd\uff0c\u5728 baseline \u7684\u6d4b\u8bd5\u7ed3\u679c\u4e2d\uff0c<code>gemv</code> \u51fd\u6570\u7684\u8017\u65f6\u662f\u96c6\u4e2d\u4e14\u6781\u9ad8\u7684\u3002</p> <p></p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#27-mpi","title":"2.7 MPI","text":"<p>MPI \u662f\u4e00\u79cd\u975e\u5171\u4eab\u5185\u5b58\u7684\u8fdb\u7a0b\u7ea7\u5e76\u884c\u7f16\u7a0b\u6a21\u578b\uff0c\u56e0\u6b64\u5728\u4f7f\u7528 MPI \u8fdb\u884c\u5e76\u884c\u5316\u65f6\uff0c\u9700\u8981\u624b\u52a8\u8fdb\u884c\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u6765\u5b9e\u73b0\u6570\u636e\u5728\u8fdb\u7a0b\u95f4\u7684\u4f20\u8f93\u3002 MPI \u53ef\u4ee5\u8ba9\u6211\u4eec\u7a81\u7834\u5355\u4e2a\u8282\u70b9\u7684\u786c\u4ef6\u9650\u5236\uff0c\u5728\u591a\u8282\u70b9\u4e0a\u5b9e\u73b0\u5e76\u884c\u5316\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c OpenMP \u8ba9\u6211\u4eec\u5728\u5355\u4e00\u8282\u70b9\u4e0a\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5e76\u884c\uff0c\u800c MPI \u8ba9\u6211\u4eec\u5728\u53ef\u4ee5\u5b9e\u73b0\u591a\u8282\u70b9\u5e76\u884c\u3002</p> <p>\u56e0\u4e3a\u662f\u591a\u8282\u70b9\u5e76\u884c\uff0c\u6240\u4ee5\u663e\u7136\u9700\u8981\u5206\u914d\u8ba1\u7b97\u4efb\u52a1\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5c06\u8f93\u5165\u8fdb\u6765\u7684\u77e9\u9635\u8fdb\u884c\u5207\u5272\uff0c\u5e76\u901a\u8fc7\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u6765\u5206\u914d\u7ed9\u5404\u4e2a\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u522b\u8ba1\u7b97\u51fa\u7ed3\u679c\u518d\u5408\u5e76\u8f93\u51fa\u3002\u6839\u636e\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u5c1d\u8bd5\u7531\u4e00\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u6570\u636e\uff0c\u5c06\u6570\u636e\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u7684\u6a21\u5f0f\u3002</p> <p>\u4f46\u6211\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u628a\u95ee\u9898\u60f3\u5f97\u592a\u7b80\u5355\u4e86\uff0c\u6211\u76f4\u63a5\u5728\u6839\u8fdb\u7a0b\u8bfb\u53d6\u5b8c\u6570\u636e\u540e\u5c31\u5bf9\u77e9\u9635\u8fdb\u884c\u4e86\u5206\u5272\uff0c\u7ed9\u6bcf\u4e2a\u51fd\u6570\u90fd\u52a0\u4e0a <code>start</code> \u548c <code>end</code> \uff0c\u8bd5\u56fe\u8ba9\u540e\u9762\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u64cd\u4f5c\u90fd\u9488\u5bf9\u5206\u5272\u540e\u7684\u4e00\u5757\u77e9\u9635\u5355\u72ec\u8fdb\u884c\uff0c\u6700\u540e\u628a\u7ed3\u679c\u62fc\u63a5\u6210\u8981\u6c42\u7684\u5411\u91cf\u3002</p> <pre><code>// bad version\n\nvoid gemv(double* y, double* A, double* x, int N, int start, int end);\n\ndouble dot_product(double* x, double* y, int N, int start, int end);\n\n...\n\nint chunk = N / size;\nint remainder = N % size;\nint start, end;\n\nif (rank &lt; remainder) {\n    start = rank * (chunk + 1);\n    end = start + chunk;\n} else {\n    start = rank * chunk + remainder;\n    end = start + chunk - 1;\n}\n</code></pre> <p>\u8fd9\u663e\u7136\u662f\u4e0d\u5408\u7406\u7684\uff0c\u7ed3\u679c\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u867d\u7136\u53ef\u4ee5\u8dd1\u901a\uff0c\u4f46\u7b54\u6848\u9519\u8bef\u3002</p> <p>\u53d1\u73b0\u95ee\u9898\u540e\u53ea\u80fd\u9000\u800c\u6c42\u5176\u6b21\uff0c\u53ea\u5bf9 <code>gemv</code> \u90e8\u5206\u4f7f\u7528 MPI \u3002\u4f46\u6211\u4ecd\u7136\u6cbf\u7528\u4e86\u4e0a\u4e2a\u7248\u672c\u7684\u601d\u8def\uff0c\u53ea\u7531\u6839\u8fdb\u7a0b\u8bfb\u53d6\u6570\u636e\u518d\u4f20\u8f93\u5230\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1b\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u5176\u4ed6\u90e8\u5206\u90fd\u5404\u81ea\u6267\u884c\uff0c\u53ea\u5728 <code>gemv</code> \u65f6\u62c6\u5206\u6210\u6bcf\u4e2a\u8fdb\u7a0b\u7b97\u4e00\u90e8\u5206\uff0c\u5408\u5e76\u540e\u53c8\u5404\u81ea\u6267\u884c\u3002</p> <p>\u7531\u4e8e\u5bf9 MPI \u592a\u4e0d\u719f\u6089\uff0c\u60f3\u51fa\u7684\u8fd9\u4e2a\u8def\u5f84\u663e\u7136\u662f\u4e00\u79cd\u53ca\u5176\u4f4e\u6548\u7684\u601d\u8def\u3002\u4e0d\u4f46\u4f1a\u56e0\u4e3a\u6839\u8fdb\u7a0b\u5411\u5b50\u8fdb\u7a0b\u4f20\u8f93\u5927\u77e9\u9635\u800c\u589e\u52a0\u5de8\u91cf\u5f00\u9500\uff0c\u800c\u4e14\u8fd9\u6837\u505a\u76f8\u5f53\u4e8e\u5728 <code>gemv</code> \u90e8\u5206\u4e4b\u5916\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u8fdb\u884c\u7740\u76f8\u540c\u4e14\u91cd\u590d\u7684\u5de5\u4f5c\u3002</p> <p>\u5173\u4e8e MPI \u7684\u5404\u79cd\u51fd\u6570\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u53ef\u4ee5\u67e5\u770b Microsoft MPI Reference \u3002</p> <pre><code>// bad version, too!\n\nvoid gemv(double* y, double* A, double* x, int N, int start, int end);\n\n...\n\nint rank, size;\n// \u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u76f8\u5173\u4fe1\u606f\nMPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);\nMPI_Comm_size(MPI_COMM_WORLD, &amp;size);\n\nint *recvcounts = (int*)malloc(size * sizeof(int));\nint *displs = (int*)malloc(size * sizeof(int));\n\nint chunk = N / size; \nint remainder = N % size; \n\nint offset = 0;\nfor (int i = 0; i &lt; size; i++) {\n    // \u6bcf\u4e2a\u8fdb\u7a0b\u7684\u63a5\u6536\u6570\u636e\u91cf\n    recvcounts[i] = chunk + (i &lt; remainder ? 1 : 0);\n    displs[i] = offset;\n    offset += recvcounts[i];\n}\n\n// \u8ba1\u7b97\u5f53\u524d\u8fdb\u7a0b\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e\nint start = displs[rank];\nint end = start + recvcounts[rank];\n\n...\n\nint bicgstab(int N, double* A, double* b, double* x, int max_iter, double tol, MPI_Comm comm);\n\n...\n\n// 1. r0 = b - A * x0\ngemv(r, A, x, N, start, end);\nMPI_Barrier(comm); \nif(rank == 0)\n    MPI_Gatherv(MPI_IN_PLACE, 0 , MPI_DOUBLE, r, recvcounts, displs, MPI_DOUBLE, 0, comm);\nelse\n    MPI_Gatherv(r + start, end - start , MPI_DOUBLE, r, recvcounts, displs, MPI_DOUBLE, 0, comm);\nMPI_Barrier(comm);\nMPI_Bcast(r , N , MPI_DOUBLE , 0 ,comm);\n\nfor (int i = 0; i &lt; N; i++) {\n    r[i] = b[i] - r[i];\n}\n</code></pre> <p>\u6570\u636e\u8bfb\u53d6\u6a21\u5f0f\uff1a</p> <pre><code>// Read data from file\nif (world_rank == 0) {\n    read_data(filename, &amp;N, &amp;A, &amp;b, &amp;x);\n}\n\n// \u5bf9\u5404\u4e2a\u8fdb\u7a0b\u5e7f\u64ad N \u7684\u503c\nMPI_Bcast(&amp;N, 1, MPI_INT, 0, MPI_COMM_WORLD);\n\n// \u53ea\u6709\u4e3b\u8fdb\u7a0b\u8bfb\u53d6\u6570\u636e\uff0c\u5176\u4ed6\u8fdb\u7a0b\u7684\u6570\u636e\u7531\u4e3b\u8fdb\u7a0b\u5206\u914d\nif (world_rank != 0) {\n    A = (double*)malloc(N * N * sizeof(double));\n    b = (double*)malloc(N * sizeof(double));\n    x = (double*)malloc(N * sizeof(double));\n}\n\n// \u5411\u5404\u4e2a\u8fdb\u7a0b\u5e7f\u64ad A\uff0cb\uff0cx \u7684\u503c\nMPI_Bcast(A, N * N, MPI_DOUBLE, 0, MPI_COMM_WORLD);\nMPI_Bcast(b, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);\nMPI_Bcast(x, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n</code></pre> <p>\u4f46\u5373\u4f7f\u662f\u8fd9\u79cd\u6781\u5176 naive \u7684 MPI \u5b9e\u73b0\uff0c\u6211\u4e5f\u9047\u5230\u4e86\u76f4\u5230\u6700\u540e\u90fd\u6ca1\u6709\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u8fed\u4ee3\u6ca1\u6709\u6536\u655b\uff0c\u59cb\u7ec8\u662f -nan </p> <pre><code>Iteration 1000, residul = -nan\nIteration 1000, residul = -nan\nIteration 1000, residul = -nan\nIteration 2000, residul = -nan\nIteration 2000, residul = -nan\nIteration 2000, residul = -nan\nIteration 3000, residul = -nan\nIteration 3000, residul = -nan\nIteration 3000, residul = -nan\nIteration 4000, residul = -nan\nIteration 4000, residul = -nan\nIteration 4000, residul = -nan\nIteration 5000, residul = -nan\nIteration 5000, residul = -nan\nIteration 5000, residul = -nan\n</code></pre> <p>\u8feb\u4e8e\u5bf9\u4e8e MPI \u6709\u9650\u7684\u77e5\u8bc6\u548c\u8c03\u8bd5\u624b\u6bb5\uff0c\u8fd9\u4e2a\u95ee\u9898\u76f4\u5230\u62a5\u544a\u63d0\u4ea4\u90fd\u6ca1\u6709\u89e3\u51b3qwq</p>"},{"location":"HPC%20101/Lab%20Reports/lab4%20report/lab4%20report/#3","title":"3. \u7ed3\u8bed","text":"<p>\u8fd9\u662f\u672c\u6b21 HPC101 \u8d85\u7b97\u77ed\u5b66\u671f\u7684\u6700\u540e\u4e00\u4e2a\u5b9e\u9a8c\u62a5\u544a\u3002\u56de\u987e Lab4 \uff0c\u867d\u7136\u901a\u8fc7 SIMD \u6307\u4ee4\u7ea7\u5e76\u884c\u548c OpenMP \u5df2\u7ecf\u5b9e\u73b0\u4e86 oj \u8f83\u4e3a\u4e0d\u9519\u7684\u5206\u6570\uff0c\u4f46\u662f\u6ca1\u6709\u5b9e\u73b0 MPI \u8fd8\u662f\u5341\u5206\u9057\u61be\u7684\u3002</p> <p>\u800c\u56de\u987e\u6574\u4e2a\u77ed\u5b66\u671f\u8bfe\u7a0b\uff0c\u89c9\u5f97\u5f53\u521d\u9009\u62e9\u8fd9\u95e8\u8bfe\u7a0b\u5b9e\u5728\u662f\u660e\u667a\u7684\u9009\u62e9\u3002\u65e9\u5728\u62a5\u540d\u4e4b\u521d\u5c31\u6709\u961f\u5185\u540c\u5b66\u8ba9\u6211\"\u505a\u597d\u4ed8\u51fa\u6574\u4e2a\u6691\u5047\u7684\u51c6\u5907\"\u3002\u5982\u4eca\u6691\u5047\u6084\u7136\u8fc7\u53bb\uff0c\u987f\u611f\u4e0d\u865a\u6b64\u884c\uff0c\u83b7\u76ca\u826f\u591a\u3002\u4ece\u6700\u521d\u5bf9 linux \u4e00\u65e0\u6240\u77e5\u6323\u624e\u7740\u914d\u7f6e\u51fa\u96c6\u7fa4\u8fd0\u884c HPL \uff0c\u5230 Lab5 \u8270\u96be\u7684\u6784\u5efa Transformer \uff1b\u4ece Lab2 \u7b80\u5355\u7684\u5411\u91cf\u5316\u8ba1\u7b97\u5230\u540e\u9762\u7684 OpenMP \u548c MPI \uff0c\u4eff\u4f5b\u4e00\u6bb5\u65c5\u7a0b\uff0c\u8def\u9014\u8270\u9669\u4f46\u98ce\u666f\u707f\u70c2\u3002\u5e0c\u671b\u77ed\u5b66\u671f\u7684\u8bfe\u7a0b\u53ea\u662f\u6211\u4e0e\u8d85\u7b97\u7f18\u5206\u7684\u5f00\u59cb\u3002\u4e5f\u611f\u8c22\u8001\u5e08\u3001\u52a9\u6559\u548c\u5b66\u957f\u4eec\u5bf9\u8bfe\u7a0b\u8f9b\u82e6\u7684\u4ed8\u51fa\uff01</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/","title":"Lab5 Report","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#1","title":"1. \u5b9e\u9a8c\u73af\u5883","text":"<p>\u5728\u96c6\u7fa4\u4e0a\u6709\u914d\u7f6e\u597d\u7684\u5b9e\u9a8c\u73af\u5883 <code>hpc101-2024-lab5</code> \u3002\u5728 VS Code \u4e2d\u767b\u5f55\u96c6\u7fa4\u5e76\u521b\u5efa\u65b0\u7684 Python \u73af\u5883\uff0c\u6839\u636e\u63d0\u793a\u5373\u53ef\u9009\u62e9\u5df2\u7ecf\u5b58\u5728\u7684\u73af\u5883\u3002\u7531\u4e8e\u540e\u671f TensorBoard \u8fdb\u884c\u53ef\u89c6\u5316\u7684\u65f6\u5019\u7f3a\u5c11 <code>torch-tb-profiler</code> \uff0c\u4e8e\u662f\u81ea\u884c\u521b\u5efa\u4e86\u65b0\u73af\u5883\u5e76\u5728\u6d59\u5927\u6e90\u4e0b\u8f7d\u4e86 <code>requirements.txt</code> \u4e2d\u5217\u4e3e\u7684 Python \u5305\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#2","title":"2. \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#21","title":"2.1 \u7f51\u7edc\u6a21\u578b","text":"<p>\u5f00\u59cb\u505a\u8fd9\u4e2a lab \u65f6\u4ee5\u4e3a\u6574\u4e2a Transformer \u67b6\u6784\u90fd\u9700\u8981\u81ea\u5df1\u7f16\u5199\uff0c\u6240\u4ee5\u6700\u521d\u4e00\u76f4\u5728\u5b66\u4e60 Transformer \u7684\u5b8c\u6574\u67b6\u6784\u3002\u8fd9\u91cc\u5c31\u53ea\u7b80\u5355\u5217\u4e3e <code>nn.Transformer</code> \u6a21\u5757\u4e4b\u5916\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u7684\u90e8\u5206\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#211-model-architecture","title":"2.1.1 Model Architecture","text":"<p><code>nn.Transformer</code> \u5df2\u7ecf\u96c6\u6210\u4e86 <code>Encoder</code> \u548c <code>Decoder</code> \uff0c\u4f46\u662f\u7f3a\u5c11 <code>InputEmbedding</code> <code>PositionalEncoding</code> <code>Linear</code> \u8fd9\u51e0\u5c42\u3002</p> <p>\u7531\u4e8e <code>torch.nn</code> \u548c <code>transformer</code> \u5305\u4e2d\u5df2\u7ecf\u4e3a\u6211\u4eec\u5b9e\u73b0\u4e86\u5f88\u591a\u6a21\u5757\uff0c\u6240\u4ee5\u56de\u5934\u6765\u770b\u6211\u4eec\u6784\u5efa Transformer \u90e8\u5206\u4e3b\u8981\u662f\u62fc\u63a5\u5404\u4e2a\u6a21\u5757\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#212-embedding-softmax","title":"2.1.2 Embedding &amp; Softmax","text":"<p>\u5728\u5f97\u5230\u9884\u5904\u7406\u540e\u7684 Inputs \u548c Outputs \u540e\uff0cEmbeddings \u4f1a\u5c06\u5206\u8bcd\u540e\u7684\u6bcf\u4e2a token \u6620\u5c04\u4e3a\u4e00\u4e2a d<sub>model</sub> \u7ef4\u7684\u5411\u91cf\u3002\u8fd9\u4e2a\u5bf9\u5e94\u5173\u7cfb\u662f\u63d0\u524d\u8bad\u7ec3\u597d\u7684\uff0c\u5177\u4f53\u5411\u91cf\u503c\u7684\u786e\u5b9a\u4e0e\u8bcd\u4e49\u6709\u76f8\u5f53\u7684\u5173\u7cfb\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 3Blue1Brown \u7684\u89c6\u9891\u3002</p> <p>\u800c\u5728 <code>nn.Transformer</code> \u5904\u7406\u540e\uff0cdecoder outputs \u4f1a\u7ecf\u8fc7 Linear \u548c Softmax \u4e24\u5c42\u8f6c\u53d8\u4e3a\u4e0b\u4e00\u4e2a\u8bcd\u7684\u6982\u7387\u3002\u6839\u636e\u539f\u8bba\u6587\uff0cembedding layer \u540e\u5f97\u5230\u7684\u6743\u91cd\u4f1a\u88ab\u4e58\u4ee5 \\(\\sqrt{d~model~}\\) \u3002</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#213-positional-encoding","title":"2.1.3 Positional Encoding","text":"<p>\u7ed9\u6a21\u578b\u8f93\u5165\u7684\u662f\u4e00\u6574\u53e5\u8bdd\uff0c\u5982\u679c\u5207\u5272\u6210 tokens \u540e\u5bf9\u6bcf\u4e2a tokens \u7684\u5904\u7406\u662f\u7b49\u4ef7\u7684\uff0c\u8fd9\u6837\u5c31\u4e22\u5931\u4e86\u6bcf\u4e2a token \u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u56e0\u6b64\u9700\u8981 Positional Encoding \u6765\u63d0\u53d6\u8fd9\u4e9b\u4fe1\u606f\u3002\u901a\u8fc7\u7279\u5b9a\u6570\u5b66\u65b9\u5f0f\u6c42\u51fa\u7684 Positional Encoding \u540c\u6837\u5177\u6709 d<sub>model</sub> \u7ef4\uff0c\u9700\u8981\u4e0e embedding \u76f8\u52a0\u3002\u539f\u8bba\u6587\u91c7\u7528\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#214-attention","title":"2.1.4 Attention","text":"<p>\u6ce8\u610f\u529b\u673a\u5236\u662f\u539f\u8bba\u6587\u7684\u5173\u952e\u673a\u5236\uff0c\u5bf9\u6b64\u6211\u53ea\u6709\u5f88\u7b80\u5355\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u4e4b\u540e\u53c2\u8003\u539f\u8bba\u6587\u548c The Annotated Transformer \u505a\u8ddf\u6df1\u5165\u7684\u7406\u89e3\u3002\u8fd9\u91cc\u53ea\u8d34\u51fa\u5173\u952e\u516c\u5f0f\u548c\u7ed3\u6784\u56fe\uff1a</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#scaled-dot-product-attention","title":"Scaled Dot-Product Attention","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#multi-head-attention","title":"Multi-head Attention","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#22","title":"2.2 \u6570\u636e\u96c6","text":"<p>lab \u4f7f\u7528 WMT (Workshop on Statistical Machine Translation) 2019 \u6570\u636e\u96c6\u4e2d\u7684 zh-en \u7684\u90e8\u5206\u6587\u4ef6\u3002\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u52a0\u8f7d\u539f\u59cb\u6570\u636e\uff1a</p> <pre><code>dataset_dir = \"/river/hpc101/2024/minidataset\"\n\ndataset_raw = load_dataset(path=dataset_dir)\nprint(\"Data loaded.\")\n</code></pre> <p>\u7b80\u5355\u6d4b\u8bd5\u53ef\u4ee5\u5f97\u5230\u539f\u59cb\u6570\u636e\u96c6\u7684\u6784\u9020\u3002\u6574\u4e2a\u6570\u636e\u96c6\u5206\u4e3a \"train\" (599644)\uff0c \"validation\" (3981) \u4e24\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u90fd\u6709 \"translation\" \u952e\u3002\u53d6\u51fa\u4e00\u6761\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>{'translation': {'en': 'Last week, the broadcast of period drama \"Beauty Private Kitchen\" was temporarily halted, and accidentally triggered heated debate about faked ratings of locally produced dramas.', 'zh': '\u4e0a\u5468\uff0c\u53e4\u88c5\u5267\u300a\u7f8e\u4eba\u79c1\u623f\u83dc\u300b\u4e34\u65f6\u505c\u64ad\uff0c\u610f\u5916\u5f15\u53d1\u4e86\u5173\u4e8e\u56fd\u4ea7\u5267\u6536\u89c6\u7387\u9020\u5047\u7684\u70ed\u70c8\u8ba8\u8bba\u3002'}}\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#3","title":"3. \u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#31","title":"3.1 \u7a0b\u5e8f\u7f16\u5199","text":"<p>\u8fd9\u90e8\u5206\u5c06\u6839\u636e\u4ee3\u7801\u987a\u5e8f\u6392\u5e03\u3002\u4f46\u5b9e\u9645\u7f16\u5199\u8fc7\u7a0b\u8fdc\u6ca1\u6709\u8fd9\u4e48\u6d41\u7545\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u7684\u6b63\u786e\u7684\u903b\u8f91\u987a\u5e8f\u4e5f\u5e76\u975e\u5982\u6b64\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#311","title":"3.1.1 \u6570\u636e\u9884\u5904\u7406","text":"<p>\u5bf9\u4e8e\u52a0\u8f7d\u540e\u7684\u6570\u636e\uff0c\u9700\u8981\u5207\u5272\u4e3a\u4e00\u4e2a\u4e2a\u7684 tokens \uff0c\u5728 lab \u4e2d\u6211\u4eec\u4f7f\u7528\u7684 Tokenizer \u662f AutoTokenizer \uff0c\u4f7f\u7528\u7684 pre-trained model \u662f bert-base-uncased \u3002\u5176\u4e2d bert-base-uncased \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e0b\u8f7d\u53ef\u80fd\u65e0\u6cd5\u8fde\u63a5\u5916\u7f51\uff0c\u6240\u4ee5\u6211\u5728\u955c\u50cf\u7f51\u7ad9\u63d0\u524d\u4e0b\u8f7d\u5e76\u5c06\u6587\u4ef6\u5939\u4fdd\u5b58\u5728\u4e86\u672c\u5730\u3002</p> <pre><code># Load tokenizer\nbert_base_uncased = \"/home/24hpc101/h3230102778/Lab5_Environment/bert-base-uncased\"\ntokenizer = AutoTokenizer.from_pretrained(bert_base_uncased)\nprint(\"Tokenizer loaded.\")\n</code></pre> <p>\u4ece Transformer \u7684\u7ed3\u6784\u56fe\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u6211\u4eec\u9700\u8981\u5c06 \"zh\" \u548c \"en\" \u53e5\u5b50\u5206\u522b\u8f93\u5165 <code>encoder</code> \u548c <code>decoder</code> \u3002\u56e0\u800c\u6211\u4eec\u9700\u8981\u62c6\u5206 \"zh\" \u548c \"en\"\u3001\u5206\u8bcd\u540e\u7684 <code>enc-inputs</code> \u548c <code>dec_inputs</code> \u3002</p> <p>AutoTokenizer \u4f1a\u5728\u5206\u8bcd\u540e\u6839\u636e tokenizer.vocab \u8bcd\u5178\u5c06\u6bcf\u4e2a token \u53d8\u4e3a\u5bf9\u5e94\u7684id\u3002\u5728\u8fd9\u91cc\u6211\u53ea\u4f7f\u7528\u4e86\u5904\u7406\u540e\u7684 [\"input_ids\"] \u90e8\u5206\u3002</p> <pre><code># Rebuild Dataset class\n# We need tokenized enc_inputs and dec_inputs\ndef rebuild_data(dataset):\n    zh_raw, en_raw = [], []\n    for sample in dataset:\n        zh_raw.append(sample[\"translation\"][\"zh\"])\n        en_raw.append(sample[\"translation\"][\"en\"])\n\n    enc_inputs = tokenizer(\n            zh_raw,\n            padding=\"max_length\", \n            max_length=max_input_length,\n            truncation=True,\n            return_tensors=\"pt\"\n        )[\"input_ids\"]\n\n    dec_inputs = tokenizer(\n            en_raw,\n            padding=\"max_length\", \n            max_length=max_target_length,\n            truncation=True,\n            return_tensors=\"pt\"\n        )[\"input_ids\"]\n\n    return enc_inputs, dec_inputs\n</code></pre> <p>\u5728\u5c06\u6570\u636e\u52a0\u8f7d\u5230 Dataloader \u4e4b\u524d\uff0c\u6211\u6784\u5efa\u4e86\u81ea\u5df1\u7684 dataset \u7c7b Data \uff1a</p> <pre><code>class Data(Dataset):\n\n    def __init__(self, enc_inputs, dec_inputs):\n        super(Data, self).__init__()\n        self.enc_inputs = enc_inputs\n        self.dec_inputs = dec_inputs\n\n    def __len__(self):\n        return self.enc_inputs.shape[0]\n\n    def __getitem__(self, index):\n        return self.enc_inputs[index], self.dec_inputs[index]\n</code></pre> <p>\u8fd9\u6837\u6784\u5efa\u5176\u5b9e\u662f\u5728\u7f16\u5199\u5b8c PositionalEncoding \u548c TransformerModel \u540e\u56de\u63a8\u9700\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u6839\u636e\u7ed3\u6784\u6784\u5efa\u6570\u636e\u7684\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#312-positional-encoding","title":"3.1.2 Positional Encoding","text":"<p><code>PositionalEncoding</code> \u6a21\u5757\u5927\u91cf\u53c2\u8003\u7f51\u4e0a\u8d44\u6599\u3002\u7f51\u4e0a\u7684\u5b9e\u73b0\u57fa\u672c\u96f7\u540c\uff0c\u6838\u5fc3\u662f\u7ffb\u8bd1\u539f\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u8ba1\u7b97\u516c\u5f0f\u3002</p> <pre><code># PositionalEncoding\nclass PositionalEncoding(nn.Module):\n\n    def __init__(self, d_model, dropout=0.1, max_len=5000):\n        # max_len determines how far the position can have an effect on a token\n        super(PositionalEncoding, self).__init__()\n        self.dropout = nn.Dropout(p=dropout)\n\n        # Compute the positional encodings once in log space\n        pe = torch.zeros(max_len, d_model)\n        position = torch.arange(0, max_len, dtype=torch.float).unsqueeze(1)\n        div_term = torch.exp(torch.arange(0, d_model, 2).float() * (-math.log(10000.0) / d_model))\n\n        # PE(pos, 2i) = sin(pos/1000^(2i/dim_model))\n        pe[:, 0::2] = torch.sin(position * div_term)\n        # PE(pos, 2i + 1) = cos(pos/1000^(2i/dim_model))\n        pe[:, 1::2] = torch.cos(position * div_term)\n        # Saving buffer (same as parameter without gradients needed)\n        pe = pe.unsqueeze(0).transpose(0, 1)\n        self.register_buffer(\"pe\", pe)\n\n    def forward(self, x):\n        # Residual connection + pos encoding\n        x = x + self.pe[:x.size(0), :]\n        return self.dropout(x)\n</code></pre> <p>\u5176\u4e2d <code>transpose(0, 1)</code> \u662f\u56e0\u4e3a\u5728\u9ed8\u8ba4\u4e0b <code>nn.Transformer</code> \u7684\u8f93\u5165\u683c\u5f0f\u662f <code>&lt;src_len, batch_size, d_model&gt;</code> \u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#313-transformer-model","title":"3.1.3 Transformer Model","text":"<p><code>TransformerModel</code> \u5b9e\u9645\u6784\u5efa\u4e86\u6574\u4e2a Transformer \u6a21\u578b\uff0c\u5c06\u5404\u4e2a\u6a21\u5757\u7ec4\u88c5\u5728\u4e00\u8d77\u3002\u5728\u7eaf\u624b\u5de5\u6784\u5efa Transformer \u4e2d\u4e5f\u6709\u8fd9\u4e2a\u7ec4\u88c5\u7684\u8fc7\u7a0b\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u56e0\u4e3a\u4f7f\u7528\u4e86 <code>nn.Transformer</code> \uff0c\u7528\u4e8e\u7ec4\u88c5\u7684\u6a21\u5757\u7b80\u5316\u4e86\u3002</p> <p>\u5728\u8fd9\u91cc\u7684\u7ec4\u88c5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86 <code>PositionalEncoding</code> \u3002<code>Embedding</code> \u5c42\u548c <code>Linear</code> \u5c42\u90fd\u53ef\u4ee5\u4ece <code>torch.nn</code> \u3002</p> <p>\u5173\u4e8e Transformer \u4e2d\u7528\u5230\u7684\u5404\u79cd mask \uff0c\u6211\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u3002 mask \u7684\u4f5c\u7528\u662f\u63a9\u76d6\u90e8\u5206\u4fe1\u606f\uff0c\u4f7f\u4e4b\u4e0d\u4f1a\u53c2\u4e0e\u540e\u9762\u7684\u8ba1\u7b97\u3002<code>src_mask</code> \u548c <code>tgt_mask</code> \u7684\u76ee\u7684\u662f\u63a9\u76d6\u5f53\u524d\u4f4d\u7f6e\u540e\u9762\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u5904\u7406\u5f53\u524d\u4fe1\u606f\u65f6\u662f\u4e0d\u77e5\u9053\u672a\u6765\u7684\u4fe1\u606f\u7684\uff0c\u4e5f\u56e0\u6b64\u662f\u4e0a\u4e09\u89d2\u5f62\u3002<code>src_key_padding_mask</code> \u548c <code>tgt_key_padding_mask</code> \u662f\u4e3a\u4e86\u63a9\u76d6\u7528\u4e8e padding \u7684\u586b\u5145\u5b57\u7b26\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u53c2\u8003\u4e86\u7f51\u4e0a\u8d44\u6599\u3002</p> <p><code>Softmax</code> \u7531\u4e8e <code>CrossEntropyLoss</code> \u4e2d\u6709\u5305\u542b\uff0c\u6240\u4ee5\u4e0d\u7528\u5b9e\u73b0\u3002</p> <pre><code># TransformerModel\nclass TransformerModel(nn.Module):\n\n    def __init__(self, src_vocab_size, tgt_vocab_size):\n        super(TransformerModel, self).__init__()\n\n        #LAYERS\n        self.transformer = nn.Transformer(d_model=d_model, nhead=n_heads, num_encoder_layers=n_layers, num_decoder_layers=n_layers, dim_feedforward=d_ff)\n\n        self.src_emb = nn.Embedding(num_embeddings=src_vocab_size, embedding_dim=d_model)\n        self.pos_emb = PositionalEncoding(d_model=d_model)\n        self.tgt_emb = nn.Embedding(num_embeddings=tgt_vocab_size, embedding_dim=d_model)\n        self.linear = nn.Linear(in_features=d_model, out_features=tgt_vocab_size, bias=False).to(device)\n\n    def forward(self, enc_inputs, dec_inputs):\n        \"\"\"\n        enc_inputs: &lt;batch_size, src_len&gt;\n        dec_inputs: &lt;batch_size, tgt_len&gt;\n        \"\"\"\n        batch_size, src_len = enc_inputs.shape[0], enc_inputs.shape[1]\n        batch_size, tgt_len = dec_inputs.shape[0], dec_inputs.shape[1]\n\n        # The current position cannot attend to positions after it\n        src_mask = self.transformer.generate_square_subsequent_mask(src_len).to(device)\n        tgt_mask = self.transformer.generate_square_subsequent_mask(tgt_len).to(device)\n        # Generate bool tensors with size of &lt;batch_size, len&gt;, \"True\" is masked\n        # To mark the padded position\n        src_key_padding_mask = enc_inputs.data.eq(0).to(device)\n        tgt_key_padding_mask = dec_inputs.data.eq(0).to(device)\n        memory_key_padding_mask = src_key_padding_mask\n        memory_mask = None\n\n        enc_embed_outputs = self.src_emb(enc_inputs)\n        enc_pos_outputs = self.pos_emb(enc_embed_outputs.transpose(0, 1)).to(device)\n        dec_embed_outputs = self.tgt_emb(dec_inputs)\n        dec_pos_outputs = self.pos_emb(dec_embed_outputs.transpose(0, 1)).to(device)\n\n        # Using nn.Transformer model\n        dec_outputs = self.transformer(src=enc_pos_outputs, tgt=dec_pos_outputs, src_mask=src_mask, tgt_mask=tgt_mask, memory_mask=None, src_key_padding_mask=src_key_padding_mask, tgt_key_padding_mask=tgt_key_padding_mask, memory_key_padding_mask=memory_key_padding_mask)\n\n        # Linear layer\n        dec_logits = self.linear(dec_outputs.transpose(0, 1)).to(device)\n\n        return dec_logits.view(-1, dec_logits.size(-1))\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#314-train-loop","title":"3.1.4 Train Loop","text":"<p>\u5bf9\u4e8e\u7f16\u5199\u597d\u7684\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5582\u6570\u636e\u6765\u8bad\u7ec3\u5b83\u3002\u524d\u9762\u5df2\u7ecf\u5b8c\u6210\u4e86 <code>data_loader</code> \u7684\u6784\u5efa\uff0c\u8bad\u7ec3\u7684\u8fc7\u7a0b\u5c31\u662f\u4e0d\u65ad\u4ece\u5176\u4e2d\u62bd\u53d6 <code>enc_inputs</code> \u548c <code>dec_inputs</code> \u8f93\u5165\u6a21\u578b\uff0c\u5c06\u5f97\u5230\u7684 <code>outputs</code> \u4e0e <code>dec_inputs</code> \u505a\u5bf9\u6bd4\u8ba1\u7b97 <code>loss</code> \uff0c\u5229\u7528 <code>loss.backward()</code> \u8ba1\u7b97\u53cd\u5411\u4f20\u64ad\u7684\u68af\u5ea6\uff0c\u4ee5\u6b64\u6765\u66f4\u65b0\u6a21\u578b\uff0c\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4f7f\u4e4b\u66f4\u7b26\u5408\u7ffb\u8bd1\u4efb\u52a1\u7684\u9700\u6c42\u3002\u5177\u4f53\u7684\u539f\u7406\u89e3\u91ca\u4e5f\u53ef\u4ee5\u770b 3Blue1Brown \u3002</p> <pre><code>def train_loop(data_loader, model, optimizer, lr_scheduler, epoch):\n\n    total_loss = 0\n\n    for enc_inputs, dec_inputs in data_loader:\n        \"\"\"\n        enc_inputs: &lt;batch_size, max_input_length&gt;\n        dec_inputs: &lt;batch_size, max_target_length&gt;\n        \"\"\"\n        enc_inputs, dec_inputs = enc_inputs.to(device), dec_inputs.to(device)\n        dec_outputs = dec_inputs.to(device)\n        \"\"\"\n        outputs: &lt;batch_size * tgt_len, tgt_vocab_size&gt;\n        \"\"\"\n        outputs = model(enc_inputs, dec_inputs)\n        loss = criterion(outputs, dec_outputs.view(-1))\n        total_loss += loss\n        print(\"Epoch:\", \"%04d\" % (epoch + 1), \"loss =\", \"{:.6f}\".format(loss))\n\n        optimizer.zero_grad()\n        loss.backward()\n        optimizer.step()\n        lr_scheduler.step()        \n\n    return total_loss\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#315","title":"3.1.5 \u635f\u5931\u51fd\u6570 &amp; \u4f18\u5316\u5668","text":"<p>\u8ba1\u7b97 <code>loss</code> \u65f6\u9700\u8981\u635f\u5931\u51fd\u6570 <code>criterion</code> \uff1b\u4f18\u5316\u5668 <code>optimizer</code> \u7528\u4e8e\u57fa\u4e8e\u8ba1\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u5bf9\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\uff1b<code>lr_scheduler</code> \u662f\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\uff0c\u7528\u4e8e\u52a8\u6001\u66f4\u65b0\u53c2\u6570\u66f4\u65b0(\u68af\u5ea6\u4e0b\u964d)\u65f6\u7684\u6b65\u957f\uff0c\u5176\u4e2d <code>num_warmup_steps</code> \u662f\u9884\u70ed\u6b65\u9aa4\u7684\u6570\u91cf\uff0c\u5728\u9884\u70ed\u9636\u6bb5\uff0c\u5b66\u4e60\u7387\u4f1a\u9010\u6e10\u4ece\u521d\u59cb\u503c\u589e\u52a0\u5230\u9884\u8bbe\u7684\u6700\u5927\u503c\u6216\u8005\u4ec5\u4ec5\u662f\u7a33\u5b9a\u5728\u67d0\u4e2a\u521d\u59cb\u503c\u4e0a\uff0c\u6709\u52a9\u4e8e\u6a21\u578b\u5728\u8bad\u7ec3\u521d\u671f\u66f4\u52a0\u7a33\u5b9a\u3002</p> <pre><code># Criterion\ncriterion = nn.CrossEntropyLoss(ignore_index=0)\n# Optimizer\noptimizer = optim.SGD(model.parameters(), lr=1e-3, momentum=0.99)\n# scheduler\nlr_scheduler = get_scheduler(\n    \"linear\",\n    optimizer=optimizer,\n    num_warmup_steps=100,\n    num_training_steps=1000,\n)\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#316-valid-loop","title":"3.1.6 Valid Loop","text":"<p>\u6bcf\u4e2a epoch \u7ed3\u675f\u540e\u4f1a\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u8bd5\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u597d\u7406\u89e3\u7684\uff0c\u6211\u4eec\u5c06\u6d4b\u8bd5\u96c6\u4e2d \"zh\" \u53e5\u5b50\u8f93\u5165\u6a21\u578b\u4e2d\uff0c\u7ffb\u8bd1\u51fa\u6765\u7684\u53e5\u5b50\u4e0e \"en\" \u53e5\u5b50\u505a\u6bd4\u8f83\u6765\u8bc4\u4ef7\u6a21\u578b\u6027\u80fd\u3002\u8bc4\u4ef7\u7684\u6807\u51c6\u4e3a BLEU(bilingual evaluation understudy) \u5177\u4f53\u6765\u8bf4\u9700\u8981\u7528\u5230 <code>torch.argmax</code> \u53d6\u51fa\u9884\u6d4b\u4e2d\u6982\u7387\u6700\u5927\u7684\u8bcd\u7684 id \uff0c\u7528 <code>tokenizer.batch_decode</code> \u5c06 id \u8f6c\u5316\u4e3a\u5bf9\u5e94\u7684\u8bcd\uff0c\u7528 <code>nltk.translate.bleu_score.corpus_bleu</code> \u8ba1\u7b97 BLEU \u503c\u3002</p> <p>\u4f46\u4f7f\u7528\u8d77\u6765\u76f8\u5f53\u9ebb\u70e6\uff0c<code>corpus_bleu</code> \u4e25\u683c\u8981\u6c42 <code>references</code> \u548c <code>hypotheses</code> \u5e8f\u5217\u957f\u5ea6\u76f8\u540c\uff1b <code>enc_inputs</code> \u7ecf\u8fc7 model \u5904\u7406\u540e\u5f62\u72b6\u4f1a\u6539\u53d8\u4e3a <code>&lt;batch_size * max_inputs_len, tokeinzer.vocab_size&gt;</code> \uff0c\u518d\u7ecf\u8fc7 <code>torch.argmax</code> \u5904\u7406\u540e\u53d8\u4e3a <code>&lt;batch_size * max_inputs_len&gt;</code> \uff0c\u8fd9\u610f\u5473\u7740\u5728\u8fdb\u884c <code>tokenizer.batch_decode</code> \u4e4b\u524d\u9700\u8981\u5c06 <code>valid_outputs</code> \u4e5f\u53d8\u6210\u76f8\u540c\u7684\u5f62\u72b6\u3002</p> <p>\u7406\u8bba\u4e0a\u8fd8\u9700\u8981\u8003\u8651 mask \u7684\u5f71\u54cd\uff0c\u4f46\u6211\u5b9e\u5728\u60f3\u4e0d\u51fa\u600e\u4e48\u628a mask \u4e5f\u653e\u8fdb\u53bb\u3002</p> <p>\u4e3a\u4e86\u8ba9 <code>corpus_bleu</code> \u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u6211\u51e0\u4e4e\u662f\u5c06\u4e24\u4e2a\u8f93\u5165\u786c\u51d1\u51fa\u6765\u7684\uff0c\u6240\u4ee5 BLEU \u503c\u4e5f\u53ef\u4ee5\u60f3\u89c1\u7684\u60e8\u4e0d\u5fcd\u7779\u3002</p> <pre><code>def valid_loop(dataloader, model):\n    model.eval()\n\n    references = []\n    hypotheses = []\n\n    with torch.no_grad():\n        for valid_inputs, valid_outputs in dataloader:\n            valid_inputs, valid_outputs = valid_inputs.to(device), valid_outputs.to(device)\n\n            dec_outputs = model(valid_inputs, valid_outputs)\n\n            dec_outputs = torch.argmax(dec_outputs, dim=-1)\n            valid_outputs = valid_outputs.view(-1)\n\n            # print(dec_outputs.shape)\n            # print(valid_outputs.shape)\n\n            decoded_preds = tokenizer.batch_decode(dec_outputs)\n            decoded_labels = tokenizer.batch_decode(valid_outputs)\n\n            hypotheses += [pred.strip() for pred in decoded_preds]\n            references += [label.strip() for label in decoded_labels]\n\n    bleu_score = corpus_bleu(hypotheses, references)\n    print(f'BLEU score: {bleu_score * 10}')\n    return bleu_score\n</code></pre>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#32","title":"3.2 \u6a21\u578b\u6d4b\u8bd5 &amp; \u5b9e\u9a8c\u7ed3\u679c","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#321-loss","title":"3.2.1 loss \u503c","text":"<p>\u603b\u4f53\u6765\u8bf4\u6a21\u578b\u6d4b\u8bd5\u7684\u7ed3\u679c\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u3002</p> <p>\u5728\u7f16\u5199\u5b8c <code>Train Loop</code> \u540e\u8fdb\u884c\u4e86\u5168\u6570\u636e\u7684\u6d4b\u8bd5\u3002\u5982\u679c\u4f7f\u7528\u5b9e\u9a8c\u6587\u6863\u7ed9\u51fa\u7684<code>lr=1e-8, momentum=0.9</code> \u5728\u6211\u7684\u6a21\u578b\u4e2d\u4f1a\u5bfc\u81f4 <code>loss</code> \u503c\u4e0d\u80fd\u6b63\u5e38\u4e0b\u964d\uff0c\u4f1a\u4e00\u76f4\u5728\u9ad8\u4f4d(<code>loss</code> = 7 \u5de6\u53f3\uff0c\u8be6\u89c1 test_1.log )\u5f98\u5f8a\uff1a</p> <p></p> <p>\u56e0\u6b64\u6211\u5c06\u503c\u6539\u4e3a\u4e86 <code>lr=1e-3, momentum=0.99</code> \u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u7684\u6a21\u578b\u5728\u4e00\u4e2a\u5c0f\u65f6\u5185\u8fde 1 \u4e2a epoch \u90fd\u8dd1\u4e0d\u5b8c\uff0c\u80fd\u663e\u793a\u51fa\u6765\u7684\u6700\u591a\u662f 149755 \u6761 loss \u6570\u636e\uff0c\u6b64\u65f6 loss \u503c\u5df2\u7ecf\u6536\u655b\u5230\u4e86\u76f8\u5f53\u4f4e\u7684\u6c34\u5e73\uff0c\u8be6\u89c1 test_2.log \u3002</p> <p></p> <p>\u8003\u8651\u5230 <code>lr</code> \u7684\u542b\u4e49\uff0c\u63a8\u6d4b\u662f\u8bad\u7ec3\u7684\u6b21\u6570\u4e0d\u591f\u5bfc\u81f4 <code>lr=1e-8</code> \u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u5f88\u597d\u7684\u6536\u655b\u5c31\u7ed3\u675f\u4e86\u3002</p> <p>\u4e3a\u4e86\u80fd\u5355\u7eaf\u7684\u6a21\u62df\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u6211\u4e0d\u5f97\u4e0d\u4ec5\u4ece\u6570\u636e\u96c6\u4e2d\u53d6\u51fa 50000 \u6761\u7528\u4e8e\u8bad\u7ec3\uff0cepoch_num = 10 \u3002\u8fd9\u6837 loss \u503c\u5c31\u53ea\u80fd\u6536\u655b\u5230 4 \u5de6\u53f3\uff0c\u8be6\u89c1 test_final.log \u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#322-tensorboard","title":"3.2.2 Tensorboard \u6a21\u578b\u7684\u635f\u5931\u66f2\u7ebf","text":"<p>Tensorboard \u76f4\u63a5\u53c2\u7167 Pytorch\u5b98\u65b9\u6587\u6863 \u914d\u7f6e\u3002</p> <p></p> <p>\u5c3d\u7ba1\u9664\u4e86\u7b2c\u4e00\u4e2a epoch \u4e0e\u540e\u9762\u7684 epoch \u4e4b\u95f4\u6709\u65ad\u5d16\u5f0f\u7684\u4e0b\u67b6\uff0c\u540e\u9762\u51e0\u4e2a epoch \u7684 loss \u503c\u90fd\u5dee\u4e0d\u591a\uff0c\u4f46\u4ece\u56fe\u4e2d\u80fd\u770b\u51fa 10 \u4e2a epoch \u7684 loss \u503c\u7ecf\u8fc7\u62df\u5408\u540e\u5448\u73b0\u901f\u7387\u9010\u6e10\u964d\u4f4e\u7684\u9012\u51cf\u8d8b\u52bf\u3002\u5728\u8fd9\u91cc\u6211\u7528\u4e8e\u7edf\u8ba1\u7684\u662f\u6bcf\u4e2a epoch \u7684\u5e73\u5747 <code>mean_loss</code> \u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#323-bleu","title":"3.2.3 BLEU \u503c","text":"<p>\u53ef\u4ee5\u9884\u89c1\uff0c\u8fd9\u4e2a\u6a21\u578b\u662f\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u7684\u3002\u52a0\u4e0a\u6211\u7684\u8bad\u7ec3\u6570\u636e\u91cf\u7f29\u5c0f\u4e86\uff0cepoch \u4e5f\u51cf\u5c11\u4e86\uff0cBLEU \u503c\u5fc5\u7136\u5f88\u4f4e\u3002\u4f46\u786e\u5b9e\u5f88\u96be\u60f3\u8c61 BLEU \u503c\u80fd\u4f4e\u5230\u8fd9\u4e2a\u7a0b\u5ea6\uff1a</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#324-gpu","title":"3.2.4 GPU \u5360\u7528\u7387","text":"<p>\u5728\u4f7f\u7528 slurm \u63d0\u4ea4\u4f5c\u4e1a\u540e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 ssh \u8fdb\u5165\u8be5\u8282\u70b9\u3002<code>nvidia-smi</code> \u53ef\u4ee5\u67e5\u770b\u663e\u5361\u5360\u7528\u60c5\u51b5\u3002</p> <p></p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#4","title":"4. \u4e00\u4e9b\u601d\u8003","text":"<p>lab5 \u76f8\u5bf9\u53d1\u5e03\u7684\u65e9\u4e00\u4e9b\uff0c\u52a0\u4e0a\u672c\u6765\u5c31\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u63d0\u4ea4\u4e86 PAC \u540e\u5c31\u5f00\u59cb\u505a lab5 \uff0c\u4f46\u662f\u6ca1\u60f3\u5230\u505a\u4e86\u8fd9\u4e48\u4e45\u3002\u4e00\u65b9\u9762\uff0c\u4e00\u5f00\u59cb\u6ca1\u770b\u5230\u662f\u7528 nn.Trnasformer \u5b9e\u73b0\uff0c\u6240\u4ee5\u4e00\u76f4\u5728\u5b66\u7ec6\u5316\u7684\u5404\u4e2a\u6a21\u5757\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u4e5f\u786e\u5b9e\u9047\u5230\u4e86\u5f88\u591a\u56f0\u96be\uff0c\u6574\u4e2a\u8fc7\u7a0b\u50cf\u662f\u5230\u5904\u5316\u7f18\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u8981\u82b1\u5f88\u957f\u65f6\u95f4\u3001\u67e5\u5f88\u591a\u8d44\u6599\u624d\u80fd\u5b9e\u73b0\uff0c\u7f3a\u5c11\u4e00\u6761\u4e3b\u7ebf\uff0c\u53d8\u6210\u4e86\u88ab\u52a8\u5904\u7406\u4e00\u4e2a\u4e2a\u62a5\u9519\u3002</p> <p>\u5982\u4eca\u529f\u80fd\u4e0a\u57fa\u672c\u5b9e\u73b0\u4e86\uff0c\u4f46\u6574\u4e2a\u6a21\u578b\u8fd8\u662f\u5343\u75ae\u767e\u5b54\u3002\u5728\u505a\u7684\u65f6\u5019\u6709\u4e2a\u5f88\u5927\u95ee\u9898\uff0c\u6ca1\u6709\u6293\u4f4f\u5f20\u91cf shape \u7684\u53d8\u5316\uff0c\u505a\u5230\u540e\u9762\u8fde\u81ea\u5df1\u90fd\u4e0d\u662f\u5f88\u6e05\u695a\u67d0\u4e00\u5c42\u4e4b\u540e\u7684 tensor \u662f\u4ec0\u4e48\u5f62\u72b6\u7684\u3002\u518d\u52a0\u4e0a\u672c\u8eab\u5bf9 Python \u5c31\u4e0d\u719f\u7ec3\uff0c\u5f88\u591a\u65f6\u5019\u9047\u5230\u62a5\u9519\u90fd\u4e0d\u80fd\u9488\u5bf9\u6027\u7684\u5feb\u901f\u89e3\u51b3\uff0c\u5c24\u5176\u662f\u6d89\u53ca tensor \u7684\u62a5\u9519\uff0c\u6bd4\u5982 BLEU \u503c\u7684\u8ba1\u7b97\u4e0a\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u8ba9 <code>references</code> \u548c <code>hypotheses</code> \u5e8f\u5217\u957f\u5ea6\u76f8\u540c\u3002</p> <p>\u4f46\u662f\u603b\u7684\u6765\u8bf4\u8fd8\u662f\u5f88\u611f\u6fc0\u8fd9\u4e2a lab \uff0c\u8ba9\u6211\u83b7\u76ca\u826f\u591a\u3002\u65e5\u540e\u4e5f\u5e0c\u671b\u62bd\u65f6\u95f4\u8ddf\u7740 The Annotated Transformer \u5b8c\u6574\u7684\u590d\u73b0\u4e00\u6b21\u3002\u8fd9\u4efd\u5b9e\u9a8c\u62a5\u544a\u4e5f\u7b97\u5b9e\u9a8c\u7ed3\u675f\u540e\u7684\u4e00\u4e2a\u590d\u76d8\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u5398\u6e05\u601d\u8def\uff0c\u4e5f\u8ba9\u6574\u4e2a Transformer \u7684\u67b6\u6784\u66f4\u52a0\u6e05\u6670\uff0c\u4e3a\u65e5\u540e\u7684\u5b8c\u6574\u590d\u73b0\u6253\u4e0b\u57fa\u7840\u3002</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#5","title":"5. \u53c2\u8003\u8d44\u6599 &amp; \u9644\u4ef6","text":""},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#51","title":"5.1 \u53c2\u8003\u8d44\u6599","text":"<p>Transformer \u67b6\u6784\u7684\u7406\u89e3\uff1a\u539f\u8bba\u6587 \u30013Blue1Brown \u3001The Illustrated Transformer \u3001\u6df1\u5ea6\u5b66\u4e60 Transformer \u67b6\u6784\u8be6\u89e3\uff1a\u4ee3\u7801 + \u56fe\u793a</p> <p>Transformer \u5b8c\u6574\u4ee3\u7801\u8bb2\u89e3\uff1aThe Annotated Transformer \u3001YouTube--Coding a Transformer from scratch on PyTorch, with full explanation, training and inference. \u3001Github</p> <p>nn.Transformer \u6a21\u5757\u7684\u7406\u89e3\uff1aPytorch\u5b98\u65b9\u6587\u6863 \u3001Transformer \u7684 PyTorch \u5b9e\u73b0 \u3001A detailed guide to PyTorch\u2019s nn.Transformer() module.</p> <p>\u6570\u636e\u9884\u5904\u7406\uff1aTransformers \u5feb\u901f\u5165\u95e8--\u7b2c\u5341\u7ae0\uff1a\u7ffb\u8bd1\u4efb\u52a1</p> <p>Mask \u7684\u8bbe\u5b9a\uff1aCSDN--\u501f\u52a9nn.Transformer\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u4efb\u52a1 </p> <p>\u4f7f\u7528 nn.Transformer \u7684\u6574\u4f53\u67b6\u6784\uff1aGithub</p> <p>TensorBoard \u5165\u95e8\uff1aPytorch\u5b98\u65b9\u6587\u6863 \u3001CSDN--TensorBoard\u5feb\u901f\u5165\u95e8(Pytorch\u4f7f\u7528TensorBoard)</p> <p>BLEU\uff1a\u5b98\u65b9\u6587\u6863</p>"},{"location":"HPC%20101/Lab%20Reports/lab5%20report/lab5%20report/#52","title":"5.2 \u9644\u4ef6","text":"<p>\u5b8c\u6574\u4ee3\u7801\uff1aLab5_final.py</p> <p>\u4e09\u4efd\u65e5\u5fd7\uff1atest_1.log \u3001test_2.log \u3001test_final.log</p> <p>\u4fdd\u5b58\u4e0b\u6765\u7684\u6a21\u578b\uff1aepoch_1_valid_bleu_8.270643360434647e-231_model_weights.bin</p> <p>TensorBoard \u6587\u4ef6\uff1aevents.out.tfevents.1724505064.M604.562468.0</p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/","title":"PAC","text":"<p>\u4e3b\u8981\u7528\u4e8ePAC\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u7684\u8bb0\u5f55\uff0c\u4f1a\u5f88\u4e0d\u6210\u4f53\u7cfb\uff0c\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u5728\u75af\u72c2\u8865\u6f0f  </p> <p>VScode\u901a\u8fc7ssh\u8fde\u63a5\u96c6\u7fa4 </p> <p>\u52a0\u8f7d\u73af\u5883 <code>source load.sh</code></p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#winograd","title":"winograd","text":"<p>\u8fd9\u5b9e\u5728\u662f\u4e00\u4e2a\u75db\u82e6\u7684\u8fc7\u7a0b\uff0c\u50cf\u4e2a\u65e0\u5934\u82cd\u8747 \u5148\u7b80\u7b54\u4ecb\u7ecdwinograd\u7b97\u6cd5\uff0c\u5176\u5b9e\u5c31\u662f\u6309\u4e0b\u9762\u7684\u6b65\u9aa4\u505a\u5377\u79ef\u8fd0\u7b97  </p> <p> </p> <p>\u6211\u4eec\u8981\u4fee\u6539 <code>winograd.c</code> \u6587\u4ef6 \u6211\u627e\u7684\u53ef\u80fd\u7684\u7a81\u7834\u53e3\u662f <code>sgemm</code> \u51fd\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u5355\u7cbe\u5ea6\u901a\u7528\u77e9\u9635\u4e58\u6cd5\u3002\u5728\u539f\u4ee3\u7801\u4e2d\u5df2\u7ecf\u7b80\u5355\u7528\u4e86 <code>OpenMP</code> \u4e2d\u7684\u6307\u4ee4\u6765\u5e76\u884c\u5316\u5d4c\u5957\uff0c\u4f46\u8089\u773c\u53ef\u89c1\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6548\u7387\u5f88\u4f4e\u7684\u51fd\u6570  </p> <p>\u9996\u5148\u80fd\u60f3\u5230\u7684\u5c31\u662fSIMD\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u5355\u6307\u4ee4\u591a\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u5411\u91cf\u5316   \u8981\u5b9e\u73b0SIMD\uff0c\u6211\u6240\u77e5\u9053\u7684\u9014\u5f84\u6709 <pre><code>Lab2\u91cc\u9762\u7684\u624b\u5199SIMD\n\u4f7f\u7528\u6307\u4ee4\u96c6\u53bb\u5b9e\u73b0\uff0c\u6bd4\u5982NEON\uff08\u5728 ARM \u5904\u7406\u5668\u4e0a\uff09\u6216 SSE/AVX\uff08\u5728 x86 \u5904\u7406\u5668\u4e0a\uff09  \nNVIDIA GPU,\u7528CUDA\u7f16\u7a0b  \n</code></pre></p> <p>\u8fd9\u91cc\u6bd4\u8d5b\u7ed9\u51fa\u7684\u786c\u4ef6\u53c2\u6570\u662f  </p> <p> </p> <p>\u6240\u4ee5\u5c1d\u8bd5\u5b66\u4e60\u7684\u662fARM SIMD\u6307\u4ee4\u96c6neon CSDN\u6587\u6863 b\u7ad9\u89c6\u9891 \u5b98\u65b9\u6307\u4ee4\u96c6\u6587\u6863 </p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#arm-neon-simd-coprocessor","title":"ARM-NEON-SIMD-COPROCESSOR","text":"<p>ARM-NEON\u5355\u6307\u4ee4\u591a\u6570\u636e\u534f\u5904\u7406\u5668  </p> <p>ARM\u5e73\u53f0\u4e0b\u63d0\u4f9b\u4e24\u79cd\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u6c47\u7f16\u8bed\u8a00\uff08\u663e\u7136\u4e0d\u4f1a\uff09\uff1b\u53e6\u4e00\u79cd\u662fNEON intrinsics\uff08C\uff0c\u7c7b\u4f3c\u51fd\u6570\u8c03\u7528\uff09\uff0c\u662f\u5e95\u5c42\u6c47\u7f16\u6307\u4ee4\u7684\u5c01\u88c5\uff0c\u4e0d\u9700\u8981\u7528\u6237\u8003\u8651\u5e95\u5c42\u5bc4\u5b58\u5668\u7684\u5206\u914d\uff08\u8d85\u51fa\u4e5f\u53ef\u4ee5\u81ea\u52a8\u5206\u914d\uff09  </p> <p>\u65b0\u7684 Armv8a \u67b6\u6784\u6709 32 \u4e2a 128bit \u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8001\u7684 ArmV7a\u67b6\u6784\u6709 32\u4e2a 64bit(\u53ef\u5f53\u4f5c 16 \u4e2a128bit)\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u88ab\u7528\u6765\u5b58\u653e\u5411\u91cf\u6570\u636e\uff0c\u6bcf\u4e2a\u5411\u91cf\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\uff0c\u6839\u636e\u5904\u7406\u5143\u7d20\u7684\u5927\u5c0f\u53ef\u4ee5\u5212\u5206\u4e3a 2/4/8/16 \u4e2a\u901a\u9053</p> <p> </p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#neon","title":"NEON \u6570\u636e\u7c7b\u578b\u548c\u6307\u4ee4\u7c7b\u578b","text":""},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#neon_1","title":"NEON\u6570\u636e\u7c7b\u578b","text":"<p>\u5411\u91cf\u6570\u636e\u7c7b\u578b\u547d\u540d\u89c4\u5219 <pre><code>&lt;type&gt;&lt;size&gt;x&lt;number_of_lanes&gt;_t  \n# \u6bd4\u5982 int8x16_t \u662f\u4e00\u4e2a16\u901a\u9053\u7684\u5411\u91cf\uff0c\u6bcf\u4e2a\u901a\u9053\u5305\u542b\u4e00\u4e2a\u6709\u7b26\u53f78\u4f4d\u6574\u6570  \n</code></pre></p> <p> </p> <p>D\u5bc4\u5b58\u5668\u4e00\u6b21\u80fd\u591f\u5904\u74068\u4e2au8\u6570\u636e\uff0cQ\u5904\u7406\u5668\u4e00\u6b21\u80fd\u591f\u5904\u740616\u4e2au8\u6570\u636e  </p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#neon_2","title":"NEON\u6307\u4ee4\u7c7b\u578b","text":"<p>NEON\u6307\u4ee4\u7684\u51fd\u6570\u540d\u683c\u5f0f <pre><code>v&lt;mod&gt;&lt;opname&gt;&lt;shape&gt;&lt;flags&gt;_&lt;type&gt;  \n# v:vector  \n# mod\u6709\u4ee5\u4e0b\u51e0\u79cd  \n# q:\u9971\u548c\u8ba1\u7b97\uff0ch:\u6298\u534a\u8ba1\u7b97\uff0cd:\u52a0\u500d\u8ba1\u7b97\uff0cr:\u820d\u5165\u8ba1\u7b97\uff0cp\uff1apairwise\u8ba1\u7b97\uff0c\u5177\u4f53\u89c1CSDN\u6587\u6863\uff0c\u4e00\u822c\u5c31\u7528\u9971\u548c\u8ba1\u7b97  \n# opname:operation name  \n# shape\u6709\u4e00\u4e0b\u51e0\u79cd  \n# l:long\uff0c\u8f93\u51fa\u5411\u91cf\u5143\u7d20\u957f\u5ea6\u662f\u8f93\u5165\u7684\u4e24\u500d  \n# w:wide\uff0c\u7b2c\u4e00\u4e2a\u8f93\u5165\u5411\u91cf\u548c\u8f93\u51fa\u5411\u91cf\u7c7b\u578b\u4e00\u6837\uff0c\u4e14\u662f\u7b2c\u4e8c\u4e2a\u8f93\u5165\u5411\u91cf\u5143\u7d20\u957f\u5ea6\u7684\u4e24\u500d  \n# n:narrow\uff0c\u8f93\u51fa\u5411\u91cf\u7684\u5143\u7d20\u957f\u5ea6\u662f\u8f93\u5165\u5411\u91cf\u76841/2  \n# _n:\u6709\u6807\u91cf\u53c2\u4e0e\u5411\u91cf\u8ba1\u7b97  \n# _lane:\u6307\u5b9a\u5411\u91cf\u4e2d\u67d0\u4e2a\u901a\u9053\u53c2\u4e0e\u5411\u91cf\u8ba1\u7b97  \n</code></pre></p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#neon_3","title":"NEON\u6307\u4ee4\u4ecb\u7ecd","text":"<p>\u4e00\u4e2aNEON\u7684\u6307\u4ee4\u6267\u884c\u4ee5\u4e0b\u6d41\u7a0b  </p> <p> </p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#sgemm","title":"sgemm","text":"<p>NEON\u7684\u57fa\u7840\u5185\u5bb9\u5341\u5206\u5197\u957f\uff0c\u800c\u6211\u8981\u505a\u7684\u5c31\u662f\u7528NEON\u5b9e\u73b0SIMD\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u76f4\u63a5\u4e0a\u624b  </p> <p>\u4f18\u5316SGEMM\u7684\u65b9\u6cd5\u53c2\u8003\u5982\u4f55\u52a0\u901f\u77e9\u9635\u4e58\u6cd5\u3001\u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08GEMM\uff09\u4f18\u5316\u2014\u2014\u57fa\u4e8earm neon </p> <p>\u4f7f\u7528\u5230\u7684\u547d\u4ee4\u53ef\u4ee5\u5728Arm-neon-intrinsics Public \u4e2d\u7b80\u5355\u5feb\u901f\u67e5\u627e  </p> <p>\u8ba9\u6211\u4eec\u5f00\u59cb  </p> <p>SGEMM\u6700\u539f\u59cb\u7684\u4ee3\u7801\u5dee\u4e0d\u591a\u662f\u8fd9\u6837 <pre><code>void sgemm(const float *A, const float *B, float *out, const int M, const int K, const int N) {\n  for (int i = 0; i &lt; M * N; ++i) {\n    out[i] = 0.0f;\n  }\n  for (int i = 0; i &lt; M; ++i)\n    for (int j = 0; j &lt; N; ++j)\n       for (int k = 0; k &lt; K; ++k)\n          out[i * N + j]  += A[i * K + k] * B[k * N + j];\n}\n</code></pre></p> <p>\u8df3\u8fc7\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u6211\u4eec\u4ece\u5229\u7528neon intrinsic\u5f00\u59cb  </p> <p>\u5728ARM-v8\u4e2d\u670932\u4e2a128\u4f4d\u5b9a\u957f\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u53ef\u4ee5\u5b584\u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u652f\u6301SIMD\u5411\u91cf\u5316\u64cd\u4f5c\u3002\u5229\u7528\u8fd9\u4e00\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u56db\u4e2a\u56db\u4e2a\u5730\u8ba1\u7b97\u77e9\u9635out\u4e2d\u7684\u5143\u7d20\u3002</p> <p>\u8fd9\u91cc\u5c5e\u5b9e\u7ed9\u6211\u6574\u7684\u591f\u545b\uff0cCSDN\u4e2d\u867d\u7136\u7ed9\u4e86\u4ee3\u7801\uff0c\u4f46\u662f\u5217\u4e3b\u5e8f\u7684\uff0c\u6211\u662f\u7406\u89e3\u4e4b\u540e\u5199\u7684\u884c\u4e3b\u5e8f  </p> <pre><code>void sgemm_parallel(const float *A, const float *B, float *out, const int M, const int K, const int N) {\n  //#pragma omp parallel for collapse(2)\n  int i,j;\n  for (i=0;i&lt;M;++i){\n    for(j=0;j&lt;((N)&amp;(~3));j+=4){  //\u6211\u91c7\u7528\u6a2a\u5411\u540c\u65f6\u8ba1\u7b97out\u4e2d\u7684\u56db\u4e2a\u503c\uff0cN\u6709\u53ef\u80fd\u4e0d\u662f4\u7684\u6574\u6570\u500d\n      float32x4_t c=vmovq_n_f32(0.0f);  //\u4eceout\u4e2d\u6a2a\u5411\u8fde\u7eed\u53d6\u51fa\u56db\u4e2a\u4f4d\u7f6e\n      for(int k=0;k&lt;K;++k){   \n        float a=A[i*K+k];  //\u5bf9\u4e8eA\u5c31\u662f\u5bf9\u7b2ci\u884c\u4e00\u4e2a\u4e2a\u53d6\uff0c\u4e00\u5171k\u4e2a\n        float32x4_t b=vld1q_f32(&amp;B[k*N+j]);  //\u5bf9\u4e8eB\u5c31\u662f\u7eb5\u5411\u4e00\u4e2a\u4e2a\u53d6\uff0c\u540c\u65f6\u53d64\u5217\uff0c\u4e00\u5171k\u4e2a\n        c=vmlaq_n_f32(c,b,a);  //\u505a\u4e58\u6cd5\n      }\n      vst1q_f32(&amp;out[i*N+j],c);  //\u628a\u5bc4\u5b58\u5668\u4e2d\u6570\u636e\u52a0\u8f7d\u56de\u5185\u5b58\n    }\n    for(;j&lt;N;++j){  //\u5904\u7406\u5269\u4f59\u7684\u8fb9\u754c\n      register float temp=0.0f;\n      for(int k=0;k&lt;K;++k){\n        temp+=A[i*K+k]*B[k*N+j];\n      }\n      out[i*N+j]=temp;\n    }\n  }\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6bcf\u4e2a\u5185\u5faa\u73af\u662fA\u4e2d1\\(\\times\\)K\u7684\u5b50\u77e9\u9635\u4e58\u4ee5B\u4e2dk\\(\\times\\)4\u7684\u5b50\u77e9\u9635\u3002\u663e\u7136A\u4e2d\u5143\u7d20\u7684\u5229\u7528\u6548\u7387\u662f\u5f88\u4f4e\u7684\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u540c\u65f6load A\u4e2d\u76f8\u90bb\u76844\u884c\u5143\u7d20\uff0c\u8ba9\u5185\u5faa\u73af\u53d8\u6210A\u4e2d4\\(\\times\\)k\u7684\u5b50\u77e9\u9635\u4e58\u4ee5B\u4e2dk\\(\\times\\)4\u7684\u5b50\u77e9\u9635\u3002  </p> <p><pre><code>void sgemm_parallel(const float *A, const float *B, float *out, const int M, const int K, const int N) {\n  int i,j,k;\n  for(i=0;i&lt;((M)&amp;(~3));i+=4){\n    for(j=0;j&lt;((N)&amp;(~3));j+=4){\n      float *a_ptr_0,*a_ptr_1,*a_ptr_2,*a_ptr_3;\n      a_ptr_0=&amp;A[i*K+0];\n      a_ptr_1=&amp;A[(i+1)*K+0];\n      a_ptr_2=&amp;A[(i+2)*K+0];\n      a_ptr_3=&amp;A[(i+3)*K+0];\n\n      float32x4_t c_sum_0={0};\n      float32x4_t c_sum_1={0};\n      float32x4_t c_sum_2={0};\n      float32x4_t c_sum_3={0};\n\n      float a_reg_0,a_reg_1,a_reg_2,a_reg_3;\n\n      for(int k=0;k&lt;K;k++){\n        float32x4_t b_reg=vld1q_f32(&amp;B[k*N+j]);\n        a_reg_0 = *(a_ptr_0++);\n        a_reg_1 = *(a_ptr_1++);\n        a_reg_2 = *(a_ptr_2++);\n        a_reg_3 = *(a_ptr_3++);\n\n        c_sum_0=vmlaq_n_f32(c_sum_0,b_reg,a_reg_0);\n        c_sum_1=vmlaq_n_f32(c_sum_1,b_reg,a_reg_1);\n        c_sum_2=vmlaq_n_f32(c_sum_2,b_reg,a_reg_2);\n        c_sum_3=vmlaq_n_f32(c_sum_3,b_reg,a_reg_3);\n      }\n\n      vst1q_f32(&amp;out[i*N+j],c_sum_0);\n      vst1q_f32(&amp;out[(i+1)*N+j],c_sum_1);\n      vst1q_f32(&amp;out[(i+2)*N+j],c_sum_2);\n      vst1q_f32(&amp;out[(i+3)*N+j],c_sum_3);\n    }\n  }\n\n  for(;j&lt;N;j++){\n    float c_0=0.0f,c_1=0.0f,c_2=0.0f,c_3=0.0f;\n    for(int k=0;k&lt;K;k++){\n      c_0+=A[i*K+k]*B[k*N+j];\n      c_1+=A[(i+1)*K+k]*B[k*N+j];\n      c_3+=A[(i+2)*K+k]*B[k*N+j];\n    }\n    out[i*N+j]=c_0;\n    out[(i+1)*N+j]=c_1;\n    out[(i+2)*N+j]=c_2;\n    out[(i+3)*N+j]=c_3;\n  }\n  for (;i&lt;M;++i){\n    for(j=0;j&lt;((N)&amp;(~3));j+=4){  //\u6211\u91c7\u7528\u6a2a\u5411\u540c\u65f6\u8ba1\u7b97out\u4e2d\u7684\u56db\u4e2a\u503c\uff0cN\u6709\u53ef\u80fd\u4e0d\u662f4\u7684\u6574\u6570\u500d\n      float32x4_t c=vmovq_n_f32(0.0f);  //\u4eceout\u4e2d\u6a2a\u5411\u8fde\u7eed\u53d6\u51fa\u56db\u4e2a\u4f4d\u7f6e\n      for(int k=0;k&lt;K;++k){   \n        float a=A[i*K+k];  //\u5bf9\u4e8eA\u5c31\u662f\u5bf9\u7b2ci\u884c\u4e00\u4e2a\u4e2a\u53d6\uff0c\u4e00\u5171k\u4e2a\n        float32x4_t b=vld1q_f32(&amp;B[k*N+j]);  //\u5bf9\u4e8eB\u5c31\u662f\u7eb5\u5411\u4e00\u4e2a\u4e2a\u53d6\uff0c\u540c\u65f6\u53d64\u5217\uff0c\u4e00\u5171k\u4e2a\n        c=vmlaq_n_f32(c,b,a);  //\u505a\u4e58\u6cd5\n      }\n      vst1q_f32(&amp;out[i*N+j],c);  //\u628a\u5bc4\u5b58\u5668\u4e2d\u6570\u636e\u52a0\u8f7d\u56de\u5185\u5b58\n    }\n    for(;j&lt;N;++j){  //\u5904\u7406\u5269\u4f59\u7684\u8fb9\u754c\n      register float temp=0.0f;\n      for(int k=0;k&lt;K;++k){\n        temp+=A[i*K+k]*B[k*N+j];\n      }\n    out[i*N+j]=temp;\n    }\n  }\n}  \n</code></pre> \u6709\u4e86\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u8fd9\u4e2a\u7248\u672c\u7684\u5b9e\u73b0\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5c31\u662f\u628a\u4e4b\u524d\u7684\u64cd\u4f5c\u91cd\u590d\u56db\u6b21\uff1b\u5728\u5904\u7406\u8fb9\u754c\u7684\u65f6\u5019\u5bf9\u4e8e\u4e0d\u8db34\u5217\u7684\u90e8\u5206\u8fd8\u662f\u76f4\u63a5\u4f7f\u7528for\u5faa\u73af\u53bb\u7b97\uff0c\u5bf9\u4e8e\u4e0d\u8db34\u884c\u7684\u90e8\u5206\u5957\u7528\u4e86\u4e0a\u4e2a\u7248\u672c\u4e2d1\\(\\times\\)4\u7684\u77e9\u9635\u53bb\u505a  </p> <p>\u503c\u7684\u4e00\u63d0\u7684\u662f\uff0c\u5728\u6d4b\u8bd5\u6570\u636e\u4e2d\uff0c4\\(\\times\\)4\u7684\u7248\u672c\u6bd41\\(\\times\\)4\u7684\u7248\u672c\u80fd\u591f\u4f53\u73b0\u51fa\u4f18\u8d8a\u6027  </p> <p>\u6d4b\u8bd5\u7528\u4f8b\uff1a</p> <p></p> <p>\u6d4b\u8bd5\u7ed3\u679c\uff08\u5728winograd\u7b97\u6cd5\u4e2d\uff09\uff1a  </p> <p> </p> <p>\u7406\u8bba\u4e0a\u63a5\u4e0b\u8fd8\u53ef\u4ee5\u628a4\\(\\times\\)4\u62d3\u5c55\u52308\\(\\times\\)8\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u89c4\u6a21\u5927\u7684\u77e9\u9635\u63d0\u5347\u5e76\u4e0d\u660e\u663e\u3002\u800c\u4e14\u89c4\u6a21\u8d8a\u5927\u5bf9\u6548\u7387\u7684\u964d\u4f4e\u8d8a\u663e\u8457\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8eout\u4e2d\u540c\u884c\u4e0d\u540c\u5217\u7684\u5b50\u77e9\u9635\u505a\u8ba1\u7b97\u7684\u65f6\u5019\uff0cA\u4e2d4\\(\\times\\)k\u7684blocks\u8981\u88ab\u591a\u6b21\u52a0\u8f7d\uff0c\u800cA\u4e2d\u7684blocks\u6bcf\u6b21\u53d6\u51fa\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e0a\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u6bcf\u6b21\u52a0\u8f7d\u90fd\u4f1a\u9020\u6210\u4e00\u5b9a\u7684cache miss</p> <p>\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u505apacking\uff0c\u628aA\u4e2d4\\(\\times\\)k\u7684blocks\u7ed9packing\u81f3\u67d0\u7247\u8fde\u7eed\u7684\u533a\u57df\uff0c\u8fd9\u6837\u4e0b\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u5c31\u662f\u8fde\u7eed\u5185\u5b58\u4e86\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u51cf\u5c11cache miss\u7684\u6982\u7387  </p> <p>pakcing\u540e\u7684\u4ee3\u7801 <pre><code>void sgemm_parallel(const float *A, const float *B, float *out, const int M, const int K, const int N) {\n  int i,j,k;\n  for(i=0;i&lt;((M)&amp;(~3));i+=4){\n    for(j=0;j&lt;((N)&amp;(~3));j+=4){\n      float *a_ptr_0,*a_ptr_1,*a_ptr_2,*a_ptr_3;\n      /*a_ptr_0=&amp;A[i*K+0];\n      a_ptr_1=&amp;A[(i+1)*K+0];\n      a_ptr_2=&amp;A[(i+2)*K+0];\n      a_ptr_3=&amp;A[(i+3)*K+0];*/  //\u53ef\u4ee5packing\n\n      float packedA[K*4]={0.0f};\n      flaot* packedA_ptr=packedA;\n      if(j==0){\n        for(int k=0;k&lt;K;k++){  //\u76f8\u5f53\u4e8e\u5c06\u539f\u67654*K\u7684block\u8f6c\u7f6e\u6210\u4e86K*4\u7684block\n          *(packedA_ptr++)=A[i*K+0];\n          *(packedA_ptr++)=A[(i+1)*K+0];\n          *(packedA_ptr++)=A[(i+2)*K+0];\n          *(packedA_ptr++)=A[(i+3)*K+0];\n        }\n      }\n\n      /*float32x4_t c_sum_0={0};\n      float32x4_t c_sum_1={0};\n      float32x4_t c_sum_2={0};\n      float32x4_t c_sum_3={0};*/\n\n      float32x4_t c_sum={0.0f};\n\n      //float a_reg_0,a_reg_1,a_reg_2,a_reg_3;\n\n      for(int k=0;k&lt;K;k++){\n        float32x4_t b_reg=vld1q_f32(&amp;B[k*N+j]);\n        /*a_reg_0 = *(a_ptr_0++);\n        a_reg_1 = *(a_ptr_1++);\n        a_reg_2 = *(a_ptr_2++);\n        a_reg_3 = *(a_ptr_3++);*/\n        float32x4_t a_reg=vld1q_f32(&amp;packedA[k*4+0]);  //\u8fd9\u6837\u4e4b\u540e\u518d\u53d6\u5c31\u53ef\u4ee5\u7528vld1q\u56db\u4e2a\u56db\u4e2a\u76f4\u63a5\u53d6\n\n        /*c_sum_0=vmlaq_n_f32(c_sum_0,b_reg,a_reg_0);\n        c_sum_1=vmlaq_n_f32(c_sum_1,b_reg,a_reg_1);\n        c_sum_2=vmlaq_n_f32(c_sum_2,b_reg,a_reg_2);\n        c_sum_3=vmlaq_n_f32(c_sum_3,b_reg,a_reg_3);*/  \n\n        c_sum=vmul_f32(c_sum,a_reg,b_reg);  //\u540e\u9762\u7684\u8fd0\u7b97\u4e5f\u4e0d\u7528\u9010\u4f4d\u8ba1\u7b97\u4e86\n      }\n\n      /*vst1q_f32(&amp;out[i*N+j],c_sum_0);\n      vst1q_f32(&amp;out[(i+1)*N+j],c_sum_1);\n      vst1q_f32(&amp;out[(i+2)*N+j],c_sum_2);\n      vst1q_f32(&amp;out[(i+3)*N+j],c_sum_3);*/\n\n      vst1q_f32(&amp;out[i*N+j],c_sum);\n    }\n  }\n\n  for(;j&lt;N;j++){\n    float c_0=0.0f,c_1=0.0f,c_2=0.0f,c_3=0.0f;\n    for(int k=0;k&lt;K;k++){\n      c_0+=A[i*K+k]*B[k*N+j];\n      c_1+=A[(i+1)*K+k]*B[k*N+j];\n      c_3+=A[(i+2)*K+k]*B[k*N+j];\n    }\n    out[i*N+j]=c_0;\n    out[(i+1)*N+j]=c_1;\n    out[(i+2)*N+j]=c_2;\n    out[(i+3)*N+j]=c_3;\n  }\n  for (;i&lt;M;++i){\n    for(j=0;j&lt;((N)&amp;(~3));j+=4){  //\u6211\u91c7\u7528\u6a2a\u5411\u540c\u65f6\u8ba1\u7b97out\u4e2d\u7684\u56db\u4e2a\u503c\uff0cN\u6709\u53ef\u80fd\u4e0d\u662f4\u7684\u6574\u6570\u500d\n      float32x4_t c=vmovq_n_f32(0.0f);  //\u4eceout\u4e2d\u6a2a\u5411\u8fde\u7eed\u53d6\u51fa\u56db\u4e2a\u4f4d\u7f6e\n      for(int k=0;k&lt;K;++k){   \n        float a=A[i*K+k];  //\u5bf9\u4e8eA\u5c31\u662f\u5bf9\u7b2ci\u884c\u4e00\u4e2a\u4e2a\u53d6\uff0c\u4e00\u5171k\u4e2a\n        float32x4_t b=vld1q_f32(&amp;B[k*N+j]);  //\u5bf9\u4e8eB\u5c31\u662f\u7eb5\u5411\u4e00\u4e2a\u4e2a\u53d6\uff0c\u540c\u65f6\u53d64\u5217\uff0c\u4e00\u5171k\u4e2a\n        c=vmlaq_n_f32(c,b,a);  //\u505a\u4e58\u6cd5\n      }\n      vst1q_f32(&amp;out[i*N+j],c);  //\u628a\u5bc4\u5b58\u5668\u4e2d\u6570\u636e\u52a0\u8f7d\u56de\u5185\u5b58\n    }\n    for(;j&lt;N;++j){  //\u5904\u7406\u5269\u4f59\u7684\u8fb9\u754c\n      register float temp=0.0f;\n      for(int k=0;k&lt;K;++k){\n        temp+=A[i*K+k]*B[k*N+j];\n      }\n    out[i*N+j]=temp;\n    }\n  }\n}  \n</code></pre></p> <p>packing\u540e\u7684\u4ee3\u7801\u5728\u5c0f\u89c4\u6a21\u7684\u77e9\u9635\u4e0a\u6ca1\u6709\u4f18\u52bf\uff0c\u9700\u8981\u989d\u5916\u82b1packing\u7684\u5f00\u9500\uff0c\u4f46\u5728\u5927\u89c4\u6a21\u77e9\u9635\u4e0a\u6709\u660e\u663e\u4f18\u52bf\uff0c\u5bf9\u77e9\u9635\u89c4\u6a21\u7684\u654f\u611f\u5ea6\u4e0b\u964d\u3002\u7528\u4e0a\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u6d4b\u8bd5\uff0c\u901f\u5ea6\u5feb\u4e8e1\\(\\times\\)4\u5b50\u77e9\u9635\u7684\u7248\u672c\uff0c\u6162\u4e8e4\\(\\times\\)4\u5b50\u77e9\u9635\u7684\u7248\u672c\u3002  </p> <p>\u7406\u8bba\u4e0a\u8fd8\u53ef\u4ee5\u8fdb\u884cblocking\u4f18\u5316\uff0c\u4f46\u5bf9\u6027\u80fd\u7684\u63d0\u5347\u6709\u9650\uff0c\u6240\u4ee5sgemm\u7684\u4f18\u5316\u5c31\u6682\u544a\u6bb5\u843d\u3002  </p>"},{"location":"HPC%20101/PAC%20Note/PAC%20Notebook/#cpubench","title":"CPUbench","text":"<p>\u624b\u518c\u5176\u5b9e\u628a\u8fd9\u4e2a\u4e1c\u897f\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u8fb9\u770b\u8fb9\u6458\u51fa\u4e00\u70b9\u6765  </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/","title":"Computer Organization &amp; Design","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#chapter-1-computer-abstractions-and-technology","title":"Chapter 1: Computer abstractions and Technology","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#introduction","title":"Introduction","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#von-neumann-architecture","title":"von Neumann architecture","text":"<ul> <li>Computation and memory are separated</li> <li>Memory that stores data and instructions</li> <li>Input and output mechanisms</li> <li>Istructions set architecture</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#risc-architecture","title":"RISC Architecture","text":"<p>RISC(Reduce Instruction Set Computer): a computer instruction set - fewer cycles per instruction (CPI) than a Complex Instruction Set Computer(CISC)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#what-is-a-computer","title":"What is a computer","text":"<p>Computer is an electronic device that manipulates data according to a list of instructions(program), with capability of Turing machine.</p> <ul> <li>Electronic realization</li> <li>A set of instructions in a well-defined manners</li> <li>Excution of a pre-recorded list of instructions</li> <li>Memory that can store instructions and data</li> <li>Turing-complete in theory</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#computer-organization","title":"Computer Organization","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#hardware","title":"hardware","text":"<ul> <li>input</li> <li>ouput</li> <li>memory:</li> <li>Main Memory: volatile; used to hold programs while they are running(e.g. DRAM in computers)</li> <li>Second memory: nonvolatile; used to store programs and data between runs(e.g. Flash in PMD, magnetic discks)</li> <li>Volatile<ul> <li>DRAM(Dynamic Random Access Memory)</li> <li>SRAM(Static Random Access Memory)</li> </ul> </li> <li>Nonvolatile<ul> <li>Solid state memory(Flash Memory)</li> <li>Magnetic disk(Hard disk)</li> </ul> </li> <li>CPU(Processor): active part of the computer, which adds numbers, test numbers, signals I/O devices to activate, and so on.</li> <li>datapath: performs arithmetic operation</li> <li>control: commands the datapath, memory, and I/O devices according to the instructions of the program</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#software","title":"Software","text":"<ul> <li>Application software</li> <li>System software</li> <li>Operation system(Linux, macos)</li> <li>Compiler: Translation of a program written in HLL(e.g. GCC)</li> <li>Firmware: Software specially designed for a piece of hardware(Driver software) </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#from-a-high-level-language-to-the-language-of-hardware","title":"From a High-Level Language to the Language of Hardware","text":"<ul> <li>Lower-level details are hidden to higher levels</li> <li>Instruction set architecture ---- the interface between hardware and lowest-level software</li> <li>Many implementations of varying cost and performance can run identical software</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#integrated-circuits","title":"Integrated Circuits","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#transistor","title":"Transistor","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#manufacturing-ics","title":"Manufacturing ICs","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#integrated-circuit-cost","title":"Integrated Circuit Cost","text":"<p>Yield: proportion of working dies per wafer</p> <p></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#performance-and-idea","title":"Performance and Idea","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#response-time-and-throughput","title":"Response Time and Throughput","text":"<ul> <li>Response time/execution time: How long it takes to do a task</li> <li>Throughput(bandwidth): Total work done per unit time</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#relative-performance","title":"Relative Performance","text":"<p>Performance = 1 / Excution Time</p> <p>e.g. 10s on A, 15s on B Excution Time<sub>B</sub> / Excution Time<sub>A</sub> / = 15s / 10s = 1.5 So A is 1.5 times faster than B  </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#measuring-excution-time","title":"Measuring Excution Time","text":"<ul> <li>Elapsed time: Total response time, including all aspects  </li> <li>Processing, I/O, OS overhead, idle time  </li> <li>CPU time: Time spent porcessing a given job  </li> </ul> <p>Operation of digital harware governed by a constant-rate clock</p> <p></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#cpu-time","title":"CPU Time","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#instruction-count-and-cpicycles-per-instruction","title":"Instruction Count and CPI(Cycles per Instruction)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#cpi-in-more-detail","title":"CPI in More Detail","text":"<p>If different instruction classes take diferrent numbers of cycles</p> <p></p> <p></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#performance-summary","title":"Performance Summary","text":"<p>Performance depends on: - Algorithm: affects IC, possibly CPI - Programming language: affects IC, CPI - Compiler: affects IC, CPI - Instruction set architecture: affects IC, CPI, T<sub>c</sub></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#amdahls-law","title":"Amdahl's Law","text":"<p>Corollary: make the common case fast</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#eight-great-ideas","title":"Eight Great Ideas","text":"<ul> <li>Design for Moore's Law  </li> <li>Use Abstraction to Simplify Design  </li> <li>Make the Common Case Fast</li> <li>Performance via Parallelism  </li> <li>Performance via Pipelining  </li> <li>Performance via Prediction  </li> <li>Hierarchy of Memories  </li> <li>Dependability via Redundancy  </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#chapter-3-arithmetic-for-computer","title":"Chapter 3: Arithmetic for Computer","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#introduction_1","title":"Introduction","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#generic-implementation","title":"Generic Implementation","text":"<ul> <li>use program counter (PC) to link to instruction address  </li> <li>fetch the instrcution from memeory  </li> <li>the instruction tells what needs to be done  </li> <li>ALU will perform the specified arithmetic operations  </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#signed-number-representations","title":"Signed Number Representations","text":"Sign Magnitude Two's Complement 100 = -0 100 = -4 101 = -1 101 = -3 110 = -2 110 = -2 111 = -3 111 = -1"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#addition-subtraction-and-alu","title":"Addition, subtraction and ALU","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#addition-subtraction","title":"Addition &amp; Subtraction","text":"<p>Subtraction: Addition of 2's complement  </p> <p> </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#overflow-conditions","title":"Overflow conditions","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#overflow-process","title":"Overflow process","text":"<ul> <li>Hardware detection in the ALU  </li> <li>Generation of an exception (interrupt)  </li> <li>Save the instruction address (not PC) in special register EPC  </li> <li>Jump to specific routine in OS  </li> <li>Correct &amp; return to program  </li> <li>Return to program with error code  </li> <li>Abort program  </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#consturcting-an-alu","title":"Consturcting an ALU","text":"<p>1-bit Full Adder Ripple Carry Adder, RCA</p> <p></p> <p>with a mux, we can let it support and, or, +, etc.  </p> <p></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#extended-1-bit-alu-subtraction","title":"Extended 1-bit ALU-- Subtraction","text":"<p>\\({a - b} = {a + (-b) = a + \\overline{b} + 1}\\) </p> <p> </p> <p><code>Binvert</code> to define whether b should be inverted; if we do subtraction, we should set <code>Binvert</code> and <code>CarryIn</code> as <code>1</code>, <code>Operation</code> as <code>2</code> </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#extended-1-bit-alu-comparison","title":"Extended 1 bit ALU-- comparison","text":"<p>Subtraction \\(({rs - rt})\\) Use of sign bit as indicator  </p> <p> </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#complete-alu","title":"Complete ALU","text":"<ul> <li>Overflow </li> <li>should only be done at Most Significant Bit (ALU63)  </li> <li>if \\({C_{in} \\bigoplus {C_{out} = 1}}\\), overflow occurs  </li> <li>Less &amp; Set </li> <li><code>slt rd, rs1, rs2</code> </li> <li>the final result should be given to <code>Result[0]</code> (Least Significant Bit), <code>Result[1:63] = 0</code></li> <li><code>Less</code> of ALU0 is given by <code>Set</code> of ALU63, orther <code>Less</code> is 0  </li> <li></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#a-bit-of-optimization","title":"A bit of optimization","text":"<ol> <li>If doing <code>+</code> , <code>Binvert</code> &amp; <code>CarryIn</code> of ALU0 is 0; if doing <code>-</code> , <code>Binvert</code> &amp; <code>CarryIn</code> of ALU0 is 1. They can be merged as <code>Bnegate</code>.   </li> <li>Add a zero detector for operations like <code>beq</code> , <code>bne</code> </li> </ol> <p>We need 4-bits control lines, consisting of <code>Ainvert</code> , <code>Bnegate</code> , <code>Operation</code> (2-bits)  </p> <p> </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#a-little-bit-faster","title":"A little bit faster","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%AE%A1%E7%BB%84%20notebook/notebook/#carry-lookahead-adder-cla","title":"Carry Lookahead Adder, CLA","text":"<p>Time is wasted in RCA, for the next adder should wait for the previous adder to carry.</p> <p>Their are only two possibilities for \\({carry = 1}\\) (carry is passed): \\({a = b = 1}\\) or \\({a \\bigoplus b = 1, carry = 1}\\) </p> <p>Therfore, we have,  </p> <p>\\({C_{out} = a \\cdot b + (a + b)\\cdot c_{in}}\\) ==&gt; \\({C_{out} = g + p\\cdot c_{in}}\\)  (\\({generate g = a \\cdot b, propagate p = a + b}\\))  </p> <p> </p>"}]}